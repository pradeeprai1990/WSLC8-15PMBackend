{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/next/dist/compiled/next-server/server.runtime.prod.js","sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/node_modules/.pnpm/react%4019.2.0-canary-0bdb9206-20250818/node_modules/react/cjs/react.production.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/node_modules/.pnpm/react%4019.2.0-canary-0bdb9206-20250818/node_modules/react/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next-env/dist/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/%40edge-runtime/cookies/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/cookie/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/fresh/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/p-queue/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/path-to-regexp/index.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-baseline.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-polyfill-crypto.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/isomorphic/path.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/modern-browserslist-target.js","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/compiled/superstruct/index.cjs","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/webpack/runtime/compat_get_default_export","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/webpack/runtime/define_property_getters","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/webpack/runtime/has_own_property","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/webpack/runtime/make_namespace_object","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/web-crypto.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/source-maps.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/picocolors.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/lru-cache.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/parse-stack.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/is-internal.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/patch-error-inspect.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/error-inspect.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/next-devtools/server/shared.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/dynamic-rendering-utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/invariant-error.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/dynamic-rendering.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/utils.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/random.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/date.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/node-environment-extensions/node-crypto.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/require-hook.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/route-pattern-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/route-match-utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/request-meta.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/constants.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/find-pages-dir.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/adapters/reflect.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/adapters/headers.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/constants.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/api-utils/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/client/components/redirect-status-code.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/api-utils/get-cookie-parser.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/base-http/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/base-http/node.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/send-payload.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/cache-control.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/etag.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/querystring.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/parse-url.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/parse-relative-url.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/build/output/log.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/is-ipv6.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/page-path/ensure-leading-slash.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/app-paths.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/segment.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/interception-routes.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/is-dynamic.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/html-bots.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/is-bot.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/stream-utils/node-web-streams-helper.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/stream-utils/encoded-tags.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/remove-trailing-slash.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/parse-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/add-path-prefix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/add-path-suffix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/path-has-prefix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/get-hostname.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/i18n/normalize-locale-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/remove-path-prefix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/get-next-pathname-info.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/next-url.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/i18n/detect-domain-locale.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/format-next-pathname-info.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/add-locale.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/error.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/request.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/adapters/next-request.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/detached-promise.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/trace/constants.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/client-component-renderer-logger.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/pipe-readable.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/render-result.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/page-path/normalize-path-sep.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/page-path/denormalize-page-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/path-match.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/escape-regexp.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/get-dynamic-param.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/route-regex.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/prepare-destination.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/decode-query-path-parameter.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/format-url.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/types.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/client/components/app-router-headers.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/generate-interception-routes-rewrites.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/server-utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/is-error.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/is-plain-object.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/locale-route-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/sorted-routes.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/locale-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-managers/default-route-matcher-manager.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/normalizers.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/prefixing-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/page-path/normalize-page-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/underscore-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/app/app-bundle-path-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/app/app-filename-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/is-app-route-route.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/metadata/is-metadata-route.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/wrap-normalizer-fn.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/app/app-pathname-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/app/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-kind.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/app-page-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/helpers/cached-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/manifest-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/app-page-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/is-app-page-route.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/app-route-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/app-route-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/is-api-route.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/pages-api-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/pages/pages-bundle-path-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/pages/pages-filename-normalizer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/built/pages/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/pages-api-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matchers/pages-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/pages-route-matcher-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/i18n-provider.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/send-response.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/match-next-data-pathname.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/suffix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/rsc.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/prefetch-rsc.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/prefix.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/next-data.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/to-route.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/async-local-storage.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/after/builtin-request-context.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/fetch-event.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/response.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/spec-extension/adapters/request-cookies.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/use-cache/handlers.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/web/adapter.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/normalizers/request/segment-prefix-rsc.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/base-server.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/strip-flight-headers.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/get-route-from-asset-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/format-hostname.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/experimental/ppr.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/patch-set-header.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/fix-mojibake.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/client/components/router-reducer/compute-changed-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/parse-and-validate-flight-router-state.tsx","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/url.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/streaming-metadata.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/fallback.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/server-action-request-meta.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-modules/checks.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/require.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/interop-default.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/wait.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/encryption-utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/load-components.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/app-render/action-utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/shared/lib/router/utils/middleware-route-matcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/batcher.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/scheduler.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/response-cache/types.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/response-cache/utils.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/response-cache/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/multi-file-writer.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/incremental-cache/file-system-cache.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/incremental-cache/index.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/node-fs-methods.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/mock-request.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/format-dynamic-import-path.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/async-callback-set.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/router-utils/is-postpone.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/module-loader/node-module-loader.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/lib/router-utils/router-server-context.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/next-server.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/route-matches/pages-api-route-match.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/setup-http-agent-env.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/lib/static-env.ts","file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/dist/compiled/next-server/webpack%3A/next/dist/src/server/body-streams.ts"],"sourcesContent":["/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray;\nfunction noop() {}\nvar ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, props) {\n  var refProp = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== refProp ? refProp : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(oldElement.type, newKey, oldElement.props);\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cacheSignal = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(()=>{var e={383:e=>{\"use strict\";function _searchLast(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function _interpolate(e,t,n){const r=_searchLast(e,/(?!(?<=\\\\))\\$/g);if(r===-1)return e;const o=e.slice(r);const s=/((?!(?<=\\\\))\\${?([\\w]+)(?::-([^}\\\\]*))?}?)/;const i=o.match(s);if(i!=null){const[,r,o,s]=i;return _interpolate(e.replace(r,t[o]||s||n.parsed[o]||\"\"),t,n)}return e}function _resolveEscapeSequences(e){return e.replace(/\\\\\\$/g,\"$\")}function expand(e){const t=e.ignoreProcessEnv?{}:process.env;for(const n in e.parsed){const r=Object.prototype.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=_resolveEscapeSequences(_interpolate(r,t,e))}for(const n in e.parsed){t[n]=e.parsed[n]}return e}e.exports.j=expand},234:(e,t,n)=>{const r=n(147);const o=n(17);const s=n(37);const i=n(113);const c=n(803);const a=c.version;const p=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let n=e.toString();n=n.replace(/\\r\\n?/gm,\"\\n\");let r;while((r=p.exec(n))!=null){const e=r[1];let n=r[2]||\"\";n=n.trim();const o=n[0];n=n.replace(/^(['\"`])([\\s\\S]*)\\1$/gm,\"$2\");if(o==='\"'){n=n.replace(/\\\\n/g,\"\\n\");n=n.replace(/\\\\r/g,\"\\r\")}t[e]=n}return t}function _parseVault(e){const t=_vaultPath(e);const n=l.configDotenv({path:t});if(!n.parsed){throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`)}const r=_dotenvKey(e).split(\",\");const o=r.length;let s;for(let e=0;e<o;e++){try{const t=r[e].trim();const o=_instructions(n,t);s=l.decrypt(o.ciphertext,o.key);break}catch(t){if(e+1>=o){throw t}}}return l.parse(s)}function _log(e){console.log(`[dotenv@${a}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${a}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return\"\"}function _instructions(e,t){let n;try{n=new URL(t)}catch(e){if(e.code===\"ERR_INVALID_URL\"){throw new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development\")}throw e}const r=n.password;if(!r){throw new Error(\"INVALID_DOTENV_KEY: Missing key part\")}const o=n.searchParams.get(\"environment\");if(!o){throw new Error(\"INVALID_DOTENV_KEY: Missing environment part\")}const s=`DOTENV_VAULT_${o.toUpperCase()}`;const i=e.parsed[s];if(!i){throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`)}return{ciphertext:i,key:r}}function _vaultPath(e){let t=o.resolve(process.cwd(),\".env\");if(e&&e.path&&e.path.length>0){t=e.path}return t.endsWith(\".vault\")?t:`${t}.vault`}function _resolveHome(e){return e[0]===\"~\"?o.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log(\"Loading env from encrypted .env.vault\");const t=l._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}l.populate(n,t,e);return{parsed:t}}function configDotenv(e){let t=o.resolve(process.cwd(),\".env\");let n=\"utf8\";const s=Boolean(e&&e.debug);if(e){if(e.path!=null){t=_resolveHome(e.path)}if(e.encoding!=null){n=e.encoding}}try{const o=l.parse(r.readFileSync(t,{encoding:n}));let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}l.populate(s,o,e);return{parsed:o}}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}return{error:e}}}function config(e){const t=_vaultPath(e);if(_dotenvKey(e).length===0){return l.configDotenv(e)}if(!r.existsSync(t)){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const n=Buffer.from(t.slice(-64),\"hex\");let r=Buffer.from(e,\"base64\");const o=r.slice(0,12);const s=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv(\"aes-256-gcm\",n,o);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const n=e.message===\"Invalid key length\";const r=e.message===\"Unsupported state or unable to authenticate data\";if(t||n){const e=\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\";throw new Error(e)}else if(r){const e=\"DECRYPTION_FAILED: Please check your DOTENV_KEY\";throw new Error(e)}else{console.error(\"Error: \",e.code);console.error(\"Error: \",e.message);throw e}}}function populate(e,t,n={}){const r=Boolean(n&&n.debug);const o=Boolean(n&&n.override);if(typeof t!==\"object\"){throw new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\")}for(const n of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,n)){if(o===true){e[n]=t[n]}if(r){if(o===true){_debug(`\"${n}\" is already defined and WAS overwritten`)}else{_debug(`\"${n}\" is already defined and was NOT overwritten`)}}}else{e[n]=t[n]}}}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},113:e=>{\"use strict\";e.exports=require(\"crypto\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},803:e=>{\"use strict\";e.exports=JSON.parse('{\"name\":\"dotenv\",\"version\":\"16.3.1\",\"description\":\"Loads environment variables from .env file\",\"main\":\"lib/main.js\",\"types\":\"lib/main.d.ts\",\"exports\":{\".\":{\"types\":\"./lib/main.d.ts\",\"require\":\"./lib/main.js\",\"default\":\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},\"scripts\":{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",\"lint\":\"standard\",\"lint-readme\":\"standard-markdown\",\"pretest\":\"npm run lint && npm run dts-check\",\"test\":\"tap tests/*.js --100 -Rspec\",\"prerelease\":\"npm test\",\"release\":\"standard-version\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/motdotla/dotenv.git\"},\"funding\":\"https://github.com/motdotla/dotenv?sponsor=1\",\"keywords\":[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],\"readmeFilename\":\"README.md\",\"license\":\"BSD-2-Clause\",\"devDependencies\":{\"@definitelytyped/dtslint\":\"^0.0.133\",\"@types/node\":\"^18.11.3\",\"decache\":\"^4.6.1\",\"sinon\":\"^14.0.1\",\"standard\":\"^17.0.0\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.5.0\",\"tap\":\"^16.3.0\",\"tar\":\"^6.1.11\",\"typescript\":\"^4.8.4\"},\"engines\":{\"node\":\">=12\"},\"browser\":{\"fs\":false}}')}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e[\"default\"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!==\"undefined\"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"})}Object.defineProperty(e,\"__esModule\",{value:true})}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{\"use strict\";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{initialEnv:()=>a,updateInitialEnv:()=>updateInitialEnv,processEnv:()=>processEnv,resetEnv:()=>resetEnv,loadEnvConfig:()=>loadEnvConfig});var e=__nccwpck_require__(147);var t=__nccwpck_require__.n(e);var r=__nccwpck_require__(17);var o=__nccwpck_require__.n(r);var s=__nccwpck_require__(234);var i=__nccwpck_require__.n(s);var c=__nccwpck_require__(383);let a=undefined;let p=undefined;let l=undefined;let u=[];let _=[];function updateInitialEnv(e){Object.assign(a||{},e)}function replaceProcessEnv(e){Object.keys(process.env).forEach((t=>{if(!t.startsWith(\"__NEXT_PRIVATE\")){if(e[t]===undefined||e[t]===\"\"){delete process.env[t]}}}));Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function processEnv(e,t,n=console,o=false,i){var p;if(!a){a=Object.assign({},process.env)}if(!o&&(process.env.__NEXT_PROCESSED_ENV||e.length===0)){return[process.env]}process.env.__NEXT_PROCESSED_ENV=\"true\";const l=Object.assign({},a);const u={};for(const o of e){try{let e={};e.parsed=s.parse(o.contents);e=(0,c.j)(e);if(e.parsed&&!_.some((e=>e.contents===o.contents&&e.path===o.path))){i===null||i===void 0?void 0:i(o.path)}for(const t of Object.keys(e.parsed||{})){if(typeof u[t]===\"undefined\"&&typeof l[t]===\"undefined\"){u[t]=(p=e.parsed)===null||p===void 0?void 0:p[t]}}o.env=e.parsed||{}}catch(e){n.error(`Failed to load env from ${r.join(t||\"\",o.path)}`,e)}}return[Object.assign(process.env,u),u]}function resetEnv(){if(a){replaceProcessEnv(a)}}function loadEnvConfig(t,n,o=console,s=false,i){if(!a){a=Object.assign({},process.env)}if(p&&!s){return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}replaceProcessEnv(a);_=u;u=[];const c=process.env.NODE_ENV===\"test\";const d=c?\"test\":n?\"development\":\"production\";const f=[`.env.${d}.local`,d!==\"test\"&&`.env.local`,`.env.${d}`,\".env\"].filter(Boolean);for(const n of f){const s=r.join(t,n);try{const t=e.statSync(s);if(!t.isFile()&&!t.isFIFO()){continue}const r=e.readFileSync(s,\"utf8\");u.push({path:n,contents:r,env:{}})}catch(e){if(e.code!==\"ENOENT\"){o.error(`Failed to load env from ${n}`,e)}}}[p,l]=processEnv(u,t,o,s,i);return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}})();module.exports=n})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","// This file should be imported before any others. It sets up the environment\n// for later imports to work properly.\n\n// expose AsyncLocalStorage on global for react usage if it isn't already provided by the environment\nif (typeof (globalThis as any).AsyncLocalStorage !== 'function') {\n  const { AsyncLocalStorage } =\n    require('async_hooks') as typeof import('async_hooks')\n  ;(globalThis as any).AsyncLocalStorage = AsyncLocalStorage\n}\n\nif (typeof (globalThis as any).WebSocket !== 'function') {\n  Object.defineProperty(globalThis, 'WebSocket', {\n    configurable: true,\n    get() {\n      return (\n        require('next/dist/compiled/ws') as typeof import('next/dist/compiled/ws')\n      ).WebSocket\n    },\n    set(value) {\n      Object.defineProperty(globalThis, 'WebSocket', {\n        configurable: true,\n        writable: true,\n        value,\n      })\n    },\n  })\n}\n","// Polyfill crypto() in the Node.js environment\n\nif (!global.crypto) {\n  let webcrypto: Crypto | undefined\n\n  Object.defineProperty(global, 'crypto', {\n    enumerable: false,\n    configurable: true,\n    get() {\n      if (!webcrypto) {\n        // @ts-expect-error -- TODO: Is this actually safe?\n        webcrypto = (require('node:crypto') as typeof import('node:crypto'))\n          .webcrypto\n      }\n      return webcrypto\n    },\n    set(value: Crypto) {\n      webcrypto = value\n    },\n  })\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();","// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * We extend Web Crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When cacheComponents is enabled. Random bytes are a form of IO even if they resolve synchronously. When cacheComponents is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nlet webCrypto: typeof crypto\nif (process.env.NEXT_RUNTIME === 'edge') {\n  webCrypto = crypto\n} else {\n  if (typeof crypto === 'undefined') {\n    // @ts-expect-error -- TODO: Is this actually safe?\n    webCrypto = (require('node:crypto') as typeof import('node:crypto'))\n      .webcrypto\n  } else {\n    webCrypto = crypto\n  }\n}\n\nconst getRandomValuesExpression = '`crypto.getRandomValues()`'\ntry {\n  const _getRandomValues = webCrypto.getRandomValues\n  webCrypto.getRandomValues = function getRandomValues() {\n    io(getRandomValuesExpression, 'crypto')\n    return _getRandomValues.apply(webCrypto, arguments as any)\n  }\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n\nconst randomUUIDExpression = '`crypto.randomUUID()`'\ntry {\n  const _randomUUID = webCrypto.randomUUID\n  webCrypto.randomUUID = function randomUUID() {\n    io(randomUUIDExpression, 'crypto')\n    return _randomUUID.apply(webCrypto, arguments as any)\n  } as typeof _randomUUID\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","import type { SourceMap } from 'module'\nimport { LRUCache } from './lru-cache'\n\nfunction noSourceMap(): SourceMap | undefined {\n  return undefined\n}\n\n// Edge runtime does not implement `module`\nconst nativeFindSourceMap =\n  process.env.NEXT_RUNTIME === 'edge'\n    ? noSourceMap\n    : (require('module') as typeof import('module')).findSourceMap\n\n/**\n * https://tc39.es/source-map/#index-map\n */\ninterface IndexSourceMapSection {\n  offset: {\n    line: number\n    column: number\n  }\n  map: BasicSourceMapPayload\n}\n\n// TODO(veil): Upstream types\n/** https://tc39.es/ecma426/#sec-index-source-map */\ninterface IndexSourceMap {\n  version: number\n  file: string\n  sections: IndexSourceMapSection[]\n}\n\n/** https://tc39.es/ecma426/#sec-source-map-format */\nexport interface BasicSourceMapPayload {\n  version: number\n  // TODO: Move to https://github.com/jridgewell/sourcemaps which is actively maintained\n  /** WARNING: `file` is optional. */\n  file: string\n  sourceRoot?: string\n  // TODO: Move to https://github.com/jridgewell/sourcemaps which is actively maintained\n  /** WARNING: `sources[number]` can be `null`. */\n  sources: Array<string>\n  names: Array<string>\n  mappings: string\n  ignoreList?: number[]\n}\n\nexport type ModernSourceMapPayload = BasicSourceMapPayload | IndexSourceMap\n\nexport function sourceMapIgnoreListsEverything(\n  sourceMap: BasicSourceMapPayload\n): boolean {\n  return (\n    sourceMap.ignoreList !== undefined &&\n    sourceMap.sources.length === sourceMap.ignoreList.length\n  )\n}\n\n/**\n * Finds the sourcemap payload applicable to a given frame.\n * Equal to the input unless an Index Source Map is used.\n * @param line0 - The line number of the frame, 0-based.\n * @param column0 - The column number of the frame, 0-based.\n */\nexport function findApplicableSourceMapPayload(\n  line0: number,\n  column0: number,\n  payload: ModernSourceMapPayload\n): BasicSourceMapPayload | undefined {\n  if ('sections' in payload) {\n    if (payload.sections.length === 0) {\n      return undefined\n    }\n\n    // Sections must not overlap and must be sorted: https://tc39.es/source-map/#section-object\n    // Therefore the last section that has an offset less than or equal to the frame is the applicable one.\n    const sections = payload.sections\n    let left = 0\n    let right = sections.length - 1\n    let result: IndexSourceMapSection | null = null\n\n    while (left <= right) {\n      // fast Math.floor\n      const middle = ~~((left + right) / 2)\n      const section = sections[middle]\n      const offset = section.offset\n\n      if (\n        offset.line < line0 ||\n        (offset.line === line0 && offset.column <= column0)\n      ) {\n        result = section\n        left = middle + 1\n      } else {\n        right = middle - 1\n      }\n    }\n\n    return result === null ? undefined : result.map\n  } else {\n    return payload\n  }\n}\n\nconst didWarnAboutInvalidSourceMapDEV = new Set<string>()\n\nconst findSourceMap: (scriptNameOrSourceURL: string) => SourceMap | undefined =\n  process.env.NEXT_RUNTIME === 'nodejs' &&\n  process.versions.node?.startsWith('18')\n    ? // Node.js 18 has a horribly slow `findSourceMap` implementation\n      noSourceMap\n    : nativeFindSourceMap\n\nexport function filterStackFrameDEV(\n  sourceURL: string,\n  functionName: string,\n  line1: number,\n  column1: number\n): boolean {\n  if (sourceURL === '') {\n    // The default implementation filters out <anonymous> stack frames\n    // but we want to retain them because current Server Components and\n    // built-in Components in parent stacks don't have source location.\n    // Filter out frames that show up in Promises to get good names in React's\n    // Server Request track until we come up with a better heuristic.\n    return functionName !== 'new Promise'\n  }\n  if (sourceURL.startsWith('node:') || sourceURL.includes('node_modules')) {\n    return false\n  }\n  try {\n    // Node.js loads source maps eagerly so this call is cheap.\n    // TODO: ESM sourcemaps are O(1) but CommonJS sourcemaps are O(Number of CJS modules).\n    // Make sure this doesn't adversely affect performance when CJS is used by Next.js.\n    const sourceMap = findSourceMap(sourceURL)\n    if (sourceMap === undefined) {\n      // No source map assoicated.\n      // TODO: Node.js types should reflect that `findSourceMap` can return `undefined`.\n      return true\n    }\n    const sourceMapPayload = findApplicableSourceMapPayload(\n      line1 - 1,\n      column1 - 1,\n      sourceMap.payload\n    )\n    if (sourceMapPayload === undefined) {\n      // No source map section applicable to the frame.\n      return true\n    }\n    return !sourceMapIgnoreListsEverything(sourceMapPayload)\n  } catch (cause) {\n    if (process.env.NODE_ENV !== 'production') {\n      // TODO: Share cache with patch-error-inspect\n      if (!didWarnAboutInvalidSourceMapDEV.has(sourceURL)) {\n        didWarnAboutInvalidSourceMapDEV.add(sourceURL)\n        // We should not log an actual error instance here because that will re-enter\n        // this codepath during error inspection and could lead to infinite recursion.\n        console.error(\n          `${sourceURL}: Invalid source map. Only conformant source maps can be used to filter stack frames. Cause: ${cause}`\n        )\n      }\n    }\n\n    return true\n  }\n}\n\nconst invalidSourceMap = Symbol('invalid-source-map')\nconst sourceMapURLs = new LRUCache<string | typeof invalidSourceMap>(\n  512 * 1024 * 1024,\n  (url) =>\n    url === invalidSourceMap\n      ? // Ideally we'd account for key length. So we just guestimate a small source map\n        // so that we don't create a huge cache with empty source maps.\n        8 * 1024\n      : // these URLs contain only ASCII characters so .length is equal to Buffer.byteLength\n        url.length\n)\nexport function findSourceMapURLDEV(\n  scriptNameOrSourceURL: string\n): string | null {\n  let sourceMapURL = sourceMapURLs.get(scriptNameOrSourceURL)\n  if (sourceMapURL === undefined) {\n    let sourceMapPayload: ModernSourceMapPayload | undefined\n    try {\n      sourceMapPayload = findSourceMap(scriptNameOrSourceURL)?.payload\n    } catch (cause) {\n      console.error(\n        `${scriptNameOrSourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n    }\n\n    if (sourceMapPayload === undefined) {\n      sourceMapURL = invalidSourceMap\n    } else {\n      // TODO: Might be more efficient to extract the relevant section from Index Maps.\n      // Unclear if that search is worth the smaller payload we have to stringify.\n      const sourceMapJSON = JSON.stringify(sourceMapPayload)\n      const sourceMapURLData = Buffer.from(sourceMapJSON, 'utf8').toString(\n        'base64'\n      )\n      sourceMapURL = `data:application/json;base64,${sourceMapURLData}`\n    }\n\n    sourceMapURLs.set(scriptNameOrSourceURL, sourceMapURL)\n  }\n\n  return sourceMapURL === invalidSourceMap ? null : sourceMapURL\n}\n\nexport function devirtualizeReactServerURL(sourceURL: string): string {\n  if (sourceURL.startsWith('about://React/')) {\n    // about://React/Server/file://<filename>?42 => file://<filename>\n    const envIdx = sourceURL.indexOf('/', 'about://React/'.length)\n    const suffixIdx = sourceURL.lastIndexOf('?')\n    if (envIdx > -1 && suffixIdx > -1) {\n      return decodeURI(sourceURL.slice(envIdx + 1, suffixIdx))\n    }\n  }\n  return sourceURL\n}\n\nfunction isAnonymousFrameLikelyJSNative(methodName: string): boolean {\n  // Anonymous frames can also be produced in React parent stacks either from\n  // host components or Server Components. We don't want to ignore those.\n  // This could hide user-space methods that are named like native JS methods but\n  // should you really do that?\n  return (\n    // e.g. JSON.parse\n    methodName.startsWith('JSON.') ||\n    // E.g. Promise.withResolves\n    methodName.startsWith('Function.') ||\n    // various JS built-ins\n    methodName.startsWith('Promise.') ||\n    methodName.startsWith('Array.') ||\n    methodName.startsWith('Set.') ||\n    methodName.startsWith('Map.')\n  )\n}\n\nexport function ignoreListAnonymousStackFramesIfSandwiched<Frame>(\n  frames: Frame[],\n  isAnonymousFrame: (frame: Frame) => boolean,\n  isIgnoredFrame: (frame: Frame) => boolean,\n  getMethodName: (frame: Frame) => string,\n  /** only passes frames for which `isAnonymousFrame` and their method is a native JS method or `isIgnoredFrame` return true */\n  ignoreFrame: (frame: Frame) => void\n): void {\n  for (let i = 1; i < frames.length; i++) {\n    const currentFrame = frames[i]\n    if (\n      !(\n        isAnonymousFrame(currentFrame) &&\n        isAnonymousFrameLikelyJSNative(getMethodName(currentFrame))\n      )\n    ) {\n      continue\n    }\n\n    const previousFrameIsIgnored = isIgnoredFrame(frames[i - 1])\n    if (previousFrameIsIgnored && i < frames.length - 1) {\n      let ignoreSandwich = false\n      let j = i + 1\n      for (j; j < frames.length; j++) {\n        const nextFrame = frames[j]\n        const nextFrameIsAnonymous =\n          isAnonymousFrame(nextFrame) &&\n          isAnonymousFrameLikelyJSNative(getMethodName(nextFrame))\n        if (nextFrameIsAnonymous) {\n          continue\n        }\n\n        const nextFrameIsIgnored = isIgnoredFrame(nextFrame)\n        if (nextFrameIsIgnored) {\n          ignoreSandwich = true\n          break\n        }\n      }\n\n      if (ignoreSandwich) {\n        for (i; i < j; i++) {\n          ignoreFrame(frames[i])\n        }\n      }\n    }\n  }\n}\n","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","/**\n * Node in the doubly-linked list used for LRU tracking.\n * Each node represents a cache entry with bidirectional pointers.\n */\nclass LRUNode<T> {\n  public readonly key: string\n  public data: T\n  public size: number\n  public prev: LRUNode<T> | SentinelNode<T> | null = null\n  public next: LRUNode<T> | SentinelNode<T> | null = null\n\n  constructor(key: string, data: T, size: number) {\n    this.key = key\n    this.data = data\n    this.size = size\n  }\n}\n\n/**\n * Sentinel node used for head/tail boundaries.\n * These nodes don't contain actual cache data but simplify list operations.\n */\nclass SentinelNode<T> {\n  public prev: LRUNode<T> | SentinelNode<T> | null = null\n  public next: LRUNode<T> | SentinelNode<T> | null = null\n}\n\n/**\n * LRU (Least Recently Used) Cache implementation using a doubly-linked list\n * and hash map for O(1) operations.\n *\n * Algorithm:\n * - Uses a doubly-linked list to maintain access order (most recent at head)\n * - Hash map provides O(1) key-to-node lookup\n * - Sentinel head/tail nodes simplify edge case handling\n * - Size-based eviction supports custom size calculation functions\n *\n * Data Structure Layout:\n * HEAD <-> [most recent] <-> ... <-> [least recent] <-> TAIL\n *\n * Operations:\n * - get(): Move accessed node to head (mark as most recent)\n * - set(): Add new node at head, evict from tail if over capacity\n * - Eviction: Remove least recent node (tail.prev) when size exceeds limit\n */\nexport class LRUCache<T> {\n  private readonly cache: Map<string, LRUNode<T>> = new Map()\n  private readonly head: SentinelNode<T>\n  private readonly tail: SentinelNode<T>\n  private totalSize: number = 0\n  private readonly maxSize: number\n  private readonly calculateSize: ((value: T) => number) | undefined\n\n  constructor(maxSize: number, calculateSize?: (value: T) => number) {\n    this.maxSize = maxSize\n    this.calculateSize = calculateSize\n\n    // Create sentinel nodes to simplify doubly-linked list operations\n    // HEAD <-> TAIL (empty list)\n    this.head = new SentinelNode<T>()\n    this.tail = new SentinelNode<T>()\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  /**\n   * Adds a node immediately after the head (marks as most recently used).\n   * Used when inserting new items or when an item is accessed.\n   * PRECONDITION: node must be disconnected (prev/next should be null)\n   */\n  private addToHead(node: LRUNode<T>): void {\n    node.prev = this.head\n    node.next = this.head.next\n    // head.next is always non-null (points to tail or another node)\n    this.head.next!.prev = node\n    this.head.next = node\n  }\n\n  /**\n   * Removes a node from its current position in the doubly-linked list.\n   * Updates the prev/next pointers of adjacent nodes to maintain list integrity.\n   * PRECONDITION: node must be connected (prev/next are non-null)\n   */\n  private removeNode(node: LRUNode<T>): void {\n    // Connected nodes always have non-null prev/next\n    node.prev!.next = node.next\n    node.next!.prev = node.prev\n  }\n\n  /**\n   * Moves an existing node to the head position (marks as most recently used).\n   * This is the core LRU operation - accessed items become most recent.\n   */\n  private moveToHead(node: LRUNode<T>): void {\n    this.removeNode(node)\n    this.addToHead(node)\n  }\n\n  /**\n   * Removes and returns the least recently used node (the one before tail).\n   * This is called during eviction when the cache exceeds capacity.\n   * PRECONDITION: cache is not empty (ensured by caller)\n   */\n  private removeTail(): LRUNode<T> {\n    const lastNode = this.tail.prev as LRUNode<T>\n    // tail.prev is always non-null and always LRUNode when cache is not empty\n    this.removeNode(lastNode)\n    return lastNode\n  }\n\n  /**\n   * Sets a key-value pair in the cache.\n   * If the key exists, updates the value and moves to head.\n   * If new, adds at head and evicts from tail if necessary.\n   *\n   * Time Complexity:\n   * - O(1) for uniform item sizes\n   * - O(k) where k is the number of items evicted (can be O(N) for variable sizes)\n   */\n  public set(key: string, value: T): void {\n    const size = this.calculateSize?.(value) ?? 1\n    if (size > this.maxSize) {\n      console.warn('Single item size exceeds maxSize')\n      return\n    }\n\n    const existing = this.cache.get(key)\n    if (existing) {\n      // Update existing node: adjust size and move to head (most recent)\n      existing.data = value\n      this.totalSize = this.totalSize - existing.size + size\n      existing.size = size\n      this.moveToHead(existing)\n    } else {\n      // Add new node at head (most recent position)\n      const newNode = new LRUNode(key, value, size)\n      this.cache.set(key, newNode)\n      this.addToHead(newNode)\n      this.totalSize += size\n    }\n\n    // Evict least recently used items until under capacity\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\n      const tail = this.removeTail()\n      this.cache.delete(tail.key)\n      this.totalSize -= tail.size\n    }\n  }\n\n  /**\n   * Checks if a key exists in the cache.\n   * This is a pure query operation - does NOT update LRU order.\n   *\n   * Time Complexity: O(1)\n   */\n  public has(key: string): boolean {\n    return this.cache.has(key)\n  }\n\n  /**\n   * Retrieves a value by key and marks it as most recently used.\n   * Moving to head maintains the LRU property for future evictions.\n   *\n   * Time Complexity: O(1)\n   */\n  public get(key: string): T | undefined {\n    const node = this.cache.get(key)\n    if (!node) return undefined\n\n    // Mark as most recently used by moving to head\n    this.moveToHead(node)\n\n    return node.data\n  }\n\n  /**\n   * Returns an iterator over the cache entries. The order is outputted in the\n   * order of most recently used to least recently used.\n   */\n  public *[Symbol.iterator](): IterableIterator<[string, T]> {\n    let current = this.head.next\n    while (current && current !== this.tail) {\n      // Between head and tail, current is always LRUNode\n      const node = current as LRUNode<T>\n      yield [node.key, node.data]\n      current = current.next\n    }\n  }\n\n  /**\n   * Removes a specific key from the cache.\n   * Updates both the hash map and doubly-linked list.\n   *\n   * Time Complexity: O(1)\n   */\n  public remove(key: string): void {\n    const node = this.cache.get(key)\n    if (!node) return\n\n    this.removeNode(node)\n    this.cache.delete(key)\n    this.totalSize -= node.size\n  }\n\n  /**\n   * Returns the number of items in the cache.\n   */\n  public get size(): number {\n    return this.cache.size\n  }\n\n  /**\n   * Returns the current total size of all cached items.\n   * This uses the custom size calculation if provided.\n   */\n  public get currentSize(): number {\n    return this.totalSize\n  }\n}\n","import { parse } from 'next/dist/compiled/stacktrace-parser'\n\nconst regexNextStatic = /\\/_next(\\/static\\/.+)/\n\nexport interface StackFrame {\n  file: string | null\n  methodName: string\n  arguments: string[]\n  /** 1-based */\n  line1: number | null\n  /** 1-based */\n  column1: number | null\n}\n\nexport function parseStack(\n  stack: string,\n  distDir = process.env.__NEXT_DIST_DIR\n): StackFrame[] {\n  if (!stack) return []\n\n  // throw away eval information that stacktrace-parser doesn't support\n  // adapted from https://github.com/stacktracejs/error-stack-parser/blob/9f33c224b5d7b607755eb277f9d51fcdb7287e24/error-stack-parser.js#L59C33-L59C62\n  stack = stack\n    .split('\\n')\n    .map((line) => {\n      if (line.includes('(eval ')) {\n        line = line\n          .replace(/eval code/g, 'eval')\n          .replace(/\\(eval at [^()]* \\(/, '(file://')\n          .replace(/\\),.*$/g, ')')\n      }\n\n      return line\n    })\n    .join('\\n')\n\n  const frames = parse(stack)\n  return frames.map((frame) => {\n    try {\n      const url = new URL(frame.file!)\n      const res = regexNextStatic.exec(url.pathname)\n      if (res) {\n        const effectiveDistDir = distDir\n          ?.replace(/\\\\/g, '/')\n          ?.replace(/\\/$/, '')\n        if (effectiveDistDir) {\n          frame.file =\n            'file://' + effectiveDistDir.concat(res.pop()!) + url.search\n        }\n      }\n    } catch {}\n    return {\n      file: frame.file,\n      line1: frame.lineNumber,\n      column1: frame.column,\n      methodName: frame.methodName,\n      arguments: frame.arguments,\n    }\n  })\n}\n","/** React that's compiled with `next`. Used by App Router. */\nexport const reactVendoredRe =\n  /[\\\\/]next[\\\\/]dist[\\\\/]compiled[\\\\/](react|react-dom|react-server-dom-(webpack|turbopack)|scheduler)[\\\\/]/\n\n/** React the user installed. Used by Pages Router, or user imports in App Router. */\nexport const reactNodeModulesRe =\n  /node_modules[\\\\/](react|react-dom|scheduler)[\\\\/]/\n\nexport const nextInternalsRe =\n  /(node_modules[\\\\/]next[\\\\/]|[\\\\/].next[\\\\/]static[\\\\/]chunks[\\\\/]webpack\\.js$|(edge-runtime-webpack|webpack-runtime)\\.js$)/\n\nexport default function isInternal(file: string | null) {\n  if (!file) return false\n\n  return (\n    nextInternalsRe.test(file) ||\n    reactVendoredRe.test(file) ||\n    reactNodeModulesRe.test(file)\n  )\n}\n","import { findSourceMap as nativeFindSourceMap } from 'module'\nimport * as path from 'path'\nimport * as url from 'url'\nimport type * as util from 'util'\nimport { SourceMapConsumer as SyncSourceMapConsumer } from 'next/dist/compiled/source-map'\nimport {\n  type ModernSourceMapPayload,\n  findApplicableSourceMapPayload,\n  ignoreListAnonymousStackFramesIfSandwiched as ignoreListAnonymousStackFramesIfSandwichedGeneric,\n  sourceMapIgnoreListsEverything,\n} from './lib/source-maps'\nimport { parseStack, type StackFrame } from './lib/parse-stack'\nimport { getOriginalCodeFrame } from '../next-devtools/server/shared'\nimport { workUnitAsyncStorage } from './app-render/work-unit-async-storage.external'\nimport { dim } from '../lib/picocolors'\n\ntype FindSourceMapPayload = (\n  sourceURL: string\n) => ModernSourceMapPayload | undefined\n// Find a source map using the bundler's API.\n// This is only a fallback for when Node.js fails to due to bugs e.g. https://github.com/nodejs/node/issues/52102\n// TODO: Remove once all supported Node.js versions are fixed.\n// TODO(veil): Set from Webpack as well\nlet bundlerFindSourceMapPayload: FindSourceMapPayload = () => undefined\n\nexport function setBundlerFindSourceMapImplementation(\n  findSourceMapImplementation: FindSourceMapPayload\n): void {\n  bundlerFindSourceMapPayload = findSourceMapImplementation\n}\n\ninterface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\ntype SourceMapCache = Map<\n  string,\n  null | { map: SyncSourceMapConsumer; payload: ModernSourceMapPayload }\n>\n\nfunction frameToString(\n  methodName: string | null,\n  sourceURL: string | null,\n  line1: number | null,\n  column1: number | null\n): string {\n  let sourceLocation = line1 !== null ? `:${line1}` : ''\n  if (column1 !== null && sourceLocation !== '') {\n    sourceLocation += `:${column1}`\n  }\n\n  let fileLocation: string | null\n  if (\n    sourceURL !== null &&\n    sourceURL.startsWith('file://') &&\n    URL.canParse(sourceURL)\n  ) {\n    // If not relative to CWD, the path is ambiguous to IDEs and clicking will prompt to select the file first.\n    // In a multi-app repo, this leads to potentially larger file names but will make clicking snappy.\n    // There's no tradeoff for the cases where `dir` in `next dev [dir]` is omitted\n    // since relative to cwd is both the shortest and snappiest.\n    fileLocation = path.relative(process.cwd(), url.fileURLToPath(sourceURL))\n  } else if (sourceURL !== null && sourceURL.startsWith('/')) {\n    fileLocation = path.relative(process.cwd(), sourceURL)\n  } else {\n    fileLocation = sourceURL\n  }\n\n  return methodName\n    ? `    at ${methodName} (${fileLocation}${sourceLocation})`\n    : `    at ${fileLocation}${sourceLocation}`\n}\n\nfunction computeErrorName(error: Error): string {\n  // TODO: Node.js seems to use a different algorithm\n  // class ReadonlyRequestCookiesError extends Error {}` would read `ReadonlyRequestCookiesError: [...]`\n  // in the stack i.e. seems like under certain conditions it favors the constructor name.\n  return error.name || 'Error'\n}\n\nfunction prepareUnsourcemappedStackTrace(\n  error: Error,\n  structuredStackTrace: any[]\n): string {\n  const name = computeErrorName(error)\n  const message = error.message || ''\n  let stack = name + ': ' + message\n  for (let i = 0; i < structuredStackTrace.length; i++) {\n    stack += '\\n    at ' + structuredStackTrace[i].toString()\n  }\n  return stack\n}\n\nfunction shouldIgnoreListGeneratedFrame(file: string): boolean {\n  return file.startsWith('node:') || file.includes('node_modules')\n}\n\nfunction shouldIgnoreListOriginalFrame(file: string): boolean {\n  return file.includes('node_modules')\n}\n\ninterface SourcemappableStackFrame extends StackFrame {\n  file: NonNullable<StackFrame['file']>\n}\n\ninterface SourceMappedFrame {\n  stack: IgnorableStackFrame\n  // DEV only\n  code: string | null\n}\n\nfunction createUnsourcemappedFrame(\n  frame: SourcemappableStackFrame\n): SourceMappedFrame {\n  return {\n    stack: {\n      file: frame.file,\n      line1: frame.line1,\n      column1: frame.column1,\n      methodName: frame.methodName,\n      arguments: frame.arguments,\n      ignored: shouldIgnoreListGeneratedFrame(frame.file),\n    },\n    code: null,\n  }\n}\n\nfunction ignoreListAnonymousStackFramesIfSandwiched(\n  sourceMappedFrames: Array<{\n    stack: IgnorableStackFrame\n    code: string | null\n  }>\n) {\n  return ignoreListAnonymousStackFramesIfSandwichedGeneric(\n    sourceMappedFrames,\n    (frame) => frame.stack.file === '<anonymous>',\n    (frame) => frame.stack.ignored,\n    (frame) => frame.stack.methodName,\n    (frame) => {\n      frame.stack.ignored = true\n    }\n  )\n}\n\n/**\n * @param frame\n * @param sourceMapCache\n * @returns The original frame if not sourcemapped.\n */\nfunction getSourcemappedFrameIfPossible(\n  frame: SourcemappableStackFrame,\n  sourceMapCache: SourceMapCache,\n  inspectOptions: util.InspectOptions\n): {\n  stack: IgnorableStackFrame\n  code: string | null\n} {\n  const sourceMapCacheEntry = sourceMapCache.get(frame.file)\n  let sourceMapConsumer: SyncSourceMapConsumer\n  let sourceMapPayload: ModernSourceMapPayload\n  if (sourceMapCacheEntry === undefined) {\n    let sourceURL = frame.file\n    // e.g. \"/APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\"\n    // will be keyed by Node.js as \"file:///APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\".\n    // This is likely caused by `callsite.toString()` in `Error.prepareStackTrace converting file URLs to paths.\n    if (sourceURL.startsWith('/')) {\n      sourceURL = url.pathToFileURL(frame.file).toString()\n    }\n    let maybeSourceMapPayload: ModernSourceMapPayload | undefined\n    try {\n      const sourceMap = nativeFindSourceMap(sourceURL)\n      maybeSourceMapPayload = sourceMap?.payload\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If loading fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      // Don't even fall back to the bundler because it might be not as strict\n      // with regards to parsing and then we fail later once we consume the\n      // source map payload.\n      // This essentially avoids a redundant error where we fail here and then\n      // later on consumption because the bundler just handed back an invalid\n      // source map.\n      return createUnsourcemappedFrame(frame)\n    }\n    if (maybeSourceMapPayload === undefined) {\n      maybeSourceMapPayload = bundlerFindSourceMapPayload(sourceURL)\n    }\n\n    if (maybeSourceMapPayload === undefined) {\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapPayload = maybeSourceMapPayload\n    try {\n      sourceMapConsumer = new SyncSourceMapConsumer(\n        // @ts-expect-error -- Module.SourceMap['version'] is number but SyncSourceMapConsumer wants a string\n        sourceMapPayload\n      )\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If creating the consumer fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapCache.set(frame.file, {\n      map: sourceMapConsumer,\n      payload: sourceMapPayload,\n    })\n  } else if (sourceMapCacheEntry === null) {\n    // We failed earlier getting the payload or consumer.\n    // Just return an unsourcemapped frame.\n    // Errors will already be logged.\n    return createUnsourcemappedFrame(frame)\n  } else {\n    sourceMapConsumer = sourceMapCacheEntry.map\n    sourceMapPayload = sourceMapCacheEntry.payload\n  }\n\n  const sourcePosition = sourceMapConsumer.originalPositionFor({\n    column: (frame.column1 ?? 1) - 1,\n    line: frame.line1 ?? 1,\n  })\n\n  const applicableSourceMap = findApplicableSourceMapPayload(\n    (frame.line1 ?? 1) - 1,\n    (frame.column1 ?? 1) - 1,\n    sourceMapPayload\n  )\n  let ignored =\n    applicableSourceMap !== undefined &&\n    sourceMapIgnoreListsEverything(applicableSourceMap)\n  if (sourcePosition.source === null) {\n    return {\n      stack: {\n        arguments: frame.arguments,\n        file: frame.file,\n        line1: frame.line1,\n        column1: frame.column1,\n        methodName: frame.methodName,\n        ignored: ignored || shouldIgnoreListGeneratedFrame(frame.file),\n      },\n      code: null,\n    }\n  }\n\n  // TODO(veil): Upstream a method to sourcemap consumer that immediately says if a frame is ignored or not.\n  if (applicableSourceMap === undefined) {\n    console.error('No applicable source map found in sections for frame', frame)\n  } else if (!ignored && shouldIgnoreListOriginalFrame(sourcePosition.source)) {\n    // Externals may be libraries that don't ship ignoreLists.\n    // This is really taking control away from libraries.\n    // They should still ship `ignoreList` so that attached debuggers ignore-list their frames.\n    // TODO: Maybe only ignore library sourcemaps if `ignoreList` is absent?\n    // Though keep in mind that Turbopack omits empty `ignoreList`.\n    // So if we establish this convention, we should communicate it to the ecosystem.\n    ignored = true\n  } else if (!ignored) {\n    // TODO: O(n^2). Consider moving `ignoreList` into a Set\n    const sourceIndex = applicableSourceMap.sources.indexOf(\n      sourcePosition.source\n    )\n    ignored = applicableSourceMap.ignoreList?.includes(sourceIndex) ?? false\n  }\n\n  const originalFrame: IgnorableStackFrame = {\n    // We ignore the sourcemapped name since it won't be the correct name.\n    // The callsite will point to the column of the variable name instead of the\n    // name of the enclosing function.\n    // TODO(NDX-531): Spy on prepareStackTrace to get the enclosing line number for method name mapping.\n    methodName: frame.methodName\n      ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n      ?.replace('__webpack_exports__.', ''),\n    file: sourcePosition.source,\n    line1: sourcePosition.line,\n    column1: sourcePosition.column + 1,\n    // TODO: c&p from async createOriginalStackFrame but why not frame.arguments?\n    arguments: [],\n    ignored,\n  }\n\n  /** undefined = not yet computed*/\n  let codeFrame: string | null | undefined\n\n  return Object.defineProperty(\n    {\n      stack: originalFrame,\n      code: null,\n    },\n    'code',\n    {\n      get: () => {\n        if (codeFrame === undefined) {\n          const sourceContent: string | null =\n            sourceMapConsumer.sourceContentFor(\n              sourcePosition.source,\n              /* returnNullOnMissing */ true\n            ) ?? null\n          codeFrame = getOriginalCodeFrame(\n            originalFrame,\n            sourceContent,\n            inspectOptions.colors\n          )\n        }\n        return codeFrame\n      },\n    }\n  )\n}\n\nfunction parseAndSourceMap(\n  error: Error,\n  inspectOptions: util.InspectOptions\n): string {\n  // TODO(veil): Expose as CLI arg or config option. Useful for local debugging.\n  const showIgnoreListed = false\n  // We overwrote Error.prepareStackTrace earlier so error.stack is not sourcemapped.\n  let unparsedStack = String(error.stack)\n  // We could just read it from `error.stack`.\n  // This works around cases where a 3rd party `Error.prepareStackTrace` implementation\n  // doesn't implement the name computation correctly.\n  const errorName = computeErrorName(error)\n\n  let idx = unparsedStack.indexOf('react_stack_bottom_frame')\n  if (idx !== -1) {\n    idx = unparsedStack.lastIndexOf('\\n', idx)\n  } else {\n    idx = unparsedStack.indexOf('react-stack-bottom-frame')\n    if (idx !== -1) {\n      idx = unparsedStack.lastIndexOf('\\n', idx)\n    }\n  }\n  if (idx !== -1 && !showIgnoreListed) {\n    // Cut off everything after the bottom frame since it'll be React internals.\n    unparsedStack = unparsedStack.slice(0, idx)\n  }\n\n  const unsourcemappedStack = parseStack(unparsedStack)\n  const sourceMapCache: SourceMapCache = new Map()\n\n  const sourceMappedFrames: Array<{\n    stack: IgnorableStackFrame\n    code: string | null\n  }> = []\n  let sourceFrame: null | string = null\n  for (const frame of unsourcemappedStack) {\n    if (frame.file === null) {\n      sourceMappedFrames.push({\n        code: null,\n        stack: {\n          file: frame.file,\n          line1: frame.line1,\n          column1: frame.column1,\n          methodName: frame.methodName,\n          arguments: frame.arguments,\n          ignored: false,\n        },\n      })\n    } else {\n      const sourcemappedFrame = getSourcemappedFrameIfPossible(\n        // We narrowed this earlier by bailing if `frame.file` is null.\n        frame as SourcemappableStackFrame,\n        sourceMapCache,\n        inspectOptions\n      )\n      sourceMappedFrames.push(sourcemappedFrame)\n\n      // We can determine the sourceframe here.\n      // anonymous frames won't have a sourceframe so we don't need to scan\n      // all stacks again to check if they are sandwiched between ignored frames.\n      if (\n        sourceFrame === null &&\n        // TODO: Is this the right choice?\n        !sourcemappedFrame.stack.ignored &&\n        sourcemappedFrame.code !== null\n      ) {\n        sourceFrame = sourcemappedFrame.code\n      }\n    }\n  }\n\n  ignoreListAnonymousStackFramesIfSandwiched(sourceMappedFrames)\n\n  let sourceMappedStack = ''\n  for (let i = 0; i < sourceMappedFrames.length; i++) {\n    const frame = sourceMappedFrames[i]\n\n    if (!frame.stack.ignored) {\n      sourceMappedStack +=\n        '\\n' +\n        frameToString(\n          frame.stack.methodName,\n          frame.stack.file,\n          frame.stack.line1,\n          frame.stack.column1\n        )\n    } else if (showIgnoreListed) {\n      sourceMappedStack +=\n        '\\n' +\n        dim(\n          frameToString(\n            frame.stack.methodName,\n            frame.stack.file,\n            frame.stack.line1,\n            frame.stack.column1\n          )\n        )\n    }\n  }\n\n  return (\n    errorName +\n    ': ' +\n    error.message +\n    sourceMappedStack +\n    (sourceFrame !== null ? '\\n' + sourceFrame : '')\n  )\n}\n\nfunction sourceMapError(\n  this: void,\n  error: Error,\n  inspectOptions: util.InspectOptions\n): Error {\n  // Create a new Error object with the source mapping applied and then use native\n  // Node.js formatting on the result.\n  const newError =\n    error.cause !== undefined\n      ? // Setting an undefined `cause` would print `[cause]: undefined`\n        new Error(error.message, { cause: error.cause })\n      : new Error(error.message)\n\n  // TODO: Ensure `class MyError extends Error {}` prints `MyError` as the name\n  newError.stack = parseAndSourceMap(error, inspectOptions)\n\n  for (const key in error) {\n    if (!Object.prototype.hasOwnProperty.call(newError, key)) {\n      // @ts-expect-error -- We're copying all enumerable properties.\n      // So they definitely exist on `this` and obviously have no type on `newError` (yet)\n      newError[key] = error[key]\n    }\n  }\n\n  return newError\n}\n\nexport function patchErrorInspectNodeJS(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('nodejs.util.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function (\n    depth: number,\n    inspectOptions: util.InspectOptions,\n    inspect: typeof util.inspect\n  ): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, inspectOptions)\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      // { customInspect: false } would result in `error.cause` not using our inspect.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return inspect(newError, {\n          ...inspectOptions,\n          depth:\n            (inspectOptions.depth ??\n              // Default in Node.js\n              2) - depth,\n        })\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n\nexport function patchErrorInspectEdgeLite(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('edge-runtime.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function ({\n    format,\n  }: {\n    format: (...args: unknown[]) => string\n  }): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, {})\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return format(newError)\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n","import { patchErrorInspectNodeJS } from '../patch-error-inspect'\n\npatchErrorInspectNodeJS(globalThis.Error)\n","import { codeFrameColumns } from 'next/dist/compiled/babel/code-frame'\nimport isInternal from '../../shared/lib/is-internal'\nimport type { StackFrame } from '../../server/lib/parse-stack'\nimport { ignoreListAnonymousStackFramesIfSandwiched as ignoreListAnonymousStackFramesIfSandwichedGeneric } from '../../server/lib/source-maps'\n\nexport type { StackFrame }\n\nexport interface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\nexport interface OriginalStackFramesRequest {\n  frames: readonly StackFrame[]\n  isServer: boolean\n  isEdgeServer: boolean\n  isAppDirectory: boolean\n}\n\nexport type OriginalStackFramesResponse = OriginalStackFrameResponseResult[]\n\nexport type OriginalStackFrameResponseResult =\n  PromiseSettledResult<OriginalStackFrameResponse>\n\nexport interface OriginalStackFrameResponse {\n  originalStackFrame: (StackFrame & { ignored: boolean }) | null\n  originalCodeFrame: string | null\n}\n\nexport function ignoreListAnonymousStackFramesIfSandwiched(\n  responses: OriginalStackFramesResponse\n): void {\n  ignoreListAnonymousStackFramesIfSandwichedGeneric(\n    responses,\n    (response) => {\n      return (\n        response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null &&\n        response.value.originalStackFrame.file === '<anonymous>'\n      )\n    },\n    (response) => {\n      return (\n        response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null &&\n        response.value.originalStackFrame.ignored === true\n      )\n    },\n    (response) => {\n      return response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null\n        ? response.value.originalStackFrame.methodName\n        : ''\n    },\n    (response) => {\n      ;(\n        response as PromiseFulfilledResult<OriginalStackFrameResponse>\n      ).value.originalStackFrame!.ignored = true\n    }\n  )\n}\n\n/**\n * It looks up the code frame of the traced source.\n * @note It ignores Next.js/React internals, as these can often be huge bundled files.\n */\nexport function getOriginalCodeFrame(\n  frame: IgnorableStackFrame,\n  source: string | null,\n  colors: boolean = process.stdout.isTTY\n): string | null {\n  if (!source || isInternal(frame.file)) {\n    return null\n  }\n\n  return codeFrameColumns(\n    source,\n    {\n      start: {\n        // 1-based, but -1 means start line without highlighting\n        line: frame.line1 ?? -1,\n        // 1-based, but 0 means whole line without column highlighting\n        column: frame.column1 ?? 0,\n      },\n    },\n    { forceColor: colors }\n  )\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(underlying: T): Promise<T> {\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  abortOnSynchronousPlatformIOAccess,\n  trackSynchronousPlatformIOAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype ApiType = 'time' | 'random' | 'crypto'\n\nexport function io(expression: string, type: ApiType) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workUnitStore || !workStore) {\n    return\n  }\n\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime': {\n      const prerenderSignal = workUnitStore.controller.signal\n\n      if (prerenderSignal.aborted === false) {\n        // If the prerender signal is already aborted we don't need to construct\n        // any stacks because something else actually terminated the prerender.\n        let message: string\n        switch (type) {\n          case 'time':\n            message = `Route \"${workStore.route}\" used ${expression} instead of using \\`performance\\` or without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-current-time`\n            break\n          case 'random':\n            message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-random`\n            break\n          case 'crypto':\n            message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-crypto`\n            break\n          default:\n            throw new InvariantError(\n              'Unknown expression type in abortOnSynchronousPlatformIOAccess.'\n            )\n        }\n\n        abortOnSynchronousPlatformIOAccess(\n          workStore.route,\n          expression,\n          applyOwnerStack(new Error(message), workUnitStore),\n          workUnitStore\n        )\n      }\n      break\n    }\n    case 'prerender-client': {\n      const prerenderSignal = workUnitStore.controller.signal\n\n      if (prerenderSignal.aborted === false) {\n        // If the prerender signal is already aborted we don't need to construct\n        // any stacks because something else actually terminated the prerender.\n        let message: string\n        switch (type) {\n          case 'time':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-current-time-client`\n            break\n          case 'random':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-random-client`\n            break\n          case 'crypto':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-crypto-client`\n            break\n          default:\n            throw new InvariantError(\n              'Unknown expression type in abortOnSynchronousPlatformIOAccess.'\n            )\n        }\n\n        abortOnSynchronousPlatformIOAccess(\n          workStore.route,\n          expression,\n          applyOwnerStack(new Error(message), workUnitStore),\n          workUnitStore\n        )\n      }\n      break\n    }\n    case 'request':\n      if (workUnitStore.prerenderPhase === true) {\n        trackSynchronousPlatformIOAccessInDev(workUnitStore)\n      }\n      break\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction applyOwnerStack(error: Error, workUnitStore: PrerenderStoreModern) {\n  // TODO: Instead of stitching the stacks here, we should log the original\n  // error as-is when it occurs, and let `patchErrorInspect` handle adding the\n  // owner stack, instead of logging it deferred in the `LogSafely` component\n  // via `throwIfDisallowedDynamic`.\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    workUnitStore.captureOwnerStack\n  ) {\n    const ownerStack = workUnitStore.captureOwnerStack()\n\n    if (ownerStack) {\n      let stack = ownerStack\n\n      if (error.stack) {\n        const frames: string[] = []\n\n        for (const frame of error.stack.split('\\n').slice(1)) {\n          if (frame.includes('react_stack_bottom_frame')) {\n            break\n          }\n\n          frames.push(frame)\n        }\n\n        stack = '\\n' + frames.join('\\n') + stack\n      }\n\n      error.stack = error.name + ': ' + error.message + stack\n    }\n  }\n\n  return error\n}\n","/**\n * We extend Math.random() during builds and revalidates to ensure that prerenders don't observe randomness\n * When cacheComponents is enabled. randomness is a form of IO even though it resolves synchronously. When cacheComponents is\n * enabled we need to ensure that randomness is excluded from prerenders.\n *\n * The extensions here never error nor alter the random generation itself and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nconst expression = '`Math.random()`'\ntry {\n  const _random = Math.random\n  Math.random = function random() {\n    io(expression, 'random')\n    return _random.apply(null, arguments as any)\n\n    // We bind here to alter the `toString` printing to match `Math.random`'s native `toString`.\n    // eslint-disable-next-line no-extra-bind\n  }.bind(null)\n  Object.defineProperty(Math.random, 'name', { value: 'random' })\n} catch {\n  console.error(\n    `Failed to install ${expression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","/**\n * We extend `Date` during builds and revalidates to ensure that prerenders don't observe the clock as a source of IO\n * When cacheComponents is enabled. The current time is a form of IO even though it resolves synchronously. When cacheComponents is\n * enabled we need to ensure that clock time is excluded from prerenders unless it is cached.\n *\n * There is tension here because time is used for both output and introspection. While arbitrary we intend to reserve\n * `Date` for output use cases and `performance` for introspection use cases. If you want to measure\n * how long something takes use `performance.timeOrigin` and `performance.now()` rather than `Date.now()` for instance.\n *\n * The extensions here never error nor alter the underlying Date objects, strings, and numbers created and thus should be transparent to callers.\n */\nimport { io } from './utils'\n\nfunction createNow(originalNow: typeof Date.now) {\n  return {\n    now: function now() {\n      io('`Date.now()`', 'time')\n      return originalNow()\n    },\n  }['now'.slice() as 'now'].bind(null)\n}\n\nfunction createDate(originalConstructor: typeof Date): typeof Date {\n  const properties = Object.getOwnPropertyDescriptors(originalConstructor)\n  properties.now.value = createNow(originalConstructor.now)\n\n  const apply = Reflect.apply\n  const construct = Reflect.construct\n\n  const newConstructor = Object.defineProperties(\n    // Ideally this should not minify the name.\n    function Date() {\n      if (new.target === undefined) {\n        io('`Date()`', 'time')\n        return apply(originalConstructor, undefined, arguments)\n      }\n      if (arguments.length === 0) {\n        io('`new Date()`', 'time')\n      }\n      return construct(originalConstructor, arguments, new.target)\n    },\n    properties\n  )\n  Object.defineProperty(originalConstructor.prototype, 'constructor', {\n    value: newConstructor,\n  })\n  return newConstructor as typeof Date\n}\n\ntry {\n  // eslint-disable-next-line no-native-reassign\n  Date = createDate(Date)\n} catch {\n  console.error(\n    'Failed to install `Date` class extension. When using `experimental.cacheComponents`, APIs that read the current time will not correctly trigger dynamic behavior.'\n  )\n}\n","/**\n * We extend node:crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When cacheComponents is enabled. Random bytes are a form of IO even if they resolve synchronously. When cacheComponents is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  // nothing to patch\n} else {\n  const nodeCrypto = require('node:crypto') as typeof import('node:crypto')\n\n  // require('node:crypto').getRandomValues is an alias for\n  // crypto.getRandomValues which is extended in web-crypto.tsx\n\n  // require('node:crypto').randomUUID is not an alias for crypto.randomUUID\n\n  const randomUUIDExpression = \"`require('node:crypto').randomUUID()`\"\n  try {\n    const _randomUUID = nodeCrypto.randomUUID\n    nodeCrypto.randomUUID = function randomUUID() {\n      io(randomUUIDExpression, 'random')\n      return _randomUUID.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomUUIDExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomBytesExpression = \"`require('node:crypto').randomBytes(size)`\"\n  try {\n    const _randomBytes = nodeCrypto.randomBytes\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomBytes = function randomBytes() {\n      if (typeof arguments[1] !== 'function') {\n        // randomBytes is sync if the second arg is undefined\n        io(randomBytesExpression, 'random')\n      }\n      return _randomBytes.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomFillSyncExpression =\n    \"`require('node:crypto').randomFillSync(...)`\"\n  try {\n    const _randomFillSync = nodeCrypto.randomFillSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomFillSync = function randomFillSync() {\n      io(randomFillSyncExpression, 'random')\n      return _randomFillSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomFillSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomIntExpression = \"`require('node:crypto').randomInt(min, max)`\"\n  try {\n    const _randomInt = nodeCrypto.randomInt\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomInt = function randomInt() {\n      if (typeof arguments[2] !== 'function') {\n        // randomInt is sync if the third arg is undefined\n        io(randomIntExpression, 'random')\n      }\n      return _randomInt.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generatePrimeSyncExpression =\n    \"`require('node:crypto').generatePrimeSync(...)`\"\n  try {\n    const _generatePrimeSync = nodeCrypto.generatePrimeSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.generatePrimeSync = function generatePrimeSync() {\n      io(generatePrimeSyncExpression, 'random')\n      return _generatePrimeSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generatePrimeSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeyPairSyncExpression =\n    \"`require('node:crypto').generateKeyPairSync(...)`\"\n  try {\n    const _generateKeyPairSync = nodeCrypto.generateKeyPairSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.generateKeyPairSync = function generateKeyPairSync() {\n      io(generateKeyPairSyncExpression, 'random')\n      return _generateKeyPairSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeyPairSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeySyncExpression =\n    \"`require('node:crypto').generateKeySync(...)`\"\n  try {\n    const _generateKeySync = nodeCrypto.generateKeySync\n    nodeCrypto.generateKeySync = function generateKeySync() {\n      io(generateKeySyncExpression, 'random')\n      return _generateKeySync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeySyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n}\n","// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path') as typeof import('path')\nconst mod = require('module') as typeof import('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename =\n  // @ts-expect-error\n  mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\n// @ts-expect-error\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// @ts-expect-error\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nconst PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return compile(routeToUse, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return compile(normalizedRoute, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The relative project dir the server is running in from project root\n   */\n  relativeProjectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n\n  /**\n   * DEV only: The fallback params that should be used when validating prerenders during dev\n   */\n  devValidatingFallbackParams?: Map<string, string>\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport enum AdapterOutputType {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `PRERENDER` represents an ISR enabled route that might\n   * have a seeded cache entry or fallback generated during build\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * `STATIC_FILE` represents a static file (ie /_next/static)\n   */\n  STATIC_FILE = 'STATIC_FILE',\n\n  /**\n   * `MIDDLEWARE` represents the middleware output if present\n   */\n  MIDDLEWARE = 'MIDDLEWARE',\n}\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const TURBOPACK_CLIENT_BUILD_MANIFEST = 'client-build-manifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import fs from 'fs'\nimport path from 'path'\n\nexport function findDir(dir: string, name: 'pages' | 'app'): string | null {\n  // prioritize ./${name} over ./src/${name}\n  let curDir = path.join(dir, name)\n  if (fs.existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src', name)\n  if (fs.existsSync(curDir)) return curDir\n\n  return null\n}\n\nexport function findPagesDir(dir: string): {\n  pagesDir: string | undefined\n  appDir: string | undefined\n} {\n  const pagesDir = findDir(dir, 'pages') || undefined\n  const appDir = findDir(dir, 'app') || undefined\n\n  if (appDir == null && pagesDir == null) {\n    throw new Error(\n      \"> Couldn't find any `pages` or `app` directory. Please create one under the project root\"\n    )\n  }\n\n  return {\n    pagesDir,\n    appDir,\n  }\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().setRootSpanAttribute('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } =\n      require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip' | 'hmr'\n  cacheWarning?: string\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics: FetchMetric[] | undefined\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all values for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get values for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n","import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { CacheControl } from './lib/cache-control'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { getCacheControlHeader } from './lib/cache-control'\nimport { HTML_CONTENT_TYPE_HEADER } from '../lib/constants'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  generateEtags,\n  poweredByHeader,\n  cacheControl,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  generateEtags: boolean\n  poweredByHeader: boolean\n  cacheControl: CacheControl | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && result.contentType === HTML_CONTENT_TYPE_HEADER) {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  // If cache control is already set on the response we don't\n  // override it to allow users to customize it via next.config\n  if (cacheControl && !res.getHeader('Cache-Control')) {\n    res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (generateEtags && payload !== null) {\n    const etag = generateETag(payload)\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type') && result.contentType) {\n    res.setHeader('Content-Type', result.contentType)\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n  slashes: boolean | undefined\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n    slashes:\n      parsedURL.href.slice(\n        parsedURL.protocol.length,\n        parsedURL.protocol.length + 2\n      ) === '//',\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\nimport { LRUCache } from '../../server/lib/lru-cache'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0])\n    } else {\n      console[consoleMethod](' ' + prefix, ...message)\n    }\n  }\n}\n\nexport function bootstrap(...message: string[]) {\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '))\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceCache = new LRUCache<string>(10_000, (value) => value.length)\nexport function warnOnce(...message: any[]) {\n  const key = message.join(' ')\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key)\n    warn(...message)\n  }\n}\n","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","import type { ReactDOMServerReadableStream } from 'react-dom/server'\nimport { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encoded-tags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // If we have no streams, return an empty stream. This behavior is\n  // intentional as we're now providing the `RenderResult.EMPTY` value.\n  if (streams.length === 0) {\n    return new ReadableStream<T>({\n      start(controller) {\n        controller.close()\n      },\n    })\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nfunction createPrefetchCommentStream(\n  isBuildTimePrerendering: boolean,\n  buildId: string\n): TransformStream<Uint8Array, Uint8Array> {\n  // Insert an extra comment at the beginning of the HTML document. This must\n  // come after the DOCTYPE, which is inserted by React.\n  //\n  // The first chunk sent by React will contain the doctype. After that, we can\n  // pass through the rest of the chunks as-is.\n  let didTransformFirstChunk = false\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (isBuildTimePrerendering && !didTransformFirstChunk) {\n        didTransformFirstChunk = true\n        const decoder = new TextDecoder('utf-8', { fatal: true })\n        const chunkStr = decoder.decode(chunk, {\n          stream: true,\n        })\n        const updatedChunkStr = insertBuildIdComment(chunkStr, buildId)\n        controller.enqueue(encoder.encode(updatedChunkStr))\n        return\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: {\n    renderToReadableStream: typeof import('react-dom/server').renderToReadableStream\n  }\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactDOMServerReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createMetadataTransformStream(\n  insert: () => Promise<string> | string\n): TransformStream<Uint8Array, Uint8Array> {\n  let chunkIndex = -1\n  let isMarkRemoved = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      let iconMarkIndex = -1\n      let closedHeadIndex = -1\n      chunkIndex++\n\n      if (isMarkRemoved) {\n        controller.enqueue(chunk)\n        return\n      }\n      let iconMarkLength = 0\n      // Only search for the closed head tag once\n      if (iconMarkIndex === -1) {\n        iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK)\n        if (iconMarkIndex === -1) {\n          controller.enqueue(chunk)\n          return\n        } else {\n          // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n          // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n          iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length\n          // Check if next char is /, this is for xml mode.\n          if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n            iconMarkLength += 2\n          } else {\n            // The last char is `>`\n            iconMarkLength++\n          }\n        }\n      }\n\n      // Check if icon mark is inside <head> tag in the first chunk.\n      if (chunkIndex === 0) {\n        closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (iconMarkIndex !== -1) {\n          // The mark icon is located in the 1st chunk before the head tag.\n          // We do not need to insert the script tag in this case because it's in the head.\n          // Just remove the icon mark from the chunk.\n          if (iconMarkIndex < closedHeadIndex) {\n            const replaced = new Uint8Array(chunk.length - iconMarkLength)\n\n            // Remove the icon mark from the chunk.\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex\n            )\n            chunk = replaced\n          } else {\n            // The icon mark is after the head tag, replace and insert the script tag at that position.\n            const insertion = await insert()\n            const encodedInsertion = encoder.encode(insertion)\n            const insertionLength = encodedInsertion.length\n            const replaced = new Uint8Array(\n              chunk.length - iconMarkLength + insertionLength\n            )\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(encodedInsertion, iconMarkIndex)\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex + insertionLength\n            )\n            chunk = replaced\n          }\n          isMarkRemoved = true\n        }\n        // If there's no icon mark located, it will be handled later when if present in the following chunks.\n      } else {\n        // When it's appeared in the following chunks, we'll need to\n        // remove the mark and then insert the script tag at that position.\n        const insertion = await insert()\n        const encodedInsertion = encoder.encode(insertion)\n        const insertionLength = encodedInsertion.length\n        // Replace the icon mark with the hoist script or empty string.\n        const replaced = new Uint8Array(\n          chunk.length - iconMarkLength + insertionLength\n        )\n        // Set the first part of the chunk, before the icon mark.\n        replaced.set(chunk.subarray(0, iconMarkIndex))\n        // Set the insertion after the icon mark.\n        replaced.set(encodedInsertion, iconMarkIndex)\n\n        // Set the rest of the chunk after the icon mark.\n        replaced.set(\n          chunk.subarray(iconMarkIndex + iconMarkLength),\n          iconMarkIndex + insertionLength\n        )\n        chunk = replaced\n        isMarkRemoved = true\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\nfunction createFlightDataInjectionTransformStream(\n  stream: ReadableStream<Uint8Array>,\n  delayDataUntilFirstHtmlChunk: boolean\n): TransformStream<Uint8Array, Uint8Array> {\n  let htmlStreamFinished = false\n\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  function startOrContinuePulling(\n    controller: TransformStreamDefaultController\n  ) {\n    if (!pull) {\n      pull = startPulling(controller)\n    }\n    return pull\n  }\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    const reader = stream.getReader()\n\n    if (delayDataUntilFirstHtmlChunk) {\n      // NOTE: streaming flush\n      // We are buffering here for the inlined data stream because the\n      // \"shell\" stream might be chunkenized again by the underlying stream\n      // implementation, e.g. with a specific high-water mark. To ensure it's\n      // the safe timing to pipe the data stream, this extra tick is\n      // necessary.\n\n      // We don't start reading until we've left the current Task to ensure\n      // that it's inserted after flushing the shell. Note that this implementation\n      // might get stale if impl details of Fizz change in the future.\n      await atLeastOneTask()\n    }\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        // We want to prioritize HTML over RSC data.\n        // The SSR render is based on the same RSC stream, so when we get a new RSC chunk,\n        // we're likely to produce an HTML chunk as well, so give it a chance to flush first.\n        if (!delayDataUntilFirstHtmlChunk && !htmlStreamFinished) {\n          await atLeastOneTask()\n        }\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    start(controller) {\n      if (!delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    flush(controller) {\n      htmlStreamFinished = true\n      if (donePulling) {\n        return\n      }\n      return startOrContinuePulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  isBuildTimePrerendering: boolean\n  buildId: string\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactDOMServerReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    isBuildTimePrerendering,\n    buildId,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML we need to wait for it to resolve before continuing.\n  if (isStaticGeneration) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Add build id comment to start of the HTML document (in export mode)\n    createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n\n    // Transform metadata\n    createMetadataTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream\n      ? createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  isBuildTimePrerendering: boolean\n  buildId: string\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    isBuildTimePrerendering,\n    buildId,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Add build id comment to start of the HTML document (in export mode)\n      .pipeThrough(\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId)\n      )\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  delayDataUntilFirstHtmlChunk: boolean\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    delayDataUntilFirstHtmlChunk,\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(\n          inlinedDataStream,\n          delayDataUntilFirstHtmlChunk\n        )\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n  META: {\n    // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n    // <meta name=\"«nxt-icon»\"\n    // This is a special mark that will be replaced by the icon insertion script tag.\n    ICON_MARK: new Uint8Array([\n      60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 194, 171, 110, 120,\n      116, 45, 105, 99, 111, 110, 194, 187, 34,\n    ]),\n  },\n} as const\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  /** @internal */\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport type {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  TEXT_PLAIN_CONTENT_TYPE_HEADER,\n} from '../lib/constants'\nimport type { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\ntype ContentTypeOption =\n  | typeof RSC_CONTENT_TYPE_HEADER // For App Page RSC responses\n  | typeof HTML_CONTENT_TYPE_HEADER // For App Page, Pages HTML responses\n  | typeof JSON_CONTENT_TYPE_HEADER // For API routes, Next.js data requests\n  | typeof TEXT_PLAIN_CONTENT_TYPE_HEADER // For simplified errors\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType: ContentTypeOption | null\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption | null\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */\n  public static readonly EMPTY = new RenderResult<StaticRenderResultMetadata>(\n    null,\n    { metadata: {}, contentType: null }\n  )\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(\n    value: string | Buffer,\n    contentType: ContentTypeOption\n  ) {\n    return new RenderResult<StaticRenderResultMetadata>(value, {\n      metadata: {},\n      contentType,\n    })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      // If the response is null, return an empty string. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return ''\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new InvariantError(\n          'dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns a readable stream of the response.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return new ReadableStream<Uint8Array>({\n        start(controller) {\n          controller.close()\n        },\n      })\n    }\n\n    if (typeof this.response === 'string') {\n      return streamFromString(this.response)\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */\n  private coerce(): ReadableStream<Uint8Array>[] {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return []\n    }\n\n    if (typeof this.response === 'string') {\n      return [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      return this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      return [streamFromBuffer(this.response)]\n    } else {\n      return [this.response]\n    }\n  }\n\n  /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */\n  public unshift(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the start of the array.\n    this.response.unshift(readable)\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public push(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the end of the array.\n    this.response.push(readable)\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { DynamicParamTypesShort } from '../../../../server/app-render/types'\nimport type { FallbackRouteParams } from '../../../../server/request/fallback-params'\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  params: { [key: string]: any },\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  pagePath: string,\n  fallbackRouteParams: FallbackRouteParams | null\n): DynamicParam {\n  let value = params[segmentKey]\n\n  if (fallbackRouteParams && fallbackRouteParams.has(segmentKey)) {\n    value = fallbackRouteParams.get(segmentKey)\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  if (!value) {\n    const isCatchall = dynamicParamType === 'c'\n    const isOptionalCatchall = dynamicParamType === 'oc'\n\n    if (isCatchall || isOptionalCatchall) {\n      // handle the case where an optional catchall does not have a value,\n      // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n      if (isOptionalCatchall) {\n        return {\n          param: segmentKey,\n          value: null,\n          type: dynamicParamType,\n          treeSegment: [segmentKey, '', dynamicParamType],\n        }\n      }\n\n      // handle the case where a catchall or optional catchall does not have a value,\n      // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n      value = pagePath\n        .split('/')\n        // remove the first empty string\n        .slice(1)\n        // replace any dynamic params with the actual values\n        .flatMap((pathSegment) => {\n          const param = parseParameter(pathSegment)\n          // if the segment matches a param, return the param value\n          // otherwise, it's a static segment, so just return that\n          return params[param.key] ?? param.key\n        })\n\n      return {\n        param: segmentKey,\n        value,\n        type: dynamicParamType,\n        // This value always has to be a string.\n        treeSegment: [segmentKey, value.join('/'), dynamicParamType],\n      }\n    }\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value: value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\nimport { safePathToRegexp, safeCompile } from './route-match-utils'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return safeCompile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  let search = parsed.search\n  if (search) {\n    search = unescapeSegments(search)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n    search,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const parsedDestination = parseDestination(args)\n\n  const {\n    hostname: destHostname,\n    query: destQuery,\n    search: destSearch,\n  } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  safePathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    safePathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = safeCompile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = safeCompile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    parsedDestination.search = destSearch\n      ? compileNonPath(destSearch, args.params)\n      : ''\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...args.query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */\nexport function decodeQueryPathParameter(value: string) {\n  // When deployed to Vercel, the value may be encoded, so this attempts to\n  // decode it and returns the original value if it fails.\n  try {\n    return decodeURIComponent(value)\n  } catch {\n    return value\n  }\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { LoadComponentsReturnType } from '../load-components'\nimport type { ServerRuntime, SizeLimit } from '../../types'\nimport type {\n  ExperimentalConfig,\n  NextConfigComplete,\n} from '../../server/config-shared'\nimport type { ClientReferenceManifest } from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../../build/webpack/plugins/next-font-manifest-plugin'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { AppPageModule } from '../route-modules/app-page/module'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport type { __ApiPreviewProps } from '../api-utils'\n\nimport s from 'next/dist/compiled/superstruct'\nimport type { RequestLifecycleOpts } from '../base-server'\nimport type { InstrumentationOnRequestError } from '../instrumentation/types'\nimport type { NextRequestHint } from '../web/adapter'\nimport type { BaseNextRequest } from '../base-http'\nimport type { IncomingMessage } from 'http'\nimport type { RenderResumeDataCache } from '../resume-data-cache/resume-data-cache'\n\nexport type DynamicParamTypes =\n  | 'catchall'\n  | 'catchall-intercepted'\n  | 'optional-catchall'\n  | 'dynamic'\n  | 'dynamic-intercepted'\n\nconst dynamicParamTypesSchema = s.enums(['c', 'ci', 'oc', 'd', 'di'])\n\nexport type DynamicParamTypesShort = s.Infer<typeof dynamicParamTypesSchema>\n\nconst segmentSchema = s.union([\n  s.string(),\n\n  s.tuple([\n    // Param name\n    s.string(),\n    // Param cache key (almost the same as the value, but arrays are\n    // concatenated into strings)\n    // TODO: We should change this to just be the value. Currently we convert\n    // it back to a value when passing to useParams. It only needs to be\n    // a string when converted to a a cache key, but that doesn't mean we\n    // need to store it as that representation.\n    s.string(),\n    // Dynamic param type\n    dynamicParamTypesSchema,\n  ]),\n])\n\nexport type Segment = s.Infer<typeof segmentSchema>\n\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema: s.Describe<any> = s.tuple([\n  segmentSchema,\n  s.record(\n    s.string(),\n    s.lazy(() => flightRouterStateSchema)\n  ),\n  s.optional(s.nullable(s.string())),\n  s.optional(\n    s.nullable(\n      s.union([\n        s.literal('refetch'),\n        s.literal('refresh'),\n        s.literal('inside-shared-layout'),\n        s.literal('metadata-only'),\n      ])\n    )\n  ),\n  s.optional(s.boolean()),\n])\n\n/**\n * Router state\n */\nexport type FlightRouterState = [\n  segment: Segment,\n  parallelRoutes: { [parallelRouterKey: string]: FlightRouterState },\n  url?: string | null,\n  /**\n   * \"refresh\" and \"refetch\", despite being similarly named, have different\n   * semantics:\n   * - \"refetch\" is used during a request to inform the server where rendering\n   *   should start from.\n   *\n   * - \"refresh\" is used by the client to mark that a segment should re-fetch the\n   *   data from the server for the current segment. It uses the \"url\" property\n   *   above to determine where to fetch from.\n   *\n   * - \"inside-shared-layout\" is used during a prefetch request to inform the\n   *   server that even if the segment matches, it should be treated as if it's\n   *   within the \"new\" part of a navigation — inside the shared layout. If\n   *   the segment doesn't match, then it has no effect, since it would be\n   *   treated as new regardless. If it does match, though, the server does not\n   *   need to render it, because the client already has it.\n   *\n   * - \"metadata-only\" instructs the server to skip rendering the segments and\n   *   only send the head data.\n   *\n   *   A bit confusing, but that's because it has only one extremely narrow use\n   *   case — during a non-PPR prefetch, the server uses it to find the first\n   *   loading boundary beneath a shared layout.\n   *\n   *   TODO: We should rethink the protocol for dynamic requests. It might not\n   *   make sense for the client to send a FlightRouterState, since this type is\n   *   overloaded with concerns.\n   */\n  refresh?:\n    | 'refetch'\n    | 'refresh'\n    | 'inside-shared-layout'\n    | 'metadata-only'\n    | null,\n  isRootLayout?: boolean,\n  /**\n   * Only present when responding to a tree prefetch request. Indicates whether\n   * there is a loading boundary somewhere in the tree. The client cache uses\n   * this to determine if it can skip the data prefetch request.\n   */\n  hasLoadingBoundary?: HasLoadingBoundary,\n]\n\nexport const enum HasLoadingBoundary {\n  // There is a loading boundary in this particular segment\n  SegmentHasLoadingBoundary = 1,\n  // There is a loading boundary somewhere in the subtree (but not in\n  // this segment)\n  SubtreeHasLoadingBoundary = 2,\n  // There is no loading boundary in this segment or any of its descendants\n  SubtreeHasNoLoadingBoundary = 3,\n}\n\n/**\n * Individual Flight response path\n */\nexport type FlightSegmentPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n    ]\n\n/**\n * Represents a tree of segments and the Flight data (i.e. React nodes) that\n * correspond to each one. The tree is isomorphic to the FlightRouterState;\n * however in the future we want to be able to fetch arbitrary partial segments\n * without having to fetch all its children. So this response format will\n * likely change.\n */\nexport type CacheNodeSeedData = [\n  segment: Segment,\n  node: React.ReactNode | null,\n  parallelRoutes: {\n    [parallelRouterKey: string]: CacheNodeSeedData | null\n  },\n  loading: LoadingModuleData | Promise<LoadingModuleData>,\n  isPartial: boolean,\n]\n\nexport type FlightDataSegment = [\n  /* segment of the rendered slice: */ Segment,\n  /* treePatch */ FlightRouterState,\n  /* cacheNodeSeedData */ CacheNodeSeedData | null, // Can be null during prefetch if there's no loading component\n  /* head: viewport */ HeadData,\n  /* isHeadPartial */ boolean,\n]\n\nexport type FlightDataPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      // Holds full path to the segment.\n      ...FlightSegmentPath[],\n      ...FlightDataSegment,\n    ]\n\n/**\n * The Flight response data\n */\nexport type FlightData = Array<FlightDataPath> | string\n\nexport type ActionResult = Promise<any>\n\nexport type ServerOnInstrumentationRequestError = (\n  error: unknown,\n  // The request could be middleware, node server or web server request,\n  // we normalized them into an aligned format to `onRequestError` API later.\n  request: NextRequestHint | BaseNextRequest | IncomingMessage,\n  errorContext: Parameters<InstrumentationOnRequestError>[2]\n) => void | Promise<void>\n\nexport interface RenderOptsPartial {\n  dir?: string\n  previewProps: __ApiPreviewProps | undefined\n  err?: Error | null\n  dev?: boolean\n  basePath: string\n  trailingSlash: boolean\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  supportsDynamicResponse: boolean\n  runtime?: ServerRuntime\n  serverComponents?: boolean\n  enableTainting?: boolean\n  assetPrefix?: string\n  crossOrigin?: '' | 'anonymous' | 'use-credentials' | undefined\n  nextFontManifest?: DeepReadonly<NextFontManifest>\n  botType?: 'dom' | 'html' | undefined\n  serveStreamingMetadata?: boolean\n  incrementalCache?: import('../lib/incremental-cache').IncrementalCache\n  cacheLifeProfiles?: {\n    [profile: string]: import('../use-cache/cache-life').CacheLife\n  }\n  isOnDemandRevalidate?: boolean\n  isPossibleServerAction?: boolean\n  setIsrStatus?: (key: string, value: boolean | null) => void\n  isRevalidate?: boolean\n  nextExport?: boolean\n  nextConfigOutput?: 'standalone' | 'export'\n  onInstrumentationRequestError?: ServerOnInstrumentationRequestError\n  isDraftMode?: boolean\n  deploymentId?: string\n  onUpdateCookies?: (cookies: string[]) => void\n  loadConfig?: (\n    phase: string,\n    dir: string,\n    customConfig?: object | null,\n    rawConfig?: boolean,\n    silent?: boolean\n  ) => Promise<NextConfigComplete>\n  serverActions?: {\n    bodySizeLimit?: SizeLimit\n    allowedOrigins?: string[]\n  }\n  params?: ParsedUrlQuery\n  isPrefetch?: boolean\n  htmlLimitedBots: string | undefined\n  experimental: {\n    /**\n     * When true, it indicates that the current page supports partial\n     * prerendering.\n     */\n    isRoutePPREnabled?: boolean\n    expireTime: number | undefined\n    staleTimes: ExperimentalConfig['staleTimes'] | undefined\n    clientTraceMetadata: string[] | undefined\n    cacheComponents: boolean\n    clientSegmentCache: boolean | 'client-only'\n    clientParamParsing: boolean\n    dynamicOnHover: boolean\n    inlineCss: boolean\n    authInterrupts: boolean\n  }\n  postponed?: string\n\n  /**\n   * Should wait for react stream allReady to resolve all suspense boundaries,\n   * in order to perform a full page render.\n   */\n  shouldWaitOnAllReady?: boolean\n\n  /**\n   * A prefilled resume data cache. This was either generated for this page\n   * during dev warmup, or when a page with defined params was previously\n   * prerendered, and now its matching optional fallback shell is prerendered.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n\n  /**\n   * When true, the page will be rendered using the static rendering to detect\n   * any dynamic API's that would have stopped the page from being fully\n   * statically generated.\n   */\n  isDebugDynamicAccesses?: boolean\n\n  /**\n   * This is true when:\n   * - source maps are generated\n   * - source maps are applied\n   * - minification is disabled\n   */\n  hasReadableErrorStacks?: boolean\n\n  /**\n   * The maximum length of the headers that are emitted by React and added to\n   * the response.\n   */\n  reactMaxHeadersLength: number | undefined\n\n  isStaticGeneration?: boolean\n\n  /**\n   * When true, the page is prerendered as a fallback shell, while allowing any\n   * dynamic accesses to result in an empty shell. This is the case when there\n   * are also routes prerendered with a more complete set of params.\n   * Prerendering those routes would catch any invalid dynamic accesses.\n   */\n  allowEmptyStaticShell?: boolean\n\n  /**\n   * next config experimental.devtoolSegmentExplorer\n   */\n  devtoolSegmentExplorer?: boolean\n}\n\nexport type RenderOpts = LoadComponentsReturnType<AppPageModule> &\n  RenderOptsPartial &\n  RequestLifecycleOpts\n\nexport type PreloadCallbacks = (() => void)[]\n\nexport type InitialRSCPayload = {\n  /** buildId */\n  b: string\n  /** assetPrefix */\n  p: string\n  /** initialCanonicalUrlParts */\n  c: string[]\n  /** couldBeIntercepted */\n  i: boolean\n  /** initialFlightData */\n  f: FlightDataPath[]\n  /** missingSlots */\n  m: Set<string> | undefined\n  /** GlobalError */\n  G: [React.ComponentType<any>, React.ReactNode | undefined]\n  /** postponed */\n  s: boolean\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for normal rendering\nexport type NavigationFlightResponse = {\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for server actions. Action's flight data can be null\nexport type ActionFlightResponse = {\n  /** actionResult */\n  a: ActionResult\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n}\n\nexport type RSCPayload =\n  | InitialRSCPayload\n  | NavigationFlightResponse\n  | ActionFlightResponse\n","export const RSC_HEADER = 'rsc' as const\nexport const ACTION_HEADER = 'next-action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'next-router-state-tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'next-router-prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change next-router-state-tree to be a segment path, we can use\n// that instead. Then next-router-prefetch and next-router-segment-prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'next-router-segment-prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'next-hmr-refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'next-url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found' as const\n","import { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../shared/lib/router/utils/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\nimport { safePathToRegexp } from '../shared/lib/router/utils/route-match-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (capture.startsWith('...')) {\n      return `:${capture.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = safePathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: DeepReadonly<Rewrite>) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\nimport { normalizeNextQueryParam } from './web/utils'\nimport type { IncomingHttpHeaders, IncomingMessage } from 'http'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { parseReqUrl } from '../lib/url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { parseAndValidateFlightRouterState } from './app-render/parse-and-validate-flight-router-state'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { NEXT_ROUTER_STATE_TREE_HEADER } from '../client/components/app-router-headers'\nimport { getSelectedParams } from '../client/components/router-reducer/compute-changed-path'\n\nfunction filterInternalQuery(\n  query: Record<string, undefined | string | string[]>,\n  paramKeys: string[]\n) {\n  // this is used to pass query information in rewrites\n  // but should not be exposed in final query\n  delete query['nextInternalLocale']\n\n  for (const key in query) {\n    const isNextQueryPrefix =\n      key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n    const isNextInterceptionMarkerPrefix =\n      key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n      key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n    if (\n      isNextQueryPrefix ||\n      isNextInterceptionMarkerPrefix ||\n      paramKeys.includes(key)\n    ) {\n      delete query[key]\n    }\n  }\n}\n\nexport function normalizeCdnUrl(\n  req: BaseNextRequest | IncomingMessage,\n  paramKeys: string[]\n) {\n  // make sure to normalize req.url from CDNs to strip dynamic and rewrite\n  // params from the query which are added during routing\n  const _parsedUrl = parseReqUrl(req.url!)\n\n  // we can't normalize if we can't parse\n  if (!_parsedUrl) {\n    return req.url\n  }\n  delete (_parsedUrl as any).search\n  filterInternalQuery(_parsedUrl.query, paramKeys)\n\n  req.url = formatUrl(_parsedUrl)\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    let paramValue: string\n    const value = params[param]\n\n    if (Array.isArray(value)) {\n      paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n    } else if (value) {\n      paramValue = encodeURIComponent(value)\n    } else {\n      paramValue = ''\n    }\n\n    if (paramValue || optional) {\n      pathname = pathname.replaceAll(builtParam, paramValue)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  query: ParsedUrlQuery,\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex>,\n  defaultRouteMatches: ParsedUrlQuery,\n  ignoreMissingOptional: boolean\n) {\n  let hasValidParams = true\n  let params: ParsedUrlQuery = {}\n\n  for (const key of Object.keys(defaultRouteRegex.groups)) {\n    let value: string | string[] | undefined = query[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    } else if (Array.isArray(value)) {\n      value = value.map(normalizeRscURL)\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreMissingOptional))\n    ) {\n      return { params: {}, hasValidParams: false }\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete query[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      params[key] = value\n    }\n  }\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getServerUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: DeepReadonly<{\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }>\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, {\n      prefixRouteKeys: false,\n    })\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(\n    req: BaseNextRequest | IncomingMessage,\n    parsedUrl: UrlWithParsedQuery\n  ) {\n    const rewriteParams: Record<string, string> = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: DeepReadonly<Rewrite>): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n\n      if (!parsedUrl.pathname) return false\n\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has as Rewrite['has'],\n          rewrite.missing as Rewrite['missing']\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        try {\n          // An interception rewrite might reference a dynamic param for a route the user\n          // is currently on, which wouldn't be extractable from the matched route params.\n          // This attempts to extract the dynamic params from the provided router state.\n          if (isInterceptionRouteRewrite(rewrite as Rewrite)) {\n            const stateHeader = req.headers[NEXT_ROUTER_STATE_TREE_HEADER]\n\n            if (stateHeader) {\n              params = {\n                ...getSelectedParams(\n                  parseAndValidateFlightRouterState(stateHeader)\n                ),\n                ...params,\n              }\n            }\n          }\n        } catch (err) {\n          // this is a no-op -- we couldn't extract dynamic params from the provided router state,\n          // so we'll just use the params from the route matcher\n        }\n\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        // for each property in parsedUrl.query, if the value is parametrized (eg :foo), look up the value\n        // in rewriteParams and replace the parametrized value with the actual value\n        // this is used when the rewrite destination does not contain the original source param\n        // and so the value is still parametrized and needs to be replaced with the actual rewrite param\n        Object.entries(parsedUrl.query).forEach(([key, value]) => {\n          if (value && typeof value === 'string' && value.startsWith(':')) {\n            const paramName = value.slice(1)\n            const actualValue = rewriteParams[paramName]\n            if (actualValue) {\n              parsedUrl.query[key] = actualValue\n            }\n          }\n        })\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n        if (!fsPathname) return false\n\n        if (basePath) {\n          fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const result = normalizeLocalePath(fsPathname, i18n.locales)\n          fsPathname = result.pathname\n          parsedUrl.query.nextInternalLocale =\n            result.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(routeMatchesHeader: string) {\n    // If we don't have a default route regex, we can't get params from route\n    // matches\n    if (!defaultRouteRegex) return null\n\n    const { groups, routeKeys } = defaultRouteRegex\n\n    const matcher = getRouteMatcher({\n      re: {\n        // Simulate a RegExp match from the \\`req.url\\` input\n        exec: (str: string) => {\n          // Normalize all the prefixed query params.\n          const obj: Record<string, string> = Object.fromEntries(\n            new URLSearchParams(str)\n          )\n          for (const [key, value] of Object.entries(obj)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            obj[normalizedKey] = value\n            delete obj[key]\n          }\n\n          // Use all the named route keys.\n          const result = {} as RegExpExecArray\n          for (const keyName of Object.keys(routeKeys)) {\n            const paramName = routeKeys[keyName]\n\n            // If this param name is not a valid parameter name, then skip it.\n            if (!paramName) continue\n\n            const group = groups[paramName]\n            const value = obj[keyName]\n\n            // When we're missing a required param, we can't match the route.\n            if (!group.optional && !value) return null\n\n            result[group.pos] = value\n          }\n\n          return result\n        },\n      },\n      groups,\n    })\n\n    const routeMatches = matcher(routeMatchesHeader)\n    if (!routeMatches) return null\n\n    return routeMatches\n  }\n\n  function normalizeQueryParams(\n    query: Record<string, string | string[] | undefined>,\n    routeParamKeys: Set<string>\n  ) {\n    // this is used to pass query information in rewrites\n    // but should not be exposed in final query\n    delete query['nextInternalLocale']\n\n    for (const [key, value] of Object.entries(query)) {\n      const normalizedKey = normalizeNextQueryParam(key)\n      if (!normalizedKey) continue\n\n      // Remove the prefixed key from the query params because we want\n      // to consume it for the dynamic route matcher.\n      delete query[key]\n      routeParamKeys.add(normalizedKey)\n\n      if (typeof value === 'undefined') continue\n\n      query[normalizedKey] = Array.isArray(value)\n        ? value.map((v) => decodeQueryPathParameter(v))\n        : decodeQueryPathParameter(value)\n    }\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    normalizeQueryParams,\n    getParamsFromRouteMatches,\n    /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */\n    normalizeDynamicRouteParams: (\n      query: ParsedUrlQuery,\n      ignoreMissingOptional: boolean\n    ) => {\n      if (!defaultRouteRegex || !defaultRouteMatches) {\n        return { params: {}, hasValidParams: false }\n      }\n\n      return normalizeDynamicRouteParams(\n        query,\n        defaultRouteRegex,\n        defaultRouteMatches,\n        ignoreMissingOptional\n      )\n    },\n\n    normalizeCdnUrl: (\n      req: BaseNextRequest | IncomingMessage,\n      paramKeys: string[]\n    ) => normalizeCdnUrl(req, paramKeys),\n\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n\n    filterInternalQuery: (query: ParsedUrlQuery, paramKeys: string[]) =>\n      filterInternalQuery(query, paramKeys),\n  }\n}\n\nexport function getPreviouslyRevalidatedTags(\n  headers: IncomingHttpHeaders,\n  previewModeId: string | undefined\n): string[] {\n  return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n    headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId\n    ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    : []\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import type { I18NProvider } from '../lib/i18n-provider'\nimport type { Normalizer } from './normalizer'\n\n/**\n * Normalizes the pathname by removing the locale prefix if any.\n */\nexport class LocaleRouteNormalizer implements Normalizer {\n  constructor(private readonly provider: I18NProvider) {}\n\n  /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */\n  public normalize(pathname: string): string {\n    const match = this.provider.analyze(pathname)\n    return match.pathname\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\n/**\n * @deprecated Use `sortSortableRoutes` or `sortPages` instead.\n */\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\n/**\n * @deprecated Use `sortSortableRouteObjects` or `sortPageObjects` instead.\n */\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { Params } from '../request/params'\n\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  getRouteMatcher,\n  type RouteMatchFn,\n} from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\ntype RouteMatchResult = {\n  params?: Params\n}\n\nexport class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n  private readonly dynamic?: RouteMatchFn\n\n  /**\n   * When set, this is an array of all the other matchers that are duplicates of\n   * this one. This is used by the managers to warn the users about possible\n   * duplicate matches on routes.\n   */\n  public duplicated?: Array<RouteMatcher>\n\n  constructor(public readonly definition: D) {\n    if (isDynamicRoute(definition.pathname)) {\n      this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname))\n    }\n  }\n\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */\n  public get identity(): string {\n    return this.definition.pathname\n  }\n\n  public get isDynamic() {\n    return this.dynamic !== undefined\n  }\n\n  public match(pathname: string): RouteMatch<D> | null {\n    const result = this.test(pathname)\n    if (!result) return null\n\n    return { definition: this.definition, params: result.params }\n  }\n\n  public test(pathname: string): RouteMatchResult | null {\n    if (this.dynamic) {\n      const params = this.dynamic(pathname)\n      if (!params) return null\n\n      return { params }\n    }\n\n    if (pathname === this.definition.pathname) {\n      return {}\n    }\n\n    return null\n  }\n}\n","import type { LocaleAnalysisResult } from '../lib/i18n-provider'\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition'\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match'\nimport { RouteMatcher } from './route-matcher'\n\nexport type LocaleMatcherMatchOptions = {\n  /**\n   * If defined, this indicates to the matcher that the request should be\n   * treated as locale-aware. If this is undefined, it means that this\n   * application was not configured for additional locales.\n   */\n  i18n?: LocaleAnalysisResult\n}\n\nexport class LocaleRouteMatcher<\n  D extends LocaleRouteDefinition = LocaleRouteDefinition,\n> extends RouteMatcher<D> {\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextLocale=${this.definition.i18n?.locale}`\n  }\n\n  /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public match(\n    pathname: string,\n    options?: LocaleMatcherMatchOptions\n  ): LocaleRouteMatch<D> | null {\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options)\n    if (!result) return null\n\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale:\n        // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        options?.i18n?.detectedLocale ?? this.definition.i18n?.locale,\n    }\n  }\n\n  /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public test(pathname: string, options?: LocaleMatcherMatchOptions) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && options?.i18n) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (\n        this.definition.i18n.locale &&\n        options.i18n.detectedLocale &&\n        this.definition.i18n.locale !== options.i18n.detectedLocale\n      ) {\n        return null\n      }\n\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname)\n    }\n\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname)\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils'\nimport type { RouteKind } from '../route-kind'\nimport type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherProvider } from '../route-matcher-providers/route-matcher-provider'\nimport type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type { MatchOptions, RouteMatcherManager } from './route-matcher-manager'\nimport { getSortedRoutes } from '../../shared/lib/router/utils'\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { DetachedPromise } from '../../lib/detached-promise'\n\ninterface RouteMatchers {\n  static: ReadonlyArray<RouteMatcher>\n  dynamic: ReadonlyArray<RouteMatcher>\n  duplicates: Record<string, ReadonlyArray<RouteMatcher>>\n}\n\nexport class DefaultRouteMatcherManager implements RouteMatcherManager {\n  private readonly providers: Array<RouteMatcherProvider> = []\n  protected readonly matchers: RouteMatchers = {\n    static: [],\n    dynamic: [],\n    duplicates: {},\n  }\n  private lastCompilationID = this.compilationID\n\n  /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */\n  private get compilationID() {\n    return this.providers.length\n  }\n\n  private waitTillReadyPromise?: Promise<void>\n  public async waitTillReady(): Promise<void> {\n    if (this.waitTillReadyPromise) {\n      await this.waitTillReadyPromise\n      delete this.waitTillReadyPromise\n    }\n  }\n\n  private previousMatchers: ReadonlyArray<RouteMatcher> = []\n  public async reload() {\n    const { promise, resolve, reject } = new DetachedPromise<void>()\n    this.waitTillReadyPromise = promise\n\n    // Grab the compilation ID for this run, we'll verify it at the end to\n    // ensure that if any routes were added before reloading is finished that\n    // we error out.\n    const compilationID = this.compilationID\n\n    try {\n      // Collect all the matchers from each provider.\n      const matchers: Array<RouteMatcher> = []\n\n      // Get all the providers matchers.\n      const providersMatchers: ReadonlyArray<ReadonlyArray<RouteMatcher>> =\n        await Promise.all(this.providers.map((provider) => provider.matchers()))\n\n      // Use this to detect duplicate pathnames.\n      const all = new Map<string, RouteMatcher>()\n      const duplicates: Record<string, RouteMatcher[]> = {}\n      for (const providerMatchers of providersMatchers) {\n        for (const matcher of providerMatchers) {\n          // Reset duplicated matches when reloading from pages conflicting state.\n          if (matcher.duplicated) delete matcher.duplicated\n          // Test to see if the matcher being added is a duplicate.\n          const duplicate = all.get(matcher.definition.pathname)\n          if (duplicate) {\n            // This looks a little weird, but essentially if the pathname\n            // already exists in the duplicates map, then we got that array\n            // reference. Otherwise, we create a new array with the original\n            // duplicate first. Then we push the new matcher into the duplicate\n            // array, and reset it to the duplicates object (which may be a\n            // no-op if the pathname already existed in the duplicates object).\n            // Then we set the array of duplicates on both the original\n            // duplicate object and the new one, so we can keep them in sync.\n            // If a new duplicate is found, and it matches an existing pathname,\n            // the retrieval of the `other` will actually return the array\n            // reference used by all other duplicates. This is why ReadonlyArray\n            // is so important! Array's are always references!\n            const others = duplicates[matcher.definition.pathname] ?? [\n              duplicate,\n            ]\n            others.push(matcher)\n            duplicates[matcher.definition.pathname] = others\n\n            // Add duplicated details to each route.\n            duplicate.duplicated = others\n            matcher.duplicated = others\n\n            // TODO: see if we should error for duplicates in production?\n          }\n\n          matchers.push(matcher)\n\n          // Add the matcher's pathname to the set.\n          all.set(matcher.definition.pathname, matcher)\n        }\n      }\n\n      // Update the duplicate matchers. This is used in the development manager\n      // to warn about duplicates.\n      this.matchers.duplicates = duplicates\n\n      // If the cache is the same as what we just parsed, we can exit now. We\n      // can tell by using the `===` which compares object identity, which for\n      // the manifest matchers, will return the same matcher each time.\n      if (\n        this.previousMatchers.length === matchers.length &&\n        this.previousMatchers.every(\n          (cachedMatcher, index) => cachedMatcher === matchers[index]\n        )\n      ) {\n        return\n      }\n      this.previousMatchers = matchers\n\n      // For matchers that are for static routes, filter them now.\n      this.matchers.static = matchers.filter((matcher) => !matcher.isDynamic)\n\n      // For matchers that are for dynamic routes, filter them and sort them now.\n      const dynamic = matchers.filter((matcher) => matcher.isDynamic)\n\n      // As `getSortedRoutes` only takes an array of strings, we need to create\n      // a map of the pathnames (used for sorting) and the matchers. When we\n      // have locales, there may be multiple matches for the same pathname. To\n      // handle this, we keep a map of all the indexes (in `reference`) and\n      // merge them in later.\n\n      const reference = new Map<string, number[]>()\n      const pathnames = new Array<string>()\n      for (let index = 0; index < dynamic.length; index++) {\n        // Grab the pathname from the definition.\n        const pathname = dynamic[index].definition.pathname\n\n        // Grab the index in the dynamic array, push it into the reference.\n        const indexes = reference.get(pathname) ?? []\n        indexes.push(index)\n\n        // If this is the first one set it. If it isn't, we don't need to\n        // because pushing above on the array will mutate the array already\n        // stored there because array's are always a reference!\n        if (indexes.length === 1) reference.set(pathname, indexes)\n        // Otherwise, continue, we've already added this pathname before.\n        else continue\n\n        pathnames.push(pathname)\n      }\n\n      // Sort the array of pathnames.\n      const sorted = getSortedRoutes(pathnames)\n\n      // For each of the sorted pathnames, iterate over them, grabbing the list\n      // of indexes and merging them back into the new `sortedDynamicMatchers`\n      // array. The order of the same matching pathname doesn't matter because\n      // they will have other matching characteristics (like the locale) that\n      // is considered.\n      const sortedDynamicMatchers: Array<RouteMatcher> = []\n      for (const pathname of sorted) {\n        const indexes = reference.get(pathname)\n        if (!Array.isArray(indexes)) {\n          throw new Error('Invariant: expected to find identity in indexes map')\n        }\n\n        const dynamicMatches = indexes.map((index) => dynamic[index])\n\n        sortedDynamicMatchers.push(...dynamicMatches)\n      }\n\n      this.matchers.dynamic = sortedDynamicMatchers\n\n      // This means that there was a new matcher pushed while we were waiting\n      if (this.compilationID !== compilationID) {\n        throw new Error(\n          'Invariant: expected compilation to finish before new matchers were added, possible missing await'\n        )\n      }\n    } catch (err) {\n      reject(err)\n    } finally {\n      // The compilation ID matched, so mark the complication as finished.\n      this.lastCompilationID = compilationID\n      resolve()\n    }\n  }\n\n  public push(provider: RouteMatcherProvider): void {\n    this.providers.push(provider)\n  }\n\n  public async test(pathname: string, options: MatchOptions): Promise<boolean> {\n    // See if there's a match for the pathname...\n    const match = await this.match(pathname, options)\n\n    // This default implementation only needs to check to see if there _was_ a\n    // match. The development matcher actually changes it's behavior by not\n    // recompiling the routes.\n    return match !== null\n  }\n\n  public async match(\n    pathname: string,\n    options: MatchOptions\n  ): Promise<RouteMatch<RouteDefinition<RouteKind>> | null> {\n    // \"Iterate\" over the match options. Once we found a single match, exit with\n    // it, otherwise return null below. If no match is found, the inner block\n    // won't be called.\n    for await (const match of this.matchAll(pathname, options)) {\n      return match\n    }\n\n    return null\n  }\n\n  /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */\n  protected validate(\n    pathname: string,\n    matcher: RouteMatcher,\n    options: MatchOptions\n  ): RouteMatch | null {\n    if (matcher instanceof LocaleRouteMatcher) {\n      return matcher.match(pathname, options)\n    }\n\n    // If the locale was inferred from the default locale, then it will have\n    // already added a locale to the pathname. We need to remove it before\n    // matching because this matcher is not locale aware.\n    if (options.i18n?.inferredFromDefault) {\n      return matcher.match(options.i18n.pathname)\n    }\n\n    return matcher.match(pathname)\n  }\n\n  public async *matchAll(\n    pathname: string,\n    options: MatchOptions\n  ): AsyncGenerator<RouteMatch<RouteDefinition<RouteKind>>, null, undefined> {\n    // Guard against the matcher manager from being run before it needs to be\n    // recompiled. This was preferred to re-running the compilation here because\n    // it should be re-ran only when it changes. If a match is attempted before\n    // this is done, it indicates that there is a case where a provider is added\n    // before it was recompiled (an error). We also don't want to affect request\n    // times.\n    if (this.lastCompilationID !== this.compilationID) {\n      throw new Error(\n        'Invariant: expected routes to have been loaded before match'\n      )\n    }\n\n    // Ensure that path matching is done with a leading slash.\n    pathname = ensureLeadingSlash(pathname)\n\n    // If this pathname doesn't look like a dynamic route, and this pathname is\n    // listed in the normalized list of routes, then return it. This ensures\n    // that when a route like `/user/[id]` is encountered, it doesn't just match\n    // with the list of normalized routes.\n    if (!isDynamicRoute(pathname)) {\n      for (const matcher of this.matchers.static) {\n        const match = this.validate(pathname, matcher, options)\n        if (!match) continue\n\n        yield match\n      }\n    }\n\n    // If we should skip handling dynamic routes, exit now.\n    if (options?.skipDynamic) return null\n\n    // Loop over the dynamic matchers, yielding each match.\n    for (const matcher of this.matchers.dynamic) {\n      const match = this.validate(pathname, matcher, options)\n      if (!match) continue\n\n      yield match\n    }\n\n    // We tried direct matching against the pathname and against all the dynamic\n    // paths, so there was no match.\n    return null\n  }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */\nexport class Normalizers implements Normalizer {\n  constructor(private readonly normalizers: Array<Normalizer> = []) {}\n\n  public push(normalizer: Normalizer) {\n    this.normalizers.push(normalizer)\n  }\n\n  public normalize(pathname: string): string {\n    return this.normalizers.reduce<string>(\n      (normalized, normalizer) => normalizer.normalize(normalized),\n      pathname\n    )\n  }\n}\n","import path from '../../shared/lib/isomorphic/path'\nimport type { Normalizer } from './normalizer'\n\nexport class PrefixingNormalizer implements Normalizer {\n  private readonly prefix: string\n\n  constructor(...prefixes: ReadonlyArray<string>) {\n    this.prefix = path.posix.join(...prefixes)\n  }\n\n  public normalize(pathname: string): string {\n    return path.posix.join(this.prefix, pathname)\n  }\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path') as typeof import('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */\nexport class UnderscoreNormalizer implements Normalizer {\n  public normalize(pathname: string): string {\n    return pathname.replace(/%5F/g, '_')\n  }\n}\n","import { Normalizers } from '../../normalizers'\nimport type { Normalizer } from '../../normalizer'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\n\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n  constructor() {\n    super('app')\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(normalizePagePath(page))\n  }\n}\n\nexport class DevAppBundlePathNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer, isTurbopack: boolean) {\n    const normalizers = [\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppBundlePathNormalizer(),\n    ]\n\n    // %5F to _ replacement should only happen with Turbopack.\n    if (isTurbopack) {\n      normalizers.unshift(new UnderscoreNormalizer())\n    }\n    super(normalizers)\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { isAppRouteRoute } from '../is-app-route-route'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions || dynamicExtensions.length === 0) {\n    return `(\\\\.(?:${staticExtensions.join('|')}))`\n  }\n  return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`\n}\n\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns if the file is a metadata route file\n */\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n) {\n  // End with the extension or optional to have the extension\n  // When strictlyMatchExtensions is true, it's used for match file path;\n  // When strictlyMatchExtensions, the dynamic extension is skipped but\n  // static extension is kept, which is usually used for matching route path.\n  const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$'\n  // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n  const variantsMatcher = '\\\\d?'\n  // The -\\w{6} is the suffix that normalized from group routes;\n  const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?'\n\n  const suffixMatcher = `${variantsMatcher}${groupSuffix}`\n\n  const metadataRouteFilesRegex = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${getExtensionRegexString(\n        pageExtensions.concat('txt'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${getExtensionRegexString(\n        pageExtensions.concat('webmanifest', 'json'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n    new RegExp(\n      `[\\\\\\\\/]sitemap${getExtensionRegexString(['xml'], pageExtensions)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.icon.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.apple.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.openGraph.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.twitter.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n  ]\n\n  const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath)\n  const matched = metadataRouteFilesRegex.some((r) =>\n    r.test(normalizedAppDirRelativePath)\n  )\n\n  return matched\n}\n\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route: string) {\n  // extract ext with regex\n  const pathname = route.replace(/\\/route$/, '')\n\n  const matched =\n    isAppRouteRoute(route) &&\n    isMetadataRouteFile(pathname, [], true) &&\n    // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' &&\n    pathname !== '/manifest.webmanifest' &&\n    !pathname.endsWith('/sitemap.xml')\n\n  return matched\n}\n\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */\nexport function isMetadataPage(page: string) {\n  const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = normalizeAppPath(route)\n    .replace(/^\\/?app\\//, '')\n    // Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')\n    // Remove the /route suffix\n    .replace(/\\/route$/, '')\n\n  if (page[0] !== '/') page = '/' + page\n\n  const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n","import type { Normalizer } from './normalizer'\n\nexport function wrapNormalizerFn(fn: (pathname: string) => string): Normalizer {\n  return { normalize: fn }\n}\n","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport { Normalizers } from '../../normalizers'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\nimport type { Normalizer } from '../../normalizer'\n\nexport class AppPathnameNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The pathname to match should have the trailing `/page` and other route\n      // group information stripped from it.\n      wrapNormalizerFn(normalizeAppPath),\n      // The page should have the `%5F` characters replaced with `_` characters.\n      new UnderscoreNormalizer(),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevAppPathnameNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppPathnameNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import {\n  AppBundlePathNormalizer,\n  DevAppBundlePathNormalizer,\n} from './app-bundle-path-normalizer'\nimport { AppFilenameNormalizer } from './app-filename-normalizer'\nimport { DevAppPageNormalizer } from './app-page-normalizer'\nimport {\n  AppPathnameNormalizer,\n  DevAppPathnameNormalizer,\n} from './app-pathname-normalizer'\n\nexport class AppNormalizers {\n  public readonly filename: AppFilenameNormalizer\n  public readonly pathname: AppPathnameNormalizer\n  public readonly bundlePath: AppBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new AppFilenameNormalizer(distDir)\n    this.pathname = new AppPathnameNormalizer()\n    this.bundlePath = new AppBundlePathNormalizer()\n  }\n}\n\nexport class DevAppNormalizers {\n  public readonly page: DevAppPageNormalizer\n  public readonly pathname: DevAppPathnameNormalizer\n  public readonly bundlePath: DevAppBundlePathNormalizer\n\n  constructor(\n    appDir: string,\n    extensions: ReadonlyArray<string>,\n    isTurbopack: boolean\n  ) {\n    this.page = new DevAppPageNormalizer(appDir, extensions, isTurbopack)\n    this.pathname = new DevAppPathnameNormalizer(this.page)\n    this.bundlePath = new DevAppBundlePathNormalizer(this.page, isTurbopack)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\n\nexport class AppPageRouteMatcher extends RouteMatcher<AppPageRouteDefinition> {\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextPage=${this.definition.page}`\n  }\n}\n","import type { RouteMatcherProvider } from '../route-matcher-provider'\nimport type { RouteMatcher } from '../../route-matchers/route-matcher'\n\ninterface LoaderComparable<D> {\n  load(): Promise<D>\n  compare(left: D, right: D): boolean\n}\n\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport abstract class CachedRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n  D = any,\n> implements RouteMatcherProvider<M>\n{\n  private data?: D\n  private cached: ReadonlyArray<M> = []\n\n  constructor(private readonly loader: LoaderComparable<D>) {}\n\n  protected abstract transform(data: D): Promise<ReadonlyArray<M>>\n\n  public async matchers(): Promise<readonly M[]> {\n    const data = await this.loader.load()\n    if (!data) return []\n\n    // Return the cached matchers if the data has not changed.\n    if (this.data && this.loader.compare(this.data, data)) return this.cached\n    this.data = data\n\n    // Transform the manifest into matchers.\n    const matchers = await this.transform(data)\n\n    // Cache the matchers.\n    this.cached = matchers\n\n    return matchers\n  }\n}\n","import type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider'\n\nexport abstract class ManifestRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n> extends CachedRouteMatcherProvider<M, Manifest | null> {\n  constructor(manifestName: string, manifestLoader: ManifestLoader) {\n    super({\n      load: async () => manifestLoader.load(manifestName),\n      compare: (left, right) => left === right,\n    })\n  }\n}\n","import { isAppPageRoute } from '../../lib/is-app-page-route'\n\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { AppNormalizers } from '../normalizers/built/app'\nimport { RouteKind } from '../route-kind'\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\n\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider<AppPageRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppPageRouteMatcher>> {\n    // This matcher only matches app pages.\n    const pages = Object.keys(manifest).filter((page) => isAppPageRoute(page))\n\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const allAppPaths: Record<string, string[]> = {}\n    for (const page of pages) {\n      const pathname = this.normalizers.pathname.normalize(page)\n      if (pathname in allAppPaths) allAppPaths[pathname].push(page)\n      else allAppPaths[pathname] = [page]\n    }\n\n    // Format the routes.\n    const matchers: Array<AppPageRouteMatcher> = []\n    for (const [pathname, appPaths] of Object.entries(allAppPaths)) {\n      // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n      const page = appPaths[0]\n\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppPageRouteMatcher({\n          kind: RouteKind.APP_PAGE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n          appPaths,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppRouteRouteDefinition } from '../route-definitions/app-route-route-definition'\n\nexport class AppRouteRouteMatcher extends RouteMatcher<AppRouteRouteDefinition> {}\n","import { isAppRouteRoute } from '../../lib/is-app-route-route'\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport { AppNormalizers } from '../normalizers/built/app'\n\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider<AppRouteRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppRouteRouteMatcher>> {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter((page) => isAppRouteRoute(page))\n\n    // Format the routes.\n    const matchers: Array<AppRouteRouteMatcher> = []\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const pathname = this.normalizers.pathname.normalize(page)\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppRouteRouteMatcher({\n          kind: RouteKind.APP_ROUTE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesAPIRouteMatcher extends RouteMatcher<PagesAPIRouteDefinition> {}\n\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher<PagesAPIRouteDefinition> {}\n","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport type { Normalizer } from '../../normalizer'\nimport { Normalizers } from '../../normalizers'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\n\nexport class PagesBundlePathNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The bundle path should have the trailing `/index` stripped from\n      // it.\n      wrapNormalizerFn(normalizePagePath),\n      // The page should prefixed with `pages/`.\n      new PrefixingNormalizer('pages'),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n  constructor(pagesNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pagesNormalizer,\n      // Normalize the app page to a pathname.\n      new PagesBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import {\n  DevPagesBundlePathNormalizer,\n  PagesBundlePathNormalizer,\n} from './pages-bundle-path-normalizer'\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer'\nimport { DevPagesPageNormalizer } from './pages-page-normalizer'\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer'\n\nexport class PagesNormalizers {\n  public readonly filename: PagesFilenameNormalizer\n  public readonly bundlePath: PagesBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new PagesFilenameNormalizer(distDir)\n    this.bundlePath = new PagesBundlePathNormalizer()\n\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n  }\n}\n\nexport class DevPagesNormalizers {\n  public readonly page: DevPagesPageNormalizer\n  public readonly pathname: DevPagesPathnameNormalizer\n  public readonly bundlePath: DevPagesBundlePathNormalizer\n\n  constructor(pagesDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevPagesPageNormalizer(pagesDir, extensions)\n    this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions)\n    this.bundlePath = new DevPagesBundlePathNormalizer(this.page)\n  }\n}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesAPILocaleRouteMatcher,\n  PagesAPIRouteMatcher,\n} from '../route-matchers/pages-api-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesAPIRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesAPIRouteMatcher>> {\n    // This matcher is only for Pages API routes.\n    const pathnames = Object.keys(manifest).filter((pathname) =>\n      isAPIRoute(pathname)\n    )\n\n    const matchers: Array<PagesAPIRouteMatcher> = []\n\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesAPILocaleRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesAPIRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { PagesRouteDefinition } from '../route-definitions/pages-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesRouteMatcher extends RouteMatcher<PagesRouteDefinition> {}\n\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher<PagesRouteDefinition> {}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesLocaleRouteMatcher,\n  PagesRouteMatcher,\n} from '../route-matchers/pages-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesRouteMatcher>> {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest)\n      .filter((pathname) => !isAPIRoute(pathname))\n      // Remove any blocked pages (page that can't be routed to, like error or\n      // internal pages).\n      .filter((pathname) => {\n        const normalized =\n          this.i18nProvider?.analyze(pathname).pathname ?? pathname\n\n        // Skip any blocked pages.\n        if (BLOCKED_PAGES.includes(normalized)) return false\n\n        return true\n      })\n\n    const matchers: Array<PagesRouteMatcher> = []\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesLocaleRouteMatcher({\n            kind: RouteKind.PAGES,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesRouteMatcher({\n            kind: RouteKind.PAGES,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { Manifest, ManifestLoader } from './manifest-loader'\n\nexport class ServerManifestLoader implements ManifestLoader {\n  constructor(private readonly getter: (name: string) => Manifest | null) {}\n\n  public load(name: string): Manifest | null {\n    return this.getter(name)\n  }\n}\n","import type { DomainLocale, I18NConfig } from '../config-shared'\nimport { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param req the request object\n   * @param pathname the pathname that could contain a locale prefix\n   * @returns the locale analysis result\n   */\n  public fromRequest(\n    req: NextIncomingMessage,\n    pathname: string\n  ): LocaleAnalysisResult {\n    const detectedLocale = getRequestMeta(req, 'locale')\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          console.warn(\n            `The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault:\n        getRequestMeta(req, 'localeInferredFromDefault') ?? false,\n    }\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport { isNodeNextResponse } from './base-http/helpers'\n\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { splitCookiesString } from './web/utils'\n\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */\nexport async function sendResponse(\n  req: BaseNextRequest,\n  res: BaseNextResponse,\n  response: Response,\n  waitUntil?: Promise<unknown>\n): Promise<void> {\n  if (\n    // The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' &&\n    isNodeNextResponse(res)\n  ) {\n    // Copy over the response status.\n    res.statusCode = response.status\n    res.statusMessage = response.statusText\n\n    // TODO: this is not spec-compliant behavior and we should not restrict\n    // headers that are allowed to appear many times.\n    //\n    // See:\n    // https://github.com/vercel/next.js/pull/70127\n    const headersWithMultipleValuesAllowed = [\n      // can add more headers to this list if needed\n      'set-cookie',\n      'www-authenticate',\n      'proxy-authenticate',\n      'vary',\n    ]\n\n    // Copy over the response headers.\n    response.headers?.forEach((value, name) => {\n      // `x-middleware-set-cookie` is an internal header not needed for the response\n      if (name.toLowerCase() === 'x-middleware-set-cookie') {\n        return\n      }\n\n      // The append handling is special cased for `set-cookie`.\n      if (name.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          res.appendHeader(name, cookie)\n        }\n      } else {\n        // only append the header if it is either not present in the outbound response\n        // or if the header supports multiple values\n        const isHeaderPresent = typeof res.getHeader(name) !== 'undefined'\n        if (\n          headersWithMultipleValuesAllowed.includes(name.toLowerCase()) ||\n          !isHeaderPresent\n        ) {\n          res.appendHeader(name, value)\n        }\n      }\n    })\n\n    /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */\n\n    const { originalResponse } = res\n\n    // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n    if (response.body && req.method !== 'HEAD') {\n      await pipeToNodeResponse(response.body, originalResponse, waitUntil)\n    } else {\n      originalResponse.end()\n    }\n  }\n}\n","import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class SuffixPathnameNormalizer implements Normalizer {\n  constructor(private readonly suffix: string) {}\n\n  public match(pathname: string) {\n    // If the pathname doesn't end in the suffix, we don't match.\n    if (!pathname.endsWith(this.suffix)) return false\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    return pathname.substring(0, pathname.length - this.suffix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class RSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_SUFFIX)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_PREFETCH_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class PrefetchRSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_PREFETCH_SUFFIX)\n  }\n\n  public match(pathname: string): boolean {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return true\n    }\n\n    return super.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return '/'\n    }\n\n    return super.normalize(pathname, matched)\n  }\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class PrefixPathnameNormalizer implements Normalizer {\n  constructor(private readonly prefix: string) {\n    if (prefix.endsWith('/')) {\n      throw new Error(\n        `PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`\n      )\n    }\n  }\n\n  public match(pathname: string) {\n    // If the pathname doesn't start with the prefix, we don't match.\n    if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n      return false\n    }\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    if (pathname.length === this.prefix.length) {\n      return '/'\n    }\n\n    return pathname.substring(this.prefix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport { PrefixPathnameNormalizer } from './prefix'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class NextDataPathnameNormalizer implements PathnameNormalizer {\n  private readonly prefix: PrefixPathnameNormalizer\n  private readonly suffix = new SuffixPathnameNormalizer('.json')\n  constructor(buildID: string) {\n    if (!buildID) {\n      throw new Error('Invariant: buildID is required')\n    }\n\n    this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`)\n  }\n\n  public match(pathname: string) {\n    return this.prefix.match(pathname) && this.suffix.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    pathname = this.prefix.normalize(pathname, true)\n    pathname = this.suffix.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param pathname - The URL path that needs to be optimized.\n * @returns - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n","import { createAsyncLocalStorage } from '../app-render/async-local-storage'\n\nexport function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type RunnableBuiltinRequestContext = BuiltinRequestContext & {\n  run<T>(value: BuiltinRequestContextValue, callback: () => T): T\n}\n\nexport type BuiltinRequestContextValue = {\n  waitUntil?: WaitUntil\n}\nexport type WaitUntil = (promise: Promise<any>) => void\n\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */\nexport function createLocalRequestContext(): RunnableBuiltinRequestContext {\n  const storage = createAsyncLocalStorage<BuiltinRequestContextValue>()\n  return {\n    get: () => storage.getStore(),\n    run: (value, callback) => storage.run(value, callback),\n  }\n}\n","import type { WaitUntil } from '../../after/builtin-request-context'\nimport { PageSignatureError } from '../error'\nimport type { NextRequest } from './request'\n\nconst responseSymbol = Symbol('response')\nconst passThroughSymbol = Symbol('passThrough')\nconst waitUntilSymbol = Symbol('waitUntil')\n\nclass FetchEvent {\n  // TODO(after): get rid of the 'internal' variant and always use an external waitUntil\n  // (this means removing `FetchEventResult.waitUntil` which also requires a builder change)\n  readonly [waitUntilSymbol]:\n    | { kind: 'internal'; promises: Promise<any>[] }\n    | { kind: 'external'; function: WaitUntil };\n\n  [responseSymbol]?: Promise<Response>;\n  [passThroughSymbol] = false\n\n  constructor(_request: Request, waitUntil?: WaitUntil) {\n    this[waitUntilSymbol] = waitUntil\n      ? { kind: 'external', function: waitUntil }\n      : { kind: 'internal', promises: [] }\n  }\n\n  // TODO: is this dead code? NextFetchEvent never lets this get called\n  respondWith(response: Response | Promise<Response>): void {\n    if (!this[responseSymbol]) {\n      this[responseSymbol] = Promise.resolve(response)\n    }\n  }\n\n  // TODO: is this dead code? passThroughSymbol is unused\n  passThroughOnException(): void {\n    this[passThroughSymbol] = true\n  }\n\n  waitUntil(promise: Promise<any>): void {\n    if (this[waitUntilSymbol].kind === 'external') {\n      // if we received an external waitUntil, we delegate to it\n      // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n      const waitUntil = this[waitUntilSymbol].function\n      return waitUntil(promise)\n    } else {\n      // if we didn't receive an external waitUntil, we make it work on our own\n      // (and expect the caller to do something with the promises)\n      this[waitUntilSymbol].promises.push(promise)\n    }\n  }\n}\n\nexport function getWaitUntilPromiseFromEvent(\n  event: FetchEvent\n): Promise<void> | undefined {\n  return event[waitUntilSymbol].kind === 'internal'\n    ? Promise.all(event[waitUntilSymbol].promises).then(() => {})\n    : undefined\n}\n\nexport class NextFetchEvent extends FetchEvent {\n  sourcePage: string\n\n  constructor(params: {\n    request: NextRequest\n    page: string\n    context: { waitUntil: WaitUntil } | undefined\n  }) {\n    super(params.request, params.context?.waitUntil)\n    this.sourcePage = params.page\n  }\n\n  /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  get request() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n\n  /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  respondWith() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n}\n","import { stringifyCookie } from '../../web/spec-extension/cookies'\nimport type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { ReflectAdapter } from './adapters/reflect'\n\nimport { ResponseCookies } from './cookies'\n\nconst INTERNALS = Symbol('internal response')\nconst REDIRECTS = new Set([301, 302, 303, 307, 308])\n\nfunction handleMiddlewareField(\n  init: MiddlewareResponseInit | undefined,\n  headers: Headers\n) {\n  if (init?.request?.headers) {\n    if (!(init.request.headers instanceof Headers)) {\n      throw new Error('request.headers must be an instance of Headers')\n    }\n\n    const keys = []\n    for (const [key, value] of init.request.headers) {\n      headers.set('x-middleware-request-' + key, value)\n      keys.push(key)\n    }\n\n    headers.set('x-middleware-override-headers', keys.join(','))\n  }\n}\n\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nexport class NextResponse<Body = unknown> extends Response {\n  [INTERNALS]: {\n    cookies: ResponseCookies\n    url?: NextURL\n    body?: Body\n  }\n\n  constructor(body?: BodyInit | null, init: ResponseInit = {}) {\n    super(body, init)\n\n    const headers = this.headers\n    const cookies = new ResponseCookies(headers)\n\n    const cookiesProxy = new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'delete':\n          case 'set': {\n            return (...args: [string, string]) => {\n              const result = Reflect.apply(target[prop], target, args)\n              const newHeaders = new Headers(headers)\n\n              if (result instanceof ResponseCookies) {\n                headers.set(\n                  'x-middleware-set-cookie',\n                  result\n                    .getAll()\n                    .map((cookie) => stringifyCookie(cookie))\n                    .join(',')\n                )\n              }\n\n              handleMiddlewareField(init, newHeaders)\n              return result\n            }\n          }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    this[INTERNALS] = {\n      cookies: cookiesProxy,\n      url: init.url\n        ? new NextURL(init.url, {\n            headers: toNodeOutgoingHttpHeaders(headers),\n            nextConfig: init.nextConfig,\n          })\n        : undefined,\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      url: this.url,\n      // rest of props come from Response\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      headers: Object.fromEntries(this.headers),\n      ok: this.ok,\n      redirected: this.redirected,\n      status: this.status,\n      statusText: this.statusText,\n      type: this.type,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  static json<JsonBody>(\n    body: JsonBody,\n    init?: ResponseInit\n  ): NextResponse<JsonBody> {\n    const response: Response = Response.json(body, init)\n    return new NextResponse(response.body, response)\n  }\n\n  static redirect(url: string | NextURL | URL, init?: number | ResponseInit) {\n    const status = typeof init === 'number' ? init : init?.status ?? 307\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError(\n        'Failed to execute \"redirect\" on \"response\": Invalid status code'\n      )\n    }\n    const initObj = typeof init === 'object' ? init : {}\n    const headers = new Headers(initObj?.headers)\n    headers.set('Location', validateURL(url))\n\n    return new NextResponse(null, {\n      ...initObj,\n      headers,\n      status,\n    })\n  }\n\n  static rewrite(\n    destination: string | NextURL | URL,\n    init?: MiddlewareResponseInit\n  ) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-rewrite', validateURL(destination))\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n\n  static next(init?: MiddlewareResponseInit) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-next', '1')\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n}\n\ninterface ResponseInit extends globalThis.ResponseInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig\n    trailingSlash?: boolean\n  }\n  url?: string\n}\n\ninterface ModifiedRequest {\n  /**\n   * If this is set, the request headers will be overridden with this value.\n   */\n  headers?: Headers\n}\n\ninterface MiddlewareResponseInit extends globalThis.ResponseInit {\n  /**\n   * These fields will override the request from clients.\n   */\n  request?: ModifiedRequest\n}\n","import { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external'\nimport type { RequestStore } from '../../../app-render/work-unit-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// We use this to type some APIs but we don't construct instances directly\nexport type { ResponseCookies }\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\ntype SetCookieArgs =\n  | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n  | [options: ResponseCookie]\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting workStore\n      const workStore = workAsyncStorage.getStore()\n      if (workStore) {\n        workStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    const wrappedCookies = new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (...args: SetCookieArgs) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.set(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    return wrappedCookies\n  }\n}\n\nexport function createCookiesWithMutableAccessCheck(\n  requestStore: RequestStore\n): ResponseCookies {\n  const wrappedCookies = new Proxy(requestStore.mutableCookies, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'delete':\n          return function (...args: [string] | [ResponseCookie]) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().delete')\n            target.delete(...args)\n            return wrappedCookies\n          }\n        case 'set':\n          return function (...args: SetCookieArgs) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().set')\n            target.set(...args)\n            return wrappedCookies\n          }\n\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  })\n  return wrappedCookies\n}\n\nexport function areCookiesMutableInCurrentPhase(requestStore: RequestStore) {\n  return requestStore.phase === 'action'\n}\n\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */\nfunction ensureCookiesAreStillMutable(\n  requestStore: RequestStore,\n  _callingExpression: string\n) {\n  if (!areCookiesMutableInCurrentPhase(requestStore)) {\n    // TODO: maybe we can give a more precise error message based on callingExpression?\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\nexport function responseCookiesToRequestCookies(\n  responseCookies: ResponseCookies\n): RequestCookies {\n  const requestCookies = new RequestCookies(new Headers())\n  for (const cookie of responseCookies.getAll()) {\n    requestCookies.set(cookie)\n  }\n  return requestCookies\n}\n","import DefaultCacheHandler from '../lib/cache-handlers/default.external'\nimport type { CacheHandlerCompat } from '../lib/cache-handlers/types'\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? (message: string, ...args: any[]) => {\n      console.log(`use-cache: ${message}`, ...args)\n    }\n  : undefined\n\nconst handlersSymbol = Symbol.for('@next/cache-handlers')\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map')\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set')\n\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */\nconst reference: typeof globalThis & {\n  [handlersSymbol]?: {\n    RemoteCache?: CacheHandlerCompat\n    DefaultCache?: CacheHandlerCompat\n  }\n  [handlersMapSymbol]?: Map<string, CacheHandlerCompat>\n  [handlersSetSymbol]?: Set<CacheHandlerCompat>\n} = globalThis\n\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */\nexport function initializeCacheHandlers(): boolean {\n  // If the cache handlers have already been initialized, don't do it again.\n  if (reference[handlersMapSymbol]) {\n    debug?.('cache handlers already initialized')\n    return false\n  }\n\n  debug?.('initializing cache handlers')\n  reference[handlersMapSymbol] = new Map<string, CacheHandlerCompat>()\n\n  // Initialize the cache from the symbol contents first.\n  if (reference[handlersSymbol]) {\n    let fallback: CacheHandlerCompat\n    if (reference[handlersSymbol].DefaultCache) {\n      debug?.('setting \"default\" cache handler from symbol')\n      fallback = reference[handlersSymbol].DefaultCache\n    } else {\n      debug?.('setting \"default\" cache handler from default')\n      fallback = DefaultCacheHandler\n    }\n\n    reference[handlersMapSymbol].set('default', fallback)\n\n    if (reference[handlersSymbol].RemoteCache) {\n      debug?.('setting \"remote\" cache handler from symbol')\n      reference[handlersMapSymbol].set(\n        'remote',\n        reference[handlersSymbol].RemoteCache\n      )\n    } else {\n      debug?.('setting \"remote\" cache handler from default')\n      reference[handlersMapSymbol].set('remote', fallback)\n    }\n  } else {\n    debug?.('setting \"default\" cache handler from default')\n    reference[handlersMapSymbol].set('default', DefaultCacheHandler)\n    debug?.('setting \"remote\" cache handler from default')\n    reference[handlersMapSymbol].set('remote', DefaultCacheHandler)\n  }\n\n  // Create a set of the cache handlers.\n  reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values())\n\n  return true\n}\n\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandler(kind: string): CacheHandlerCompat | undefined {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  return reference[handlersMapSymbol].get(kind)\n}\n\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */\nexport function getCacheHandlers():\n  | SetIterator<CacheHandlerCompat>\n  | undefined {\n  if (!reference[handlersSetSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersSetSymbol].values()\n}\n\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandlerEntries():\n  | MapIterator<[string, CacheHandlerCompat]>\n  | undefined {\n  if (!reference[handlersMapSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersMapSymbol].entries()\n}\n\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */\nexport function setCacheHandler(\n  kind: string,\n  cacheHandler: CacheHandlerCompat\n): void {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  debug?.('setting cache handler for \"%s\"', kind)\n  reference[handlersMapSymbol].set(kind, cacheHandler)\n  reference[handlersSetSymbol].add(cacheHandler)\n}\n","import type { RequestData, FetchEventResult } from './types'\nimport type { RequestInit } from './spec-extension/request'\nimport { PageSignatureError } from './error'\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils'\nimport {\n  NextFetchEvent,\n  getWaitUntilPromiseFromEvent,\n} from './spec-extension/fetch-event'\nimport { NextRequest } from './spec-extension/request'\nimport { NextResponse } from './spec-extension/response'\nimport {\n  parseRelativeURL,\n  getRelativeURL,\n} from '../../shared/lib/router/utils/relativize-url'\nimport { NextURL } from './next-url'\nimport { stripInternalSearchParams } from '../internal-utils'\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths'\nimport {\n  FLIGHT_HEADERS,\n  NEXT_REWRITTEN_PATH_HEADER,\n  NEXT_REWRITTEN_QUERY_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  RSC_HEADER,\n} from '../../client/components/app-router-headers'\nimport { ensureInstrumentationRegistered } from './globals'\nimport { createRequestStoreForAPI } from '../async-storage/request-store'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { createWorkStore } from '../async-storage/work-store'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers'\nimport { getTracer } from '../lib/trace/tracer'\nimport type { TextMapGetter } from 'next/dist/compiled/@opentelemetry/api'\nimport { MiddlewareSpan } from '../lib/trace/constants'\nimport { CloseController } from './web-on-close'\nimport { getEdgePreviewProps } from './get-edge-preview-props'\nimport { getBuiltinRequestContext } from '../after/builtin-request-context'\nimport { getImplicitTags } from '../lib/implicit-tags'\n\nexport class NextRequestHint extends NextRequest {\n  sourcePage: string\n  fetchMetrics: FetchEventResult['fetchMetrics'] | undefined\n\n  constructor(params: {\n    init: RequestInit\n    input: Request | string\n    page: string\n  }) {\n    super(params.input, params.init)\n    this.sourcePage = params.page\n  }\n\n  get request() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  respondWith() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  waitUntil() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n}\n\nconst headersGetter: TextMapGetter<Headers> = {\n  keys: (headers) => Array.from(headers.keys()),\n  get: (headers, key) => headers.get(key) ?? undefined,\n}\n\nexport type AdapterOptions = {\n  handler: (req: NextRequestHint, event: NextFetchEvent) => Promise<Response>\n  page: string\n  request: RequestData\n  IncrementalCache?: typeof import('../lib/incremental-cache').IncrementalCache\n  incrementalCacheHandler?: typeof import('../lib/incremental-cache').CacheHandler\n  bypassNextUrl?: boolean\n}\n\nlet propagator: <T>(request: NextRequestHint, fn: () => T) => T = (\n  request,\n  fn\n) => {\n  const tracer = getTracer()\n  return tracer.withPropagatedContext(request.headers, fn, headersGetter)\n}\n\nlet testApisIntercepted = false\n\nfunction ensureTestApisIntercepted() {\n  if (!testApisIntercepted) {\n    testApisIntercepted = true\n    if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n      const { interceptTestApis, wrapRequestHandler } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server-edge') as typeof import('../../experimental/testmode/server-edge')\n      interceptTestApis()\n      propagator = wrapRequestHandler(propagator)\n    }\n  }\n}\n\nexport async function adapter(\n  params: AdapterOptions\n): Promise<FetchEventResult> {\n  ensureTestApisIntercepted()\n  await ensureInstrumentationRegistered()\n\n  // TODO-APP: use explicit marker for this\n  const isEdgeRendering =\n    typeof (globalThis as any).__BUILD_MANIFEST !== 'undefined'\n\n  params.request.url = normalizeRscURL(params.request.url)\n\n  const requestURL = params.bypassNextUrl\n    ? new URL(params.request.url)\n    : new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig,\n      })\n\n  // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n  // Instead we use the keys before iteration.\n  const keys = [...requestURL.searchParams.keys()]\n  for (const key of keys) {\n    const value = requestURL.searchParams.getAll(key)\n\n    const normalizedKey = normalizeNextQueryParam(key)\n    if (normalizedKey) {\n      requestURL.searchParams.delete(normalizedKey)\n      for (const val of value) {\n        requestURL.searchParams.append(normalizedKey, val)\n      }\n      requestURL.searchParams.delete(key)\n    }\n  }\n\n  // Ensure users only see page requests, never data requests.\n  let buildId = process.env.__NEXT_BUILD_ID || ''\n  if ('buildId' in requestURL) {\n    buildId = (requestURL as NextURL).buildId || ''\n    requestURL.buildId = ''\n  }\n\n  const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers)\n  const isNextDataRequest = requestHeaders.has('x-nextjs-data')\n  const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1'\n\n  if (isNextDataRequest && requestURL.pathname === '/index') {\n    requestURL.pathname = '/'\n  }\n\n  const flightHeaders = new Map()\n\n  // Headers should only be stripped for middleware\n  if (!isEdgeRendering) {\n    for (const header of FLIGHT_HEADERS) {\n      const value = requestHeaders.get(header)\n      if (value !== null) {\n        flightHeaders.set(header, value)\n        requestHeaders.delete(header)\n      }\n    }\n  }\n\n  const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n    ? new URL(params.request.url)\n    : requestURL\n\n  const rscHash = normalizeURL.searchParams.get(NEXT_RSC_UNION_QUERY)\n\n  const request = new NextRequestHint({\n    page: params.page,\n    // Strip internal query parameters off the request.\n    input: stripInternalSearchParams(normalizeURL).toString(),\n    init: {\n      body: params.request.body,\n      headers: requestHeaders,\n      method: params.request.method,\n      nextConfig: params.request.nextConfig,\n      signal: params.request.signal,\n    },\n  })\n\n  /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */\n  if (isNextDataRequest) {\n    Object.defineProperty(request, '__isData', {\n      enumerable: false,\n      value: true,\n    })\n  }\n\n  if (\n    // If we are inside of the next start sandbox\n    // leverage the shared instance if not we need\n    // to create a fresh cache instance each time\n    !(globalThis as any).__incrementalCacheShared &&\n    (params as any).IncrementalCache\n  ) {\n    ;(globalThis as any).__incrementalCache = new (\n      params as {\n        IncrementalCache: typeof import('../lib/incremental-cache').IncrementalCache\n      }\n    ).IncrementalCache({\n      CurCacheHandler: params.incrementalCacheHandler,\n      minimalMode: process.env.NODE_ENV !== 'development',\n      fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n      dev: process.env.NODE_ENV === 'development',\n      requestHeaders: params.request.headers as any,\n\n      getPrerenderManifest: () => {\n        return {\n          version: -1 as any, // letting us know this doesn't conform to spec\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          preview: getEdgePreviewProps(),\n        }\n      },\n    })\n  }\n\n  // if we're in an edge runtime sandbox, we should use the waitUntil\n  // that we receive from the enclosing NextServer\n  const outerWaitUntil =\n    params.request.waitUntil ?? getBuiltinRequestContext()?.waitUntil\n\n  const event = new NextFetchEvent({\n    request,\n    page: params.page,\n    context: outerWaitUntil ? { waitUntil: outerWaitUntil } : undefined,\n  })\n  let response\n  let cookiesFromResponse\n\n  response = await propagator(request, () => {\n    // we only care to make async storage available for middleware\n    const isMiddleware =\n      params.page === '/middleware' || params.page === '/src/middleware'\n\n    if (isMiddleware) {\n      // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n      // so we have to inject it via DefinePlugin.\n      // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n\n      const waitUntil = event.waitUntil.bind(event)\n      const closeController = new CloseController()\n\n      return getTracer().trace(\n        MiddlewareSpan.execute,\n        {\n          spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n          attributes: {\n            'http.target': request.nextUrl.pathname,\n            'http.method': request.method,\n          },\n        },\n        async () => {\n          try {\n            const onUpdateCookies = (cookies: Array<string>) => {\n              cookiesFromResponse = cookies\n            }\n            const previewProps = getEdgePreviewProps()\n            const page = '/' // Fake Work\n            const fallbackRouteParams = null\n\n            const implicitTags = await getImplicitTags(\n              page,\n              request.nextUrl,\n              fallbackRouteParams\n            )\n\n            const requestStore = createRequestStoreForAPI(\n              request,\n              request.nextUrl,\n              implicitTags,\n              onUpdateCookies,\n              previewProps\n            )\n\n            const workStore = createWorkStore({\n              page,\n              renderOpts: {\n                cacheLifeProfiles:\n                  params.request.nextConfig?.experimental?.cacheLife,\n                experimental: {\n                  isRoutePPREnabled: false,\n                  cacheComponents: false,\n                  authInterrupts:\n                    !!params.request.nextConfig?.experimental?.authInterrupts,\n                },\n                supportsDynamicResponse: true,\n                waitUntil,\n                onClose: closeController.onClose.bind(closeController),\n                onAfterTaskError: undefined,\n              },\n              isPrefetchRequest:\n                request.headers.get(NEXT_ROUTER_PREFETCH_HEADER) === '1',\n              buildId: buildId ?? '',\n              previouslyRevalidatedTags: [],\n            })\n\n            return await workAsyncStorage.run(workStore, () =>\n              workUnitAsyncStorage.run(\n                requestStore,\n                params.handler,\n                request,\n                event\n              )\n            )\n          } finally {\n            // middleware cannot stream, so we can consider the response closed\n            // as soon as the handler returns.\n            // we can delay running it until a bit later --\n            // if it's needed, we'll have a `waitUntil` lock anyway.\n            setTimeout(() => {\n              closeController.dispatchClose()\n            }, 0)\n          }\n        }\n      )\n    }\n    return params.handler(request, event)\n  })\n\n  // check if response is a Response object\n  if (response && !(response instanceof Response)) {\n    throw new TypeError('Expected an instance of Response to be returned')\n  }\n\n  if (response && cookiesFromResponse) {\n    response.headers.set('set-cookie', cookiesFromResponse)\n  }\n\n  /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */\n  const rewrite = response?.headers.get('x-middleware-rewrite')\n  if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n    const destination = new NextURL(rewrite, {\n      forceLocale: true,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n      if (destination.host === request.nextUrl.host) {\n        destination.buildId = buildId || destination.buildId\n        response.headers.set('x-middleware-rewrite', String(destination))\n      }\n    }\n\n    /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */\n    const { url: relativeDestination, isRelative } = parseRelativeURL(\n      destination.toString(),\n      requestURL.toString()\n    )\n\n    if (\n      !isEdgeRendering &&\n      isNextDataRequest &&\n      // if the rewrite is external and external rewrite\n      // resolving config is enabled don't add this header\n      // so the upstream app can set it instead\n      !(\n        process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE &&\n        relativeDestination.match(/http(s)?:\\/\\//)\n      )\n    ) {\n      response.headers.set('x-nextjs-rewrite', relativeDestination)\n    }\n\n    // If this is an RSC request, and the pathname or search has changed, and\n    // this isn't an external rewrite, we need to set the rewritten pathname and\n    // query headers.\n    if (isRSCRequest && isRelative) {\n      if (requestURL.pathname !== destination.pathname) {\n        response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname)\n      }\n      if (requestURL.search !== destination.search) {\n        response.headers.set(\n          NEXT_REWRITTEN_QUERY_HEADER,\n          // remove the leading ? from the search string\n          destination.search.slice(1)\n        )\n      }\n    }\n  }\n\n  /**\n   * Always forward the `_rsc` search parameter to the rewritten URL for RSC requests,\n   * unless it's already present. This is necessary to ensure that RSC hash validation\n   * works correctly after a rewrite. For internal rewrites, the server can validate the\n   * RSC hash using the original URL, so forwarding the `_rsc` parameter is less critical.\n   * However, for external rewrites (where the request is proxied to another Next.js server),\n   * the external server does not have access to the original URL or its search parameters.\n   * In these cases, forwarding the `_rsc` parameter is essential so that the external server\n   * can perform the correct RSC hash validation.\n   */\n  if (response && rewrite && isRSCRequest && rscHash) {\n    const rewriteURL = new URL(rewrite)\n    if (!rewriteURL.searchParams.has(NEXT_RSC_UNION_QUERY)) {\n      rewriteURL.searchParams.set(NEXT_RSC_UNION_QUERY, rscHash)\n      response.headers.set('x-middleware-rewrite', rewriteURL.toString())\n    }\n  }\n\n  /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */\n  const redirect = response?.headers.get('Location')\n  if (response && redirect && !isEdgeRendering) {\n    const redirectURL = new NextURL(redirect, {\n      forceLocale: false,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */\n    response = new Response(response.body, response)\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n      if (redirectURL.host === requestURL.host) {\n        redirectURL.buildId = buildId || redirectURL.buildId\n        response.headers.set('Location', redirectURL.toString())\n      }\n    }\n\n    /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */\n    if (isNextDataRequest) {\n      response.headers.delete('Location')\n      response.headers.set(\n        'x-nextjs-redirect',\n        getRelativeURL(redirectURL.toString(), requestURL.toString())\n      )\n    }\n  }\n\n  const finalResponse = response ? response : NextResponse.next()\n\n  // Flight headers are not overridable / removable so they are applied at the end.\n  const middlewareOverrideHeaders = finalResponse.headers.get(\n    'x-middleware-override-headers'\n  )\n  const overwrittenHeaders: string[] = []\n  if (middlewareOverrideHeaders) {\n    for (const [key, value] of flightHeaders) {\n      finalResponse.headers.set(`x-middleware-request-${key}`, value)\n      overwrittenHeaders.push(key)\n    }\n\n    if (overwrittenHeaders.length > 0) {\n      finalResponse.headers.set(\n        'x-middleware-override-headers',\n        middlewareOverrideHeaders + ',' + overwrittenHeaders.join(',')\n      )\n    }\n  }\n\n  return {\n    response: finalResponse,\n    waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n    fetchMetrics: request.fetchMetrics,\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport {\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n} from '../../../lib/constants'\n\nconst PATTERN = new RegExp(\n  `^(/.*)${RSC_SEGMENTS_DIR_SUFFIX}(/.*)${RSC_SEGMENT_SUFFIX}$`\n)\n\nexport class SegmentPrefixRSCPathnameNormalizer implements PathnameNormalizer {\n  public match(pathname: string): boolean {\n    return PATTERN.test(pathname)\n  }\n\n  public extract(pathname: string) {\n    const match = pathname.match(PATTERN)\n    if (!match) return null\n\n    return { originalPathname: match[1], segmentPath: match[2] }\n  }\n\n  public normalize(pathname: string): string {\n    const match = this.extract(pathname)\n    if (!match) return pathname\n\n    return match.originalPathname\n  }\n}\n","import type { __ApiPreviewProps } from './api-utils'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { Params } from './request/params'\nimport type { NextConfig, NextConfigComplete } from './config-shared'\nimport type {\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n  RequestMeta,\n} from './request-meta'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RenderOptsPartial as PagesRenderOptsPartial } from './render'\nimport type {\n  RenderOptsPartial as AppRenderOptsPartial,\n  ServerOnInstrumentationRequestError,\n} from './app-render/types'\nimport type {\n  ServerComponentsHmrCache,\n  ResponseCacheBase,\n} from './response-cache'\nimport type { UrlWithParsedQuery } from 'url'\nimport {\n  NormalizeError,\n  DecodeError,\n  normalizeRepeatedSlashes,\n  MissingStaticPage,\n} from '../shared/lib/utils'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport type {\n  ManifestRewriteRoute,\n  ManifestRoute,\n  PrerenderManifest,\n} from '../build'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type {\n  Server as HTTPServer,\n  IncomingMessage,\n  ServerResponse as HTTPServerResponse,\n} from 'http'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport type { TLSSocket } from 'tls'\nimport type { PathnameNormalizer } from './normalizers/request/pathname-normalizer'\nimport type { InstrumentationModule } from './instrumentation/types'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { formatHostname } from './lib/format-hostname'\nimport {\n  APP_PATHS_MANIFEST,\n  NEXT_BUILTIN_DOCUMENT,\n  PAGES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { setConfig } from '../shared/lib/runtime-config.external'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { getBotType, isBot } from '../shared/lib/router/utils/is-bot'\nimport RenderResult from './render-result'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport * as Log from '../build/output/log'\nimport { getPreviouslyRevalidatedTags, getServerUtils } from './server-utils'\nimport isError, { getProperError } from '../lib/is-error'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  removeRequestMeta,\n  setRequestMeta,\n} from './request-meta'\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { getHostname } from '../shared/lib/get-hostname'\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport {\n  RSC_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_URL,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n} from '../client/components/app-router-headers'\nimport type {\n  MatchOptions,\n  RouteMatcherManager,\n} from './route-matcher-managers/route-matcher-manager'\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer'\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager'\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider'\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider'\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider'\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider'\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader'\nimport {\n  getTracer,\n  isBubbledError,\n  SpanKind,\n  SpanStatusCode,\n} from './lib/trace/tracer'\nimport { BaseServerSpan } from './lib/trace/constants'\nimport { I18NProvider } from './lib/i18n-provider'\nimport { sendResponse } from './send-response'\nimport { normalizeNextQueryParam } from './web/utils'\nimport {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  MATCHED_PATH_HEADER,\n  NEXT_RESUME_HEADER,\n} from '../lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { matchNextDataPathname } from './lib/match-next-data-pathname'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc'\nimport { stripFlightHeaders } from './app-render/strip-flight-headers'\nimport {\n  isAppPageRouteModule,\n  isAppRouteRouteModule,\n} from './route-modules/checks'\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc'\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data'\nimport { getIsPossibleServerAction } from './lib/server-action-request-meta'\nimport { isInterceptionRouteAppPath } from '../shared/lib/router/utils/interception-routes'\nimport { toRoute } from './lib/to-route'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers'\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header'\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr'\nimport {\n  getBuiltinRequestContext,\n  type WaitUntil,\n} from './after/builtin-request-context'\nimport { NextRequestHint } from './web/adapter'\nimport type { RouteModule } from './route-modules/route-module'\nimport { type FallbackMode, parseFallbackField } from '../lib/fallback'\nimport { SegmentPrefixRSCPathnameNormalizer } from './normalizers/request/segment-prefix-rsc'\nimport { shouldServeStreamingMetadata } from './lib/streaming-metadata'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport { NoFallbackError } from '../shared/lib/no-fallback-error.external'\nimport { getCacheHandlers } from './use-cache/handlers'\nimport { fixMojibake } from './lib/fix-mojibake'\nimport { computeCacheBustingSearchParam } from '../shared/lib/router/utils/cache-busting-search-param'\nimport { setCacheBustingSearchParamWithHash } from '../client/components/router-reducer/set-cache-busting-search-param'\nimport type { CacheControl } from './lib/cache-control'\nimport type { PrerenderedRoute } from '../build/static-paths/types'\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: NextParsedUrlQuery\n}\n\nexport interface MiddlewareRoutingItem {\n  page: string\n  match: MiddlewareRouteMatch\n  matchers?: MiddlewareMatcher[]\n}\n\nexport type RouteHandler<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = (\n  req: ServerRequest,\n  res: ServerResponse,\n  parsedUrl: NextUrlWithParsedQuery\n) => PromiseLike<boolean> | boolean\n\n/**\n * The normalized route manifest is the same as the route manifest, but with\n * the rewrites normalized to the object shape that the router expects.\n */\nexport type NormalizedRouteManifest = {\n  readonly dynamicRoutes: ReadonlyArray<ManifestRoute>\n  readonly rewrites: {\n    readonly beforeFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly afterFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly fallback: ReadonlyArray<ManifestRewriteRoute>\n  }\n}\n\nexport interface Options {\n  /**\n   * Object containing the configuration next.config.js\n   */\n  conf: NextConfig\n  /**\n   * Set to false when the server was created by Next.js\n   */\n  customServer?: boolean\n  /**\n   * Tells if Next.js is running in dev mode\n   */\n  dev?: boolean\n  /**\n   * Enables the experimental testing mode.\n   */\n  experimentalTestProxy?: boolean\n\n  /**\n   * Whether or not the dev server is running in experimental HTTPS mode\n   */\n  experimentalHttpsServer?: boolean\n  /**\n   * Where the Next project is located\n   */\n  dir?: string\n  /**\n   * Tells if Next.js is at the platform-level\n   */\n  minimalMode?: boolean\n  /**\n   * Hide error messages containing server information\n   */\n  quiet?: boolean\n  /**\n   * The hostname the server is running behind\n   */\n  hostname?: string\n  /**\n   * The port the server is running behind\n   */\n  port?: number\n  /**\n   * The HTTP Server that Next.js is running behind\n   */\n  httpServer?: HTTPServer\n}\n\nexport type RenderOpts = PagesRenderOptsPartial & AppRenderOptsPartial\n\nexport type LoadedRenderOpts = RenderOpts &\n  LoadComponentsReturnType &\n  RequestLifecycleOpts\n\nexport type RequestLifecycleOpts = {\n  waitUntil: ((promise: Promise<any>) => void) | undefined\n  onClose: (callback: () => void) => void\n  onAfterTaskError: ((error: unknown) => void) | undefined\n}\n\ntype BaseRenderOpts = RenderOpts & {\n  poweredByHeader: boolean\n  generateEtags: boolean\n  previewProps: __ApiPreviewProps\n}\n\n/**\n * The public interface for rendering with the server programmatically. This\n * would typically only allow the base request or response to extend it, but\n * because this can be programmatically accessed, we assume that it could also\n * be the base Node.js request and response types.\n */\nexport interface BaseRequestHandler<\n  ServerRequest extends BaseNextRequest | IncomingMessage = BaseNextRequest,\n  ServerResponse extends\n    | BaseNextResponse\n    | HTTPServerResponse = BaseNextResponse,\n> {\n  (\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void> | void\n}\n\nexport type RequestContext<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = {\n  req: ServerRequest\n  res: ServerResponse\n  pathname: string\n  query: NextParsedUrlQuery\n  renderOpts: RenderOpts\n}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  body: RenderResult\n  cacheControl?: CacheControl\n}\n\nexport type NextEnabledDirectories = {\n  readonly pages: boolean\n  readonly app: boolean\n}\n\nexport default abstract class Server<\n  ServerOptions extends Options = Options,\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> {\n  public readonly hostname?: string\n  public readonly fetchHostname?: string\n  public readonly port?: number\n  protected readonly dir: string\n  protected readonly quiet: boolean\n  protected readonly nextConfig: NextConfigComplete\n  protected readonly distDir: string\n  protected readonly publicDir: string\n  protected readonly hasStaticDir: boolean\n  protected readonly pagesManifest?: PagesManifest\n  protected readonly appPathsManifest?: PagesManifest\n  protected readonly buildId: string\n  protected readonly minimalMode: boolean\n  protected readonly renderOpts: BaseRenderOpts\n  protected readonly serverOptions: Readonly<ServerOptions>\n  protected readonly appPathRoutes?: Record<string, string[]>\n  protected readonly clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  protected interceptionRoutePatterns: RegExp[]\n  protected nextFontManifest?: DeepReadonly<NextFontManifest>\n  protected instrumentation: InstrumentationModule | undefined\n  private readonly responseCache: ResponseCacheBase\n\n  protected abstract getPublicDir(): string\n  protected abstract getHasStaticDir(): boolean\n  protected abstract getPagesManifest(): PagesManifest | undefined\n  protected abstract getAppPathsManifest(): PagesManifest | undefined\n  protected abstract getBuildId(): string\n  protected abstract getinterceptionRoutePatterns(): RegExp[]\n\n  protected readonly enabledDirectories: NextEnabledDirectories\n  protected abstract getEnabledDirectories(dev: boolean): NextEnabledDirectories\n\n  protected readonly experimentalTestProxy?: boolean\n\n  protected abstract findPageComponents(params: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure?: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null>\n  protected abstract getPrerenderManifest(): DeepReadonly<PrerenderManifest>\n  protected abstract getNextFontManifest():\n    | DeepReadonly<NextFontManifest>\n    | undefined\n  protected abstract attachRequestMeta(\n    req: ServerRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ): void\n  protected abstract hasPage(pathname: string): Promise<boolean>\n\n  protected abstract sendRenderResult(\n    req: ServerRequest,\n    res: ServerResponse,\n    options: {\n      result: RenderResult\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void>\n\n  protected abstract runApi(\n    req: ServerRequest,\n    res: ServerResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean>\n\n  protected abstract renderHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult>\n\n  protected abstract getIncrementalCache(options: {\n    requestHeaders: Record<string, undefined | string | string[]>\n  }): Promise<import('./lib/incremental-cache').IncrementalCache>\n\n  protected abstract getResponseCache(options: {\n    dev: boolean\n  }): ResponseCacheBase\n\n  protected getServerComponentsHmrCache():\n    | ServerComponentsHmrCache\n    | undefined {\n    return this.nextConfig.experimental.serverComponentsHmrCache\n      ? (globalThis as any).__serverComponentsHmrCache\n      : undefined\n  }\n\n  protected abstract loadEnvConfig(params: {\n    dev: boolean\n    forceReload?: boolean\n  }): void\n\n  // TODO-APP: (wyattjoh): Make protected again. Used for turbopack in route-resolver.ts right now.\n  public readonly matchers: RouteMatcherManager\n  protected readonly i18nProvider?: I18NProvider\n  protected readonly localeNormalizer?: LocaleRouteNormalizer\n\n  protected readonly normalizers: {\n    readonly rsc: RSCPathnameNormalizer | undefined\n    readonly prefetchRSC: PrefetchRSCPathnameNormalizer | undefined\n    readonly segmentPrefetchRSC: SegmentPrefixRSCPathnameNormalizer | undefined\n    readonly data: NextDataPathnameNormalizer | undefined\n  }\n\n  private readonly isAppPPREnabled: boolean\n  private readonly isAppSegmentPrefetchEnabled: boolean\n\n  /**\n   * This is used to persist cache scopes across\n   * prefetch -> full route requests for cache components\n   * it's only fully used in dev\n   */\n\n  public constructor(options: ServerOptions) {\n    const {\n      dir = '.',\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      hostname,\n      port,\n      experimentalTestProxy,\n    } = options\n\n    this.experimentalTestProxy = experimentalTestProxy\n    this.serverOptions = options\n\n    this.dir = (require('path') as typeof import('path')).resolve(dir)\n\n    this.quiet = quiet\n    this.loadEnvConfig({ dev })\n\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf as NextConfigComplete\n    this.hostname = hostname\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = formatHostname(this.hostname)\n    }\n    this.port = port\n    this.distDir = (require('path') as typeof import('path')).join(\n      this.dir,\n      this.nextConfig.distDir\n    )\n    this.publicDir = this.getPublicDir()\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir()\n\n    this.i18nProvider = this.nextConfig.i18n?.locales\n      ? new I18NProvider(this.nextConfig.i18n)\n      : undefined\n\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider\n      ? new LocaleRouteNormalizer(this.i18nProvider)\n      : undefined\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n    } = this.nextConfig\n\n    this.buildId = this.getBuildId()\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] =\n      minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE\n\n    this.enabledDirectories = this.getEnabledDirectories(dev)\n\n    this.isAppPPREnabled =\n      this.enabledDirectories.app &&\n      checkIsAppPPREnabled(this.nextConfig.experimental.ppr)\n\n    this.isAppSegmentPrefetchEnabled =\n      this.enabledDirectories.app &&\n      this.nextConfig.experimental.clientSegmentCache === true\n\n    this.normalizers = {\n      // We should normalize the pathname from the RSC prefix only in minimal\n      // mode as otherwise that route is not exposed external to the server as\n      // we instead only rely on the headers.\n      rsc:\n        this.enabledDirectories.app && this.minimalMode\n          ? new RSCPathnameNormalizer()\n          : undefined,\n      prefetchRSC:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PrefetchRSCPathnameNormalizer()\n          : undefined,\n      segmentPrefetchRSC:\n        this.isAppSegmentPrefetchEnabled && this.minimalMode\n          ? new SegmentPrefixRSCPathnameNormalizer()\n          : undefined,\n      data: this.enabledDirectories.pages\n        ? new NextDataPathnameNormalizer(this.buildId)\n        : undefined,\n    }\n\n    this.nextFontManifest = this.getNextFontManifest()\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    this.renderOpts = {\n      dir: this.dir,\n      supportsDynamicResponse: true,\n      trailingSlash: this.nextConfig.trailingSlash,\n      deploymentId: this.nextConfig.deploymentId,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      serverComponents: this.enabledDirectories.app,\n      cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n      enableTainting: this.nextConfig.experimental.taint,\n      crossOrigin: this.nextConfig.crossOrigin\n        ? this.nextConfig.crossOrigin\n        : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig:\n        Object.keys(publicRuntimeConfig).length > 0\n          ? publicRuntimeConfig\n          : undefined,\n\n      isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n      // `htmlLimitedBots` is passed to server as serialized config in string format\n      htmlLimitedBots: this.nextConfig.htmlLimitedBots,\n      experimental: {\n        expireTime: this.nextConfig.expireTime,\n        staleTimes: this.nextConfig.experimental.staleTimes,\n        clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n        cacheComponents: this.nextConfig.experimental.cacheComponents ?? false,\n        clientSegmentCache:\n          this.nextConfig.experimental.clientSegmentCache === 'client-only'\n            ? 'client-only'\n            : Boolean(this.nextConfig.experimental.clientSegmentCache),\n        clientParamParsing:\n          this.nextConfig.experimental.clientParamParsing ?? false,\n        dynamicOnHover: this.nextConfig.experimental.dynamicOnHover ?? false,\n        inlineCss: this.nextConfig.experimental.inlineCss ?? false,\n        authInterrupts: !!this.nextConfig.experimental.authInterrupts,\n      },\n      onInstrumentationRequestError:\n        this.instrumentationOnRequestError.bind(this),\n      reactMaxHeadersLength: this.nextConfig.reactMaxHeadersLength,\n      devtoolSegmentExplorer:\n        this.nextConfig.experimental.devtoolSegmentExplorer,\n    }\n\n    // Initialize next/config with the environment configuration\n    setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.pagesManifest = this.getPagesManifest()\n    this.appPathsManifest = this.getAppPathsManifest()\n    this.appPathRoutes = this.getAppPathRoutes()\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers()\n\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload()\n\n    this.setAssetPrefix(assetPrefix)\n    this.responseCache = this.getResponseCache({ dev })\n  }\n\n  private handleRSCRequest: RouteHandler<ServerRequest, ServerResponse> = (\n    req,\n    _res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname) return false\n\n    if (this.normalizers.segmentPrefetchRSC?.match(parsedUrl.pathname)) {\n      const result = this.normalizers.segmentPrefetchRSC.extract(\n        parsedUrl.pathname\n      )\n      if (!result) return false\n\n      const { originalPathname, segmentPath } = result\n      parsedUrl.pathname = originalPathname\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n      req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] = segmentPath\n\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n      addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPath)\n    } else if (this.normalizers.prefetchRSC?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n    } else if (this.normalizers.rsc?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.rsc.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a RSC request.\n      req.headers[RSC_HEADER] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n    } else if (req.headers['x-now-route-matches']) {\n      // If we didn't match, return with the flight headers stripped. If in\n      // minimal mode we didn't match based on the path, this can't be a RSC\n      // request. This is because Vercel only sends this header during\n      // revalidation requests and we want the cache to instead depend on the\n      // request path for flight information.\n      stripFlightHeaders(req.headers)\n\n      return false\n    } else if (req.headers[RSC_HEADER] === '1') {\n      addRequestMeta(req, 'isRSCRequest', true)\n\n      if (req.headers[NEXT_ROUTER_PREFETCH_HEADER] === '1') {\n        addRequestMeta(req, 'isPrefetchRSCRequest', true)\n\n        const segmentPrefetchRSCRequest =\n          req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]\n        if (typeof segmentPrefetchRSCRequest === 'string') {\n          addRequestMeta(\n            req,\n            'segmentPrefetchRSCRequest',\n            segmentPrefetchRSCRequest\n          )\n        }\n      }\n    } else {\n      // Otherwise just return without doing anything.\n      return false\n    }\n\n    if (req.url) {\n      const parsed = parseUrl(req.url)\n      parsed.pathname = parsedUrl.pathname\n      req.url = formatUrl(parsed)\n    }\n\n    return false\n  }\n\n  private handleNextDataRequest: RouteHandler<ServerRequest, ServerResponse> =\n    async (req, res, parsedUrl) => {\n      const middleware = await this.getMiddleware()\n      const params = matchNextDataPathname(parsedUrl.pathname)\n\n      // ignore for non-next data URLs\n      if (!params || !params.path) {\n        return false\n      }\n\n      if (params.path[0] !== this.buildId) {\n        // Ignore if its a middleware request when we aren't on edge.\n        if (getRequestMeta(req, 'middlewareInvoke')) {\n          return false\n        }\n\n        // Make sure to 404 if the buildId isn't correct\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // remove buildId from URL\n      params.path.shift()\n\n      const lastParam = params.path[params.path.length - 1]\n\n      // show 404 if it doesn't end with .json\n      if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // re-create page's pathname\n      let pathname = `/${params.path.join('/')}`\n      pathname = getRouteFromAssetPath(pathname, '.json')\n\n      // ensure trailing slash is normalized per config\n      if (middleware) {\n        if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n          pathname += '/'\n        }\n        if (\n          !this.nextConfig.trailingSlash &&\n          pathname.length > 1 &&\n          pathname.endsWith('/')\n        ) {\n          pathname = pathname.substring(0, pathname.length - 1)\n        }\n      }\n\n      if (this.i18nProvider) {\n        // Remove the port from the hostname if present.\n        const hostname = req?.headers.host?.split(':', 1)[0].toLowerCase()\n\n        const domainLocale = this.i18nProvider.detectDomainLocale(hostname)\n        const defaultLocale =\n          domainLocale?.defaultLocale ?? this.i18nProvider.config.defaultLocale\n\n        const localePathResult = this.i18nProvider.analyze(pathname)\n\n        // If the locale is detected from the path, we need to remove it\n        // from the pathname.\n        if (localePathResult.detectedLocale) {\n          pathname = localePathResult.pathname\n        }\n\n        // Update the query with the detected locale and default locale.\n        addRequestMeta(req, 'locale', localePathResult.detectedLocale)\n        addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n        // If the locale is not detected from the path, we need to mark that\n        // it was not inferred from default.\n        if (!localePathResult.detectedLocale) {\n          removeRequestMeta(req, 'localeInferredFromDefault')\n        }\n\n        // If no locale was detected and we don't have middleware, we need\n        // to render a 404 page.\n        if (!localePathResult.detectedLocale && !middleware) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n      }\n\n      parsedUrl.pathname = pathname\n      addRequestMeta(req, 'isNextDataReq', true)\n\n      return false\n    }\n\n  protected handleNextImageRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallRenderRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallMiddlewareRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new ServerManifestLoader((name) => {\n      switch (name) {\n        case PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null\n        case APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null\n        default:\n          return null\n      }\n    })\n\n    // Configure the matchers and handlers.\n    const matchers: RouteMatcherManager = new DefaultRouteMatcherManager()\n\n    // Match pages under `pages/`.\n    matchers.push(\n      new PagesRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // Match api routes under `pages/api/`.\n    matchers.push(\n      new PagesAPIRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.enabledDirectories.app) {\n      // Match app pages under `app/`.\n      matchers.push(\n        new AppPageRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n      matchers.push(\n        new AppRouteRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n    }\n\n    return matchers\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    const [err, req, ctx] = args\n\n    if (this.instrumentation) {\n      try {\n        await this.instrumentation.onRequestError?.(\n          err,\n          {\n            path: req.url || '',\n            method: req.method || 'GET',\n            // Normalize middleware headers and other server request headers\n            headers:\n              req instanceof NextRequestHint\n                ? Object.fromEntries(req.headers.entries())\n                : req.headers,\n          },\n          ctx\n        )\n      } catch (handlerErr) {\n        // Log the soft error and continue, since errors can thrown from react stream handler\n        console.error('Error in instrumentation.onRequestError:', handlerErr)\n      }\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    Log.error(err)\n  }\n\n  public async handleRequest(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    await this.prepare()\n    const method = req.method.toUpperCase()\n\n    const tracer = getTracer()\n    return tracer.withPropagatedContext(req.headers, () => {\n      return tracer.trace(\n        BaseServerSpan.handleRequest,\n        {\n          spanName: `${method} ${req.url}`,\n          kind: SpanKind.SERVER,\n          attributes: {\n            'http.method': method,\n            'http.target': req.url,\n          },\n        },\n        async (span) =>\n          this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n            if (!span) return\n\n            const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n            span.setAttributes({\n              'http.status_code': res.statusCode,\n              'next.rsc': isRSCRequest,\n            })\n\n            if (res.statusCode && res.statusCode >= 500) {\n              // For 5xx status codes: SHOULD be set to 'Error' span status.\n              // x-ref: https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n              })\n              // For span status 'Error', SHOULD set 'error.type' attribute.\n              span.setAttribute('error.type', res.statusCode.toString())\n            }\n\n            const rootSpanAttributes = tracer.getRootSpanAttributes()\n            // We were unable to get attributes, probably OTEL is not enabled\n            if (!rootSpanAttributes) return\n\n            if (\n              rootSpanAttributes.get('next.span_type') !==\n              BaseServerSpan.handleRequest\n            ) {\n              console.warn(\n                `Unexpected root span type '${rootSpanAttributes.get(\n                  'next.span_type'\n                )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n              )\n              return\n            }\n\n            const route = rootSpanAttributes.get('next.route')\n            if (route) {\n              const name = isRSCRequest\n                ? `RSC ${method} ${route}`\n                : `${method} ${route}`\n\n              span.setAttributes({\n                'next.route': route,\n                'http.route': route,\n                'next.span_name': name,\n              })\n              span.updateName(name)\n            } else {\n              span.updateName(\n                isRSCRequest\n                  ? `RSC ${method} ${req.url}`\n                  : `${method} ${req.url}`\n              )\n            }\n          })\n      )\n    })\n  }\n\n  private async handleRequestImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    try {\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady()\n\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      patchSetHeaderWithCookieSupport(\n        req,\n        isNodeNextResponse(res) ? res.originalResponse : res\n      )\n\n      const urlParts = (req.url || '').split('?', 1)\n      const urlNoQuery = urlParts[0]\n\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = normalizeRepeatedSlashes(req.url!)\n        res.redirect(cleanUrl, 308).body(cleanUrl).send()\n        return\n      }\n\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== 'object') {\n        if (!req.url) {\n          throw new Error('Invariant: url can not be undefined')\n        }\n\n        parsedUrl = parseUrl(req.url!, true)\n      }\n\n      if (!parsedUrl.pathname) {\n        throw new Error(\"Invariant: pathname can't be empty\")\n      }\n\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === 'string') {\n        parsedUrl.query = Object.fromEntries(\n          new URLSearchParams(parsedUrl.query)\n        )\n      }\n\n      // Update the `x-forwarded-*` headers.\n      const { originalRequest = null } = isNodeNextRequest(req) ? req : {}\n      const xForwardedProto = originalRequest?.headers['x-forwarded-proto']\n      const isHttps = xForwardedProto\n        ? xForwardedProto === 'https'\n        : !!(originalRequest?.socket as TLSSocket)?.encrypted\n\n      req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname\n      req.headers['x-forwarded-port'] ??= this.port\n        ? this.port.toString()\n        : isHttps\n          ? '443'\n          : '80'\n      req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http'\n      req.headers['x-forwarded-for'] ??= originalRequest?.socket?.remoteAddress\n\n      // This should be done before any normalization of the pathname happens as\n      // it captures the initial URL.\n      this.attachRequestMeta(req, parsedUrl)\n\n      let finished = await this.handleRSCRequest(req, res, parsedUrl)\n      if (finished) return\n\n      const domainLocale = this.i18nProvider?.detectDomainLocale(\n        getHostname(parsedUrl, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || this.nextConfig.i18n?.defaultLocale\n      addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n      const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'))\n      const pathnameInfo = getNextPathnameInfo(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider,\n      })\n      url.pathname = pathnameInfo.pathname\n\n      if (pathnameInfo.basePath) {\n        req.url = removePathPrefix(req.url!, this.nextConfig.basePath)\n      }\n\n      const useMatchedPathHeader =\n        this.minimalMode && typeof req.headers[MATCHED_PATH_HEADER] === 'string'\n\n      // TODO: merge handling with invokePath\n      if (useMatchedPathHeader) {\n        try {\n          if (this.enabledDirectories.app) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, '/')\n            }\n            parsedUrl.pathname =\n              parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname\n          }\n\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let { pathname: matchedPath } = new URL(\n            fixMojibake(req.headers[MATCHED_PATH_HEADER] as string),\n            'http://localhost'\n          )\n\n          let { pathname: urlPathname } = new URL(req.url, 'http://localhost')\n\n          // For ISR the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (this.normalizers.data?.match(urlPathname)) {\n            addRequestMeta(req, 'isNextDataReq', true)\n          }\n          // In minimal mode, if PPR is enabled, then we should check to see if\n          // the request should be a resume request.\n          else if (\n            this.isAppPPREnabled &&\n            this.minimalMode &&\n            req.headers[NEXT_RESUME_HEADER] === '1' &&\n            req.method === 'POST'\n          ) {\n            // Decode the postponed state from the request body, it will come as\n            // an array of buffers, so collect them and then concat them to form\n            // the string.\n            const body: Array<Buffer> = []\n            for await (const chunk of req.body) {\n              body.push(chunk)\n            }\n            const postponed = Buffer.concat(body).toString('utf8')\n\n            addRequestMeta(req, 'postponed', postponed)\n          }\n\n          matchedPath = this.normalize(matchedPath)\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname)\n\n          matchedPath = denormalizePagePath(matchedPath)\n\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = this.i18nProvider?.analyze(matchedPath, {\n            defaultLocale,\n          })\n\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            addRequestMeta(req, 'locale', localeAnalysisResult.detectedLocale)\n\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              addRequestMeta(req, 'localeInferredFromDefault', true)\n            } else {\n              removeRequestMeta(req, 'localeInferredFromDefault')\n            }\n          }\n\n          let srcPathname = matchedPath\n          let pageIsDynamic = isDynamicRoute(srcPathname)\n          let paramsResult: {\n            params: ParsedUrlQuery | false\n            hasValidParams: boolean\n          } = {\n            params: false,\n            hasValidParams: false,\n          }\n\n          if (!pageIsDynamic) {\n            const match = await this.matchers.match(srcPathname, {\n              i18n: localeAnalysisResult,\n            })\n\n            // Update the source pathname to the matched page's pathname.\n            if (match) {\n              srcPathname = match.definition.pathname\n\n              // The page is dynamic if the params are defined. We know at this\n              // stage that the matched path is not a static page if the params\n              // were parsed from the matched path header.\n              if (typeof match.params !== 'undefined') {\n                pageIsDynamic = true\n                paramsResult.params = match.params\n                paramsResult.hasValidParams = true\n              }\n            }\n          }\n\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname\n          }\n\n          const utils = getServerUtils({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: this.getRoutesManifest()?.rewrites || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: [],\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes,\n          })\n\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n          }\n\n          // Store a copy of `parsedUrl.query` before calling handleRewrites.\n          // Since `handleRewrites` might add new queries to `parsedUrl.query`.\n          const originQueryParams = { ...parsedUrl.query }\n\n          const pathnameBeforeRewrite = parsedUrl.pathname\n          const rewriteParamKeys = Object.keys(\n            utils.handleRewrites(req, parsedUrl)\n          )\n\n          // Create a copy of the query params to avoid mutating the original\n          // object. This prevents any overlapping query params that have the\n          // same normalized key from causing issues.\n          const queryParams = { ...parsedUrl.query }\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname\n\n          if (didRewrite && parsedUrl.pathname) {\n            addRequestMeta(req, 'rewroteURL', parsedUrl.pathname)\n          }\n\n          const routeParamKeys = new Set<string>()\n          for (const [key, value] of Object.entries(parsedUrl.query)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            // Remove the prefixed key from the query params because we want\n            // to consume it for the dynamic route matcher.\n            delete parsedUrl.query[key]\n            routeParamKeys.add(normalizedKey)\n\n            if (typeof value === 'undefined') continue\n\n            queryParams[normalizedKey] = Array.isArray(value)\n              ? value.map((v) => decodeQueryPathParameter(v))\n              : decodeQueryPathParameter(value)\n          }\n\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params: ParsedUrlQuery | false = {}\n\n            // If we don't already have valid params, try to parse them from\n            // the query params.\n            if (!paramsResult.hasValidParams) {\n              paramsResult = utils.normalizeDynamicRouteParams(\n                queryParams,\n                false\n              )\n            }\n\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(normalizedUrlPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(normalizedUrlPath)\n\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams, false)\n                Object.assign(paramsResult.params, matcherParams)\n                paramsResult.hasValidParams = true\n              }\n            }\n\n            // if an action request is bypassing a prerender and we\n            // don't have the params in the URL since it was prerendered\n            // and matched during handle: 'filesystem' rather than dynamic route\n            // resolving we need to parse the params from the matched-path.\n            // Note: this is similar to above case but from match-path instead\n            // of from the request URL since a rewrite could cause that to not\n            // match the src pathname\n            if (\n              // we can have a collision with /index and a top-level /[slug]\n              matchedPath !== '/index' &&\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(matchedPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(matchedPath)\n\n              if (matcherParams) {\n                const curParamsResult = utils.normalizeDynamicRouteParams(\n                  matcherParams,\n                  false\n                )\n\n                if (curParamsResult.hasValidParams) {\n                  Object.assign(params, matcherParams)\n                  paramsResult = curParamsResult\n                }\n              }\n            }\n\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params\n            }\n\n            const routeMatchesHeader = req.headers['x-now-route-matches']\n            if (\n              typeof routeMatchesHeader === 'string' &&\n              routeMatchesHeader &&\n              isDynamicRoute(matchedPath) &&\n              !paramsResult.hasValidParams\n            ) {\n              const routeMatches =\n                utils.getParamsFromRouteMatches(routeMatchesHeader)\n\n              if (routeMatches) {\n                paramsResult = utils.normalizeDynamicRouteParams(\n                  routeMatches,\n                  true\n                )\n\n                if (paramsResult.hasValidParams) {\n                  params = paramsResult.params\n                }\n              }\n            }\n\n            // Try to parse the params from the query if we couldn't parse them\n            // from the route matches but ignore missing optional params.\n            if (!paramsResult.hasValidParams) {\n              paramsResult = utils.normalizeDynamicRouteParams(\n                queryParams,\n                true\n              )\n\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params\n              }\n            }\n\n            // If the pathname being requested is the same as the source\n            // pathname, and we don't have valid params, we want to use the\n            // default route matches.\n            if (\n              utils.defaultRouteMatches &&\n              normalizedUrlPath === srcPathname &&\n              !paramsResult.hasValidParams\n            ) {\n              params = utils.defaultRouteMatches\n\n              // If the route matches header is an empty string, we want to\n              // render a fallback shell. This is because we know this came from\n              // a prerender (it has the header) but it's values were filtered\n              // out (because the allowQuery was empty). If it was undefined\n              // then we know that the request is hitting the lambda directly.\n              if (routeMatchesHeader === '') {\n                addRequestMeta(req, 'renderFallbackShell', true)\n              }\n            }\n\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params)\n              req.url = utils.interpolateDynamicPath(req.url!, params)\n\n              // If the request is for a segment prefetch, we need to update the\n              // segment prefetch request path to include the interpolated\n              // params.\n              let segmentPrefetchRSCRequest = getRequestMeta(\n                req,\n                'segmentPrefetchRSCRequest'\n              )\n              if (\n                segmentPrefetchRSCRequest &&\n                isDynamicRoute(segmentPrefetchRSCRequest, false)\n              ) {\n                segmentPrefetchRSCRequest = utils.interpolateDynamicPath(\n                  segmentPrefetchRSCRequest,\n                  params\n                )\n\n                req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] =\n                  segmentPrefetchRSCRequest\n                addRequestMeta(\n                  req,\n                  'segmentPrefetchRSCRequest',\n                  segmentPrefetchRSCRequest\n                )\n              }\n            }\n          }\n\n          if (pageIsDynamic || didRewrite) {\n            utils.normalizeCdnUrl(req, [\n              ...rewriteParamKeys,\n              ...Object.keys(utils.defaultRouteRegex?.groups || {}),\n            ])\n          }\n          // Remove the route `params` keys from `parsedUrl.query` if they are\n          // not in the original query params.\n          // If it's used in both route `params` and query `searchParams`, it should be kept.\n          for (const key of routeParamKeys) {\n            if (!(key in originQueryParams)) {\n              delete parsedUrl.query[key]\n            }\n          }\n          parsedUrl.pathname = matchedPath\n          url.pathname = parsedUrl.pathname\n          finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n          if (finished) return\n        } catch (err) {\n          if (err instanceof DecodeError || err instanceof NormalizeError) {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n      }\n\n      addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n      if (pathnameInfo.locale) {\n        req.url = formatUrl(url)\n        addRequestMeta(req, 'didStripLocale', true)\n      }\n\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !getRequestMeta(req, 'locale')) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          addRequestMeta(req, 'locale', pathnameInfo.locale)\n        }\n        // If the default locale is available, add it to the query string and\n        // mark it as inferred rather than implicit.\n        else if (defaultLocale) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          addRequestMeta(req, 'localeInferredFromDefault', true)\n        }\n      }\n\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (\n        !(this.serverOptions as any).webServerConfig &&\n        !getRequestMeta(req, 'incrementalCache')\n      ) {\n        const incrementalCache = await this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n        })\n\n        incrementalCache.resetRequestCache()\n        addRequestMeta(req, 'incrementalCache', incrementalCache)\n        // This is needed for pages router to leverage unstable_cache\n        // TODO: re-work this handling to not use global and use a AsyncStore\n        ;(globalThis as any).__incrementalCache = incrementalCache\n      }\n\n      const cacheHandlers = getCacheHandlers()\n\n      if (cacheHandlers) {\n        await Promise.all(\n          [...cacheHandlers].map(async (cacheHandler) => {\n            if ('refreshTags' in cacheHandler) {\n              // Note: cacheHandler.refreshTags() is called lazily before the\n              // first cache entry is retrieved. It allows us to skip the\n              // refresh request if no caches are read at all.\n            } else {\n              const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(\n                req.headers,\n                this.getPrerenderManifest().preview.previewModeId\n              )\n\n              await cacheHandler.receiveExpiredTags(\n                ...previouslyRevalidatedTags\n              )\n            }\n          })\n        )\n      }\n\n      // set server components HMR cache to request meta so it can be passed\n      // down for edge functions\n      if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n        addRequestMeta(\n          req,\n          'serverComponentsHmrCache',\n          this.getServerComponentsHmrCache()\n        )\n      }\n\n      // when invokePath is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = getRequestMeta(req, 'invokePath')\n      const useInvokePath = !useMatchedPathHeader && invokePath\n\n      if (useInvokePath) {\n        const invokeStatus = getRequestMeta(req, 'invokeStatus')\n        if (invokeStatus) {\n          const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n          if (invokeQuery) {\n            Object.assign(parsedUrl.query, invokeQuery)\n          }\n\n          res.statusCode = invokeStatus\n          let err: Error | null = getRequestMeta(req, 'invokeError') || null\n\n          return this.renderError(err, req, res, '/_error', parsedUrl.query)\n        }\n\n        const parsedMatchedPath = new URL(invokePath || '/', 'http://n')\n        const invokePathnameInfo = getNextPathnameInfo(\n          parsedMatchedPath.pathname,\n          {\n            nextConfig: this.nextConfig,\n            parseData: false,\n          }\n        )\n\n        if (invokePathnameInfo.locale) {\n          addRequestMeta(req, 'locale', invokePathnameInfo.locale)\n        }\n\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname\n          addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname)\n        }\n        const normalizeResult = normalizeLocalePath(\n          removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''),\n          this.nextConfig.i18n?.locales\n        )\n\n        if (normalizeResult.detectedLocale) {\n          addRequestMeta(req, 'locale', normalizeResult.detectedLocale)\n        }\n        parsedUrl.pathname = normalizeResult.pathname\n\n        for (const key of Object.keys(parsedUrl.query)) {\n          delete parsedUrl.query[key]\n        }\n        const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n        if (invokeQuery) {\n          Object.assign(parsedUrl.query, invokeQuery)\n        }\n\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        await this.handleCatchallRenderRequest(req, res, parsedUrl)\n        return\n      }\n\n      if (getRequestMeta(req, 'middlewareInvoke')) {\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        finished = await this.handleCatchallMiddlewareRequest(\n          req,\n          res,\n          parsedUrl\n        )\n        if (finished) return\n\n        const err = new Error()\n        ;(err as any).result = {\n          response: new Response(null, {\n            headers: {\n              'x-middleware-next': '1',\n            },\n          }),\n        }\n        ;(err as any).bubble = true\n        throw err\n      }\n\n      // This wasn't a request via the matched path or the invoke path, so\n      // prepare for a legacy run by removing the base path.\n\n      // ensure we strip the basePath when not using an invoke header\n      if (!useMatchedPathHeader && pathnameInfo.basePath) {\n        parsedUrl.pathname = removePathPrefix(\n          parsedUrl.pathname,\n          pathnameInfo.basePath\n        )\n      }\n\n      res.statusCode = 200\n      return await this.run(req, res, parsedUrl)\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      if (\n        (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL') ||\n        err instanceof DecodeError ||\n        err instanceof NormalizeError\n      ) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n\n      if (\n        this.minimalMode ||\n        this.renderOpts.dev ||\n        (isBubbledError(err) && err.bubble)\n      ) {\n        throw err\n      }\n      this.logError(getProperError(err))\n      res.statusCode = 500\n      res.body('Internal Server Error').send()\n    }\n  }\n\n  /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */\n  private normalize = (pathname: string) => {\n    const normalizers: Array<PathnameNormalizer> = []\n\n    if (this.normalizers.data) {\n      normalizers.push(this.normalizers.data)\n    }\n\n    // We have to put the segment prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.segmentPrefetchRSC) {\n      normalizers.push(this.normalizers.segmentPrefetchRSC)\n    }\n\n    // We have to put the prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.prefetchRSC) {\n      normalizers.push(this.normalizers.prefetchRSC)\n    }\n\n    if (this.normalizers.rsc) {\n      normalizers.push(this.normalizers.rsc)\n    }\n\n    for (const normalizer of normalizers) {\n      if (!normalizer.match(pathname)) continue\n\n      return normalizer.normalize(pathname, true)\n    }\n\n    return pathname\n  }\n\n  private normalizeAndAttachMetadata: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = async (req, res, url) => {\n    let finished = await this.handleNextImageRequest(req, res, url)\n    if (finished) return true\n\n    if (this.enabledDirectories.pages) {\n      finished = await this.handleNextDataRequest(req, res, url)\n      if (finished) return true\n    }\n\n    return false\n  }\n\n  /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */\n  public getRequestHandlerWithMetadata(\n    meta: RequestMeta\n  ): BaseRequestHandler<ServerRequest, ServerResponse> {\n    const handler = this.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      setRequestMeta(req, meta)\n      return handler(req, res, parsedUrl)\n    }\n  }\n\n  public getRequestHandler(): BaseRequestHandler<\n    ServerRequest,\n    ServerResponse\n  > {\n    return this.handleRequest.bind(this)\n  }\n\n  protected abstract handleUpgrade(\n    req: ServerRequest,\n    socket: any,\n    head?: any\n  ): Promise<void>\n\n  public setAssetPrefix(prefix?: string): void {\n    this.nextConfig.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  protected prepared: boolean = false\n  protected preparedPromise: Promise<void> | null = null\n  /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */\n  public async prepare(): Promise<void> {\n    if (this.prepared) return\n\n    // Get instrumentation module\n    if (!this.instrumentation) {\n      this.instrumentation = await this.loadInstrumentationModule()\n    }\n    if (this.preparedPromise === null) {\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true\n        this.preparedPromise = null\n      })\n    }\n    return this.preparedPromise\n  }\n  protected async prepareImpl(): Promise<void> {}\n  protected async loadInstrumentationModule(): Promise<any> {}\n\n  public async close(): Promise<void> {}\n\n  protected getAppPathRoutes(): Record<string, string[]> {\n    const appPathRoutes: Record<string, string[]> = {}\n\n    Object.keys(this.appPathsManifest || {}).forEach((entry) => {\n      const normalizedPath = normalizeAppPath(entry)\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = []\n      }\n      appPathRoutes[normalizedPath].push(entry)\n    })\n    return appPathRoutes\n  }\n\n  protected async run(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.run, async () =>\n      this.runImpl(req, res, parsedUrl)\n    )\n  }\n\n  private async runImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.pipe, async () =>\n      this.pipeImpl(fn, partialContext)\n    )\n  }\n\n  private async pipeImpl(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    const ua = partialContext.req.headers['user-agent'] || ''\n\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        // `renderOpts.botType` is accumulated in `this.renderImpl()`\n        supportsDynamicResponse: !this.renderOpts.botType,\n        serveStreamingMetadata: shouldServeStreamingMetadata(\n          ua,\n          this.nextConfig.htmlLimitedBots\n        ),\n      },\n    }\n\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const originalStatus = res.statusCode\n    const { body } = payload\n    let { cacheControl } = payload\n    if (!res.sent) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n\n      // In dev, we should not cache pages for any reason.\n      if (dev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n        cacheControl = undefined\n      }\n\n      if (cacheControl && cacheControl.expire === undefined) {\n        cacheControl.expire = this.nextConfig.expireTime\n      }\n\n      await this.sendRenderResult(req, res, {\n        result: body,\n        generateEtags,\n        poweredByHeader,\n        cacheControl,\n      })\n      res.statusCode = originalStatus\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<string | null> {\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: false,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return null\n    }\n    return payload.body.toUnchunkedString()\n  }\n\n  public async render(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.render, async () =>\n      this.renderImpl(req, res, pathname, query, parsedUrl, internalRender)\n    )\n  }\n\n  protected getWaitUntil(): WaitUntil | undefined {\n    const builtinRequestContext = getBuiltinRequestContext()\n    if (builtinRequestContext) {\n      // the platform provided a request context.\n      // use the `waitUntil` from there, whether actually present or not --\n      // if not present, `after` will error.\n\n      // NOTE: if we're in an edge runtime sandbox, this context will be used to forward the outer waitUntil.\n      return builtinRequestContext.waitUntil\n    }\n\n    if (this.minimalMode) {\n      // we're built for a serverless environment, and `waitUntil` is not available,\n      // but using a noop would likely lead to incorrect behavior,\n      // because we have no way of keeping the invocation alive.\n      // return nothing, and `after` will error if used.\n      //\n      // NOTE: for edge functions, `NextWebServer` always runs in minimal mode.\n      //\n      // NOTE: if we're in an edge runtime sandbox, waitUntil will be passed in using \"@next/request-context\",\n      // so we won't get here.\n      return undefined\n    }\n\n    return this.getInternalWaitUntil()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil | undefined {\n    return undefined\n  }\n\n  private async renderImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.serverOptions.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const ua = req.headers['user-agent'] || ''\n    this.renderOpts.botType = getBotType(ua)\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !internalRender &&\n      !this.minimalMode &&\n      !getRequestMeta(req, 'isNextDataReq') &&\n      (req.url?.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && req.url!.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getStaticPaths({\n    pathname,\n  }: {\n    pathname: string\n    urlPathname: string\n    requestHeaders: import('./lib/incremental-cache').IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    prerenderedRoutes?: PrerenderedRoute[]\n    fallbackMode?: FallbackMode\n  }> {\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname]?.fallback\n\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode: parseFallbackField(fallbackField),\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    requestContext: RequestContext<ServerRequest, ServerResponse>,\n    findComponentsResult: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponseWithComponents,\n      async () =>\n        this.renderToResponseWithComponentsImpl(\n          requestContext,\n          findComponentsResult\n        )\n    )\n  }\n\n  protected pathCouldBeIntercepted(resolvedPathname: string): boolean {\n    return (\n      isInterceptionRouteAppPath(resolvedPathname) ||\n      this.interceptionRoutePatterns.some((regexp) => {\n        return regexp.test(resolvedPathname)\n      })\n    )\n  }\n\n  protected setVaryHeader(\n    req: ServerRequest,\n    res: ServerResponse,\n    isAppPath: boolean,\n    resolvedPathname: string\n  ): void {\n    const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    let addedNextUrlToVary = false\n\n    if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n      // Interception route responses can vary based on the `Next-URL` header.\n      // We use the Vary header to signal this behavior to the client to properly cache the response.\n      res.appendHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`)\n      addedNextUrlToVary = true\n    } else if (isAppPath || isRSCRequest) {\n      // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n      // We also set this header for pages to avoid caching issues when navigating between pages and app.\n      res.appendHeader('vary', baseVaryHeader)\n    }\n\n    if (!addedNextUrlToVary) {\n      // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n      // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n      delete req.headers[NEXT_URL]\n    }\n  }\n\n  private async renderToResponseWithComponentsImpl(\n    {\n      req,\n      res,\n      pathname,\n      renderOpts: opts,\n    }: RequestContext<ServerRequest, ServerResponse>,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    const isErrorPathname = pathname === '/_error'\n    const is404Page =\n      pathname === '/404' || (isErrorPathname && res.statusCode === 404)\n    const is500Page =\n      pathname === '/500' || (isErrorPathname && res.statusCode === 500)\n    const isAppPath = components.isAppPath === true\n\n    const hasServerProps = !!components.getServerSideProps\n    const isPossibleServerAction = getIsPossibleServerAction(req)\n    let isSSG = !!components.getStaticProps\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    // Not all CDNs respect the Vary header when caching. We must assume that\n    // only the URL is used to vary the responses. The Next client computes a\n    // hash of the header values and sends it as a search param. Before\n    // responding to a request, we must verify that the hash matches the\n    // expected value. Neglecting to do this properly can lead to cache\n    // poisoning attacks on certain CDNs.\n    if (\n      !this.minimalMode &&\n      this.nextConfig.experimental.validateRSCRequestHeaders &&\n      isRSCRequest\n    ) {\n      const headers = req.headers\n\n      const prefetchHeaderValue = headers[NEXT_ROUTER_PREFETCH_HEADER]\n      const routerPrefetch =\n        prefetchHeaderValue !== undefined\n          ? // We only recognize '1' and '2'. Strip all other values here.\n            prefetchHeaderValue === '1' || prefetchHeaderValue === '2'\n            ? prefetchHeaderValue\n            : undefined\n          : // For runtime prefetches, we always perform a dynamic request,\n            // so we don't expect the header to be stripped by an intermediate layer.\n            // This should only happen for static prefetches, so we only handle those here.\n            getRequestMeta(req, 'isPrefetchRSCRequest')\n            ? '1'\n            : undefined\n\n      const segmentPrefetchRSCRequest =\n        headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] ||\n        getRequestMeta(req, 'segmentPrefetchRSCRequest')\n\n      const expectedHash = computeCacheBustingSearchParam(\n        routerPrefetch,\n        segmentPrefetchRSCRequest,\n        headers[NEXT_ROUTER_STATE_TREE_HEADER],\n        headers[NEXT_URL]\n      )\n      const actualHash =\n        getRequestMeta(req, 'cacheBustingSearchParam') ??\n        new URL(req.url || '', 'http://localhost').searchParams.get(\n          NEXT_RSC_UNION_QUERY\n        )\n\n      if (expectedHash !== actualHash) {\n        // The hash sent by the client does not match the expected value.\n        // Redirect to the URL with the correct cache-busting search param.\n        // This prevents cache poisoning attacks on CDNs that don't respect Vary headers.\n        // Note: When no headers are present, expectedHash is empty string and client\n        // must send `_rsc` param, otherwise actualHash is null and hash check fails.\n        const url = new URL(req.url || '', 'http://localhost')\n        setCacheBustingSearchParamWithHash(url, expectedHash)\n        res.statusCode = 307\n        res.setHeader('location', `${url.pathname}${url.search}`)\n        res.body('').send()\n        return null\n      }\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname\n\n    this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname)\n\n    let staticPaths: string[] | undefined\n    let hasFallback = false\n\n    const prerenderManifest = this.getPrerenderManifest()\n\n    if (\n      hasFallback ||\n      staticPaths?.includes(resolvedUrlPathname) ||\n      // this signals revalidation in deploy environments\n      // TODO: make this more generic\n      req.headers['x-now-route-matches']\n    ) {\n      isSSG = true\n    } else if (!this.renderOpts.dev) {\n      isSSG ||= !!prerenderManifest.routes[toRoute(pathname)]\n    }\n\n    // Toggle whether or not this is a Data request\n    const isNextDataRequest =\n      !!(\n        getRequestMeta(req, 'isNextDataReq') ||\n        (req.headers['x-nextjs-data'] &&\n          (this.serverOptions as any).webServerConfig)\n      ) &&\n      (isSSG || hasServerProps)\n\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (\n      !isSSG &&\n      req.headers['x-middleware-prefetch'] &&\n      !(is404Page || pathname === '/_error')\n    ) {\n      res.setHeader(MATCHED_PATH_HEADER, pathname)\n      res.setHeader('x-middleware-skip', '1')\n      res.setHeader(\n        'cache-control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n      res.body('{}').send()\n      return null\n    }\n\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (\n      isSSG &&\n      this.minimalMode &&\n      req.headers[MATCHED_PATH_HEADER] &&\n      req.url.startsWith('/_next/data')\n    ) {\n      req.url = this.stripNextDataPath(req.url)\n    }\n\n    const locale = getRequestMeta(req, 'locale')\n\n    if (\n      !!req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n    }\n\n    let routeModule: RouteModule | undefined\n    if (components.routeModule) {\n      routeModule = components.routeModule\n    }\n\n    /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */\n    const couldSupportPPR: boolean =\n      this.isAppPPREnabled &&\n      typeof routeModule !== 'undefined' &&\n      isAppPageRouteModule(routeModule)\n\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =\n      process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n      typeof query.__nextppronly !== 'undefined' &&\n      couldSupportPPR\n\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled: boolean =\n      couldSupportPPR &&\n      ((\n        prerenderManifest.routes[pathname] ??\n        prerenderManifest.dynamicRoutes[pathname]\n      )?.renderingMode === 'PARTIALLY_STATIC' ||\n        // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        (hasDebugStaticShellQuery &&\n          (this.renderOpts.dev === true ||\n            this.experimentalTestProxy === true)))\n\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled\n      ? getRequestMeta(req, 'postponed')\n      : undefined\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isNextDataRequest && !isRSCRequest) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10)\n    }\n\n    if (\n      // Server actions can use non-GET/HEAD methods.\n      !isPossibleServerAction &&\n      // Resume can use non-GET/HEAD methods.\n      !minimalPostponed &&\n      !is404Page &&\n      !is500Page &&\n      pathname !== '/_error' &&\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      (typeof components.Component === 'string' || isSSG)\n    ) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      res.body('Method Not Allowed').send()\n      return null\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        body: RenderResult.fromStatic(\n          components.Component,\n          HTML_CONTENT_TYPE_HEADER\n        ),\n      }\n    }\n\n    // Ensure that if the `amp` query parameter is falsy that we remove it from\n    // the query object. This ensures it won't be found by the `in` operator.\n    if ('amp' in query && !query.amp) delete query.amp\n\n    if (opts.supportsDynamicResponse === true) {\n      const ua = req.headers['user-agent'] || ''\n      const isBotRequest = isBot(ua)\n      const isSupportedDocument =\n        typeof components.Document?.getInitialProps !== 'function' ||\n        // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n        NEXT_BUILTIN_DOCUMENT in components.Document\n\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicResponse =\n        !isSSG && !isBotRequest && !query.amp && isSupportedDocument\n    }\n\n    // In development, we always want to generate dynamic HTML.\n    if (!isNextDataRequest && isAppPath && opts.dev) {\n      opts.supportsDynamicResponse = true\n    }\n\n    if (isSSG && this.minimalMode && req.headers[MATCHED_PATH_HEADER]) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname\n    }\n\n    urlPathname = removeTrailingSlash(urlPathname)\n    resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname)\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname)\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isNextDataRequest) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname)\n      urlPathname = this.stripNextDataPath(urlPathname)\n    }\n\n    // use existing incrementalCache instance if available\n    const incrementalCache: import('./lib/incremental-cache').IncrementalCache =\n      await this.getIncrementalCache({\n        requestHeaders: Object.assign({}, req.headers),\n      })\n\n    // TODO: investigate, this is not safe across multiple concurrent requests\n    incrementalCache.resetRequestCache()\n\n    if (\n      routeModule?.isDev &&\n      isDynamicRoute(pathname) &&\n      (components.getStaticPaths || isAppPath)\n    ) {\n      const pathsResults = await this.getStaticPaths({\n        pathname,\n        urlPathname,\n        requestHeaders: req.headers,\n        page: components.page,\n        isAppPath,\n      })\n      if (isAppPath && this.nextConfig.experimental.cacheComponents) {\n        if (pathsResults.prerenderedRoutes?.length) {\n          let smallestFallbackRouteParams = null\n          for (const route of pathsResults.prerenderedRoutes) {\n            const fallbackRouteParams = route.fallbackRouteParams\n            if (!fallbackRouteParams || fallbackRouteParams.length === 0) {\n              // There are no fallback route params so we don't need to continue\n              smallestFallbackRouteParams = null\n              break\n            }\n            if (\n              smallestFallbackRouteParams === null ||\n              fallbackRouteParams.length < smallestFallbackRouteParams.length\n            ) {\n              smallestFallbackRouteParams = fallbackRouteParams\n            }\n          }\n          if (smallestFallbackRouteParams) {\n            const devValidatingFallbackParams = new Map<string, string>(\n              smallestFallbackRouteParams.map((v) => [v, ''])\n            )\n            addRequestMeta(\n              req,\n              'devValidatingFallbackParams',\n              devValidatingFallbackParams\n            )\n          }\n        }\n      }\n    }\n\n    // An OPTIONS request to a page handler is invalid.\n    if (\n      req.method === 'OPTIONS' &&\n      !is404Page &&\n      (!routeModule || !isAppRouteRouteModule(routeModule))\n    ) {\n      await sendResponse(req, res, new Response(null, { status: 400 }))\n      return null\n    }\n\n    const request = isNodeNextRequest(req) ? req.originalRequest : req\n    const response = isNodeNextResponse(res) ? res.originalResponse : res\n\n    const parsedInitUrl = parseUrl(getRequestMeta(req, 'initURL') || req.url)\n    let initPathname = parsedInitUrl.pathname || '/'\n\n    for (const normalizer of [\n      this.normalizers.segmentPrefetchRSC,\n      this.normalizers.prefetchRSC,\n      this.normalizers.rsc,\n    ]) {\n      if (normalizer?.match(initPathname)) {\n        initPathname = normalizer.normalize(initPathname)\n      }\n    }\n\n    // On minimal mode, the request url of dynamic route can be a\n    // literal dynamic route ('/[slug]') instead of actual URL, so overwriting to initPathname\n    // will transform back the resolved url to the dynamic route pathname.\n    if (!(this.minimalMode && isErrorPathname)) {\n      request.url = `${initPathname}${parsedInitUrl.search || ''}`\n    }\n\n    // propagate the request context for dev\n    setRequestMeta(request, getRequestMeta(req))\n    addRequestMeta(request, 'distDir', this.distDir)\n    addRequestMeta(request, 'query', query)\n    addRequestMeta(request, 'params', opts.params)\n    addRequestMeta(request, 'ampValidator', this.renderOpts.ampValidator)\n    addRequestMeta(request, 'minimalMode', this.minimalMode)\n\n    if (opts.err) {\n      addRequestMeta(request, 'invokeError', opts.err)\n    }\n\n    const handler: (\n      req: ServerRequest | IncomingMessage,\n      res: ServerResponse | HTTPServerResponse,\n      ctx: {\n        waitUntil: ReturnType<Server['getWaitUntil']>\n      }\n    ) => Promise<void> = components.ComponentMod.handler\n\n    const maybeDevRequest =\n      // we need to capture fetch metrics when they are set\n      // and can't wait for handler to resolve as the fetch\n      // metrics are logged on response close which happens\n      // before handler resolves\n      process.env.NODE_ENV === 'development'\n        ? new Proxy(request, {\n            get(target: any, prop) {\n              if (typeof target[prop] === 'function') {\n                return target[prop].bind(target)\n              }\n              return target[prop]\n            },\n            set(target: any, prop, value) {\n              if (prop === 'fetchMetrics') {\n                ;(req as any).fetchMetrics = value\n              }\n              target[prop] = value\n              return true\n            },\n          })\n        : request\n\n    await handler(maybeDevRequest, response, {\n      waitUntil: this.getWaitUntil(),\n    })\n\n    // response is handled fully in handler\n    return null\n  }\n\n  private stripNextDataPath(path: string, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(\n        path.indexOf(this.buildId) + this.buildId.length\n      )\n\n      path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n    }\n\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path)\n    }\n    return path\n  }\n\n  // map the route to the actual bundle name\n  protected getOriginalAppPaths(route: string) {\n    if (this.enabledDirectories.app) {\n      const originalAppPath = this.appPathRoutes?.[route]\n\n      if (!originalAppPath) {\n        return null\n      }\n\n      return originalAppPath\n    }\n    return null\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const { query, pathname } = ctx\n\n    const appPaths = this.getOriginalAppPaths(pathname)\n    const isAppPath = Array.isArray(appPaths)\n\n    let page = pathname\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1]\n    }\n\n    const result = await this.findPageComponents({\n      locale: getRequestMeta(ctx.req, 'locale'),\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!this.nextConfig.experimental.sri?.algorithm,\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false,\n    })\n    if (result) {\n      getTracer().setRootSpanAttribute('next.route', pathname)\n      try {\n        return await this.renderToResponseWithComponents(ctx, result)\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError\n\n        if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n          throw err\n        }\n      }\n    }\n    return false\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponse,\n      {\n        spanName: `rendering page`,\n        attributes: {\n          'next.route': ctx.pathname,\n        },\n      },\n      async () => {\n        return this.renderToResponseImpl(ctx)\n      }\n    )\n  }\n\n  protected abstract getMiddleware(): Promise<MiddlewareRoutingItem | undefined>\n  protected abstract getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null>\n  protected abstract getRoutesManifest(): NormalizedRouteManifest | undefined\n\n  private async renderToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    const { req, res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback =\n      getRequestMeta(ctx.req, 'bubbleNoFallback') ?? false\n\n    if (\n      !this.minimalMode &&\n      this.nextConfig.experimental.validateRSCRequestHeaders\n    ) {\n      addRequestMeta(\n        ctx.req,\n        'cacheBustingSearchParam',\n        query[NEXT_RSC_UNION_QUERY]\n      )\n    }\n    delete query[NEXT_RSC_UNION_QUERY]\n\n    const options: MatchOptions = {\n      i18n: this.i18nProvider?.fromRequest(req, pathname),\n    }\n\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput')\n        if (\n          !this.minimalMode &&\n          typeof invokeOutput === 'string' &&\n          isDynamicRoute(invokeOutput || '') &&\n          invokeOutput !== match.definition.pathname\n        ) {\n          continue\n        }\n\n        const result = await this.renderPageComponent(\n          {\n            ...ctx,\n            pathname: match.definition.pathname,\n            renderOpts: {\n              ...ctx.renderOpts,\n              params: match.params,\n            },\n          },\n          bubbleNoFallback\n        )\n        if (result !== false) return result\n      }\n\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback)\n        if (result !== false) return result\n      }\n    } catch (error) {\n      const err = getProperError(error)\n\n      if (error instanceof MissingStaticPage) {\n        console.error(\n          'Invariant: failed to load static page',\n          JSON.stringify(\n            {\n              page,\n              url: ctx.req.url,\n              matchedPath: ctx.req.headers[MATCHED_PATH_HEADER],\n              initUrl: getRequestMeta(ctx.req, 'initURL'),\n              didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n              rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL'),\n            },\n            null,\n            2\n          )\n        )\n        throw err\n      }\n\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError || err instanceof NormalizeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage('/500')) {\n        addRequestMeta(ctx.req, 'customErrorRender', true)\n        await this.renderErrorToResponse(ctx, err)\n        removeRequestMeta(ctx.req, 'customErrorRender')\n      }\n\n      const isWrappedError = err instanceof WrappedBuildError\n\n      if (!isWrappedError) {\n        if (this.minimalMode || this.renderOpts.dev) {\n          if (isError(err)) err.page = page\n          throw err\n        }\n        this.logError(getProperError(err))\n      }\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? (err as WrappedBuildError).innerError : err\n      )\n      return response\n    }\n\n    const middleware = await this.getMiddleware()\n    if (\n      middleware &&\n      !!ctx.req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)\n    ) {\n      const locale = getRequestMeta(req, 'locale')\n\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n      res.statusCode = 200\n      res.setHeader('Content-Type', JSON_CONTENT_TYPE_HEADER)\n      res.body('{}')\n      res.send()\n      return null\n    }\n\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return getTracer().trace(BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query)\n    })\n  }\n\n  private async renderToHTMLImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders)\n    })\n  }\n\n  private async renderErrorImpl(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    Log.warn(\n      `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err)\n    })\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n      return {\n        body: RenderResult.EMPTY,\n      }\n    }\n    const { res, query } = ctx\n\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      if (is404) {\n        if (this.enabledDirectories.app) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n\n        if (!result && (await this.hasPage('/404'))) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: '/404',\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (\n        !getRequestMeta(ctx.req, 'customErrorRender') &&\n        !result &&\n        STATIC_STATUS_PAGES.includes(statusPage)\n      ) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== '/500' || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n        }\n      }\n\n      if (!result) {\n        result = await this.findPageComponents({\n          locale: getRequestMeta(ctx.req, 'locale'),\n          page: '/_error',\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true,\n          url: ctx.req.url,\n        })\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            // wait for dev-server to restart before refreshing\n            body: RenderResult.fromStatic(\n              `\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n          }\n        }\n\n        throw new WrappedBuildError(\n          new Error('missing required error components')\n        )\n      }\n\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        addRequestMeta(ctx.req, 'match', {\n          definition: result.components.routeModule.definition,\n          params: undefined,\n        })\n      } else {\n        removeRequestMeta(ctx.req, 'match')\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (error) {\n      const renderToHtmlError = getProperError(error)\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents(\n        ctx.req.url\n      )\n\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        addRequestMeta(ctx.req, 'match', {\n          definition: fallbackComponents.routeModule!.definition,\n          params: undefined,\n        })\n\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        body: RenderResult.fromStatic('Internal Server Error', 'text/plain'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async render404(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: Pick<NextUrlWithParsedQuery, 'pathname' | 'query'>,\n    setHeaders = true\n  ): Promise<void> {\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url!, true)\n\n    // Ensure the locales are provided on the request meta.\n    if (this.nextConfig.i18n) {\n      if (!getRequestMeta(req, 'locale')) {\n        addRequestMeta(req, 'locale', this.nextConfig.i18n.defaultLocale)\n      }\n      addRequestMeta(req, 'defaultLocale', this.nextConfig.i18n.defaultLocale)\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n}\n","import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const header of FLIGHT_HEADERS) {\n    delete headers[header]\n  }\n}\n","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n","import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n","// x-matched-path header can be decoded incorrectly\n// and should only be utf8 characters so this fixes\n// incorrectly encoded values\nexport function fixMojibake(input: string): string {\n  // Convert each character's char code to a byte\n  const bytes = new Uint8Array(input.length)\n  for (let i = 0; i < input.length; i++) {\n    bytes[i] = input.charCodeAt(i)\n  }\n\n  // Decode the bytes as proper UTF-8\n  const decoder = new TextDecoder('utf-8')\n  return decoder.decode(bytes)\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","import type { FlightRouterState } from './types'\nimport { flightRouterStateSchema } from './types'\nimport { assert } from 'next/dist/compiled/superstruct'\n\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[]\n): FlightRouterState\nexport function parseAndValidateFlightRouterState(\n  stateHeader: undefined\n): undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined {\n  if (typeof stateHeader === 'undefined') {\n    return undefined\n  }\n  if (Array.isArray(stateHeader)) {\n    throw new Error(\n      'Multiple router state headers were sent. This is not allowed.'\n    )\n  }\n\n  // We limit the size of the router state header to ~40kb. This is to prevent\n  // a malicious user from sending a very large header and slowing down the\n  // resolving of the router state.\n  // This is around 2,000 nested or parallel route segment states:\n  // '{\"children\":[\"\",{}]}'.length === 20.\n  if (stateHeader.length > 20 * 2000) {\n    throw new Error('The router state header was too large.')\n  }\n\n  try {\n    const state = JSON.parse(decodeURIComponent(stateHeader))\n    assert(state, flightRouterStateSchema)\n    return state\n  } catch {\n    throw new Error('The router state header was sent but could not be parsed.')\n  }\n}\n","import type { UrlWithParsedQuery } from 'url'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed: URL | undefined = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function parseReqUrl(url: string): UrlWithParsedQuery | undefined {\n  const parsedUrl: URL | undefined = parseUrl(url)\n\n  if (!parsedUrl) {\n    return\n  }\n\n  const query: Record<string, string | string[]> = {}\n\n  for (const key of parsedUrl.searchParams.keys()) {\n    const values = parsedUrl.searchParams.getAll(key)\n    query[key] = values.length > 1 ? values : values[0]\n  }\n\n  const legacyUrl: UrlWithParsedQuery = {\n    query,\n    hash: parsedUrl.hash,\n    search: parsedUrl.search,\n    path: parsedUrl.pathname,\n    pathname: parsedUrl.pathname,\n    href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n    host: '',\n    hostname: '',\n    auth: '',\n    protocol: '',\n    slashes: null,\n    port: '',\n  }\n  return legacyUrl\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n","import {\n  getBotType,\n  HTML_LIMITED_BOT_UA_RE_STRING,\n} from '../../shared/lib/router/utils/is-bot'\nimport type { BaseNextRequest } from '../base-http'\n\nexport function shouldServeStreamingMetadata(\n  userAgent: string,\n  htmlLimitedBots: string | undefined\n): boolean {\n  const blockingMetadataUARegex = new RegExp(\n    htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING,\n    'i'\n  )\n  // Only block metadata for HTML-limited bots\n  if (userAgent && blockingMetadataUARegex.test(userAgent)) {\n    return false\n  }\n  return true\n}\n\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req: {\n  headers: BaseNextRequest['headers']\n}): boolean {\n  const ua = req.headers['user-agent'] || ''\n  const botType = getBotType(ua)\n\n  return botType === 'html'\n}\n","import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(page: string): boolean {\n  return BLOCKED_PAGES.includes(page)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\ntype AnyFunc<T> = (this: T, ...args: any) => any\nexport function debounce<T, F extends AnyFunc<T>>(\n  fn: F,\n  ms: number,\n  maxWait = Infinity\n) {\n  let timeoutId: undefined | NodeJS.Timeout\n\n  // The time the debouncing function was first called during this debounce queue.\n  let startTime = 0\n  // The time the debouncing function was last called.\n  let lastCall = 0\n\n  // The arguments and this context of the last call to the debouncing function.\n  let args: Parameters<F>, context: T\n\n  // A helper used to that either invokes the debounced function, or\n  // reschedules the timer if a more recent call was made.\n  function run() {\n    const now = Date.now()\n    const diff = lastCall + ms - now\n\n    // If the diff is non-positive, then we've waited at least `ms`\n    // milliseconds since the last call. Or if we've waited for longer than the\n    // max wait time, we must call the debounced function.\n    if (diff <= 0 || startTime + maxWait >= now) {\n      // It's important to clear the timeout id before invoking the debounced\n      // function, in case the function calls the debouncing function again.\n      timeoutId = undefined\n      fn.apply(context, args)\n    } else {\n      // Else, a new call was made after the original timer was scheduled. We\n      // didn't clear the timeout (doing so is very slow), so now we need to\n      // reschedule the timer for the time difference.\n      timeoutId = setTimeout(run, diff)\n    }\n  }\n\n  return function (this: T, ...passedArgs: Parameters<F>) {\n    // The arguments and this context of the most recent call are saved so the\n    // debounced function can be invoked with them later.\n    args = passedArgs\n    context = this\n\n    // Instead of constantly clearing and scheduling a timer, we record the\n    // time of the last call. If a second call comes in before the timer fires,\n    // then we'll reschedule in the run function. Doing this is considerably\n    // faster.\n    lastCall = Date.now()\n\n    // Only schedule a new timer if we're not currently waiting.\n    if (timeoutId === undefined) {\n      startTime = lastCall\n      timeoutId = setTimeout(run, ms)\n    }\n  }\n}\n","/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isPossibleServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isPossibleServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isPossibleServerAction,\n  }\n}\n\nexport function getIsPossibleServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isPossibleServerAction\n}\n","import type { AppRouteRouteModule } from './app-route/module'\nimport type { AppPageRouteModule } from './app-page/module'\nimport type { PagesRouteModule } from './pages/module'\nimport type { PagesAPIRouteModule } from './pages-api/module'\n\nimport type { RouteModule } from './route-module'\n\nimport { RouteKind } from '../route-kind'\n\nexport function isAppRouteRouteModule(\n  routeModule: RouteModule\n): routeModule is AppRouteRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_ROUTE\n}\n\nexport function isAppPageRouteModule(\n  routeModule: RouteModule\n): routeModule is AppPageRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_PAGE\n}\n\nexport function isPagesRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES\n}\n\nexport function isPagesAPIRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesAPIRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES_API\n}\n","import path from 'path'\nimport {\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  APP_PATHS_MANIFEST,\n} from '../shared/lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { PageNotFoundError, MissingStaticPage } from '../shared/lib/utils'\nimport { LRUCache } from '../server/lib/lru-cache'\nimport { loadManifest } from './load-manifest.external'\nimport { promises } from 'fs'\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst pagePathCache = !isDev ? new LRUCache<string | null>(1000) : null\n\nexport function getMaybePagePath(\n  page: string,\n  distDir: string,\n  locales: readonly string[] | undefined,\n  isAppPath: boolean\n): string | null {\n  const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`\n\n  let pagePath = pagePathCache?.get(cacheKey)\n\n  // If we have a cached path, we can return it directly.\n  if (pagePath) return pagePath\n\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  let appPathsManifest: undefined | PagesManifest\n\n  if (isAppPath) {\n    appPathsManifest = loadManifest(\n      path.join(serverBuildPath, APP_PATHS_MANIFEST),\n      !isDev\n    ) as PagesManifest\n  }\n  const pagesManifest = loadManifest(\n    path.join(serverBuildPath, PAGES_MANIFEST),\n    !isDev\n  ) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n\n  const checkManifest = (manifest: PagesManifest) => {\n    let curPath = manifest[page]\n\n    if (!manifest[curPath] && locales) {\n      const manifestNoLocales: typeof pagesManifest = {}\n\n      for (const key of Object.keys(manifest)) {\n        manifestNoLocales[normalizeLocalePath(key, locales).pathname] =\n          pagesManifest[key]\n      }\n      curPath = manifestNoLocales[page]\n    }\n    return curPath\n  }\n\n  if (appPathsManifest) {\n    pagePath = checkManifest(appPathsManifest)\n  }\n\n  if (!pagePath) {\n    pagePath = checkManifest(pagesManifest)\n  }\n\n  if (!pagePath) {\n    pagePathCache?.set(cacheKey, null)\n    return null\n  }\n\n  pagePath = path.join(serverBuildPath, pagePath)\n\n  pagePathCache?.set(cacheKey, pagePath)\n  return pagePath\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string {\n  const pagePath = getMaybePagePath(page, distDir, locales, isAppPath)\n\n  if (!pagePath) {\n    throw new PageNotFoundError(page)\n  }\n\n  return pagePath\n}\n\nexport async function requirePage(\n  page: string,\n  distDir: string,\n  isAppPath: boolean\n): Promise<any> {\n  const pagePath = getPagePath(page, distDir, undefined, isAppPath)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8').catch((err) => {\n      throw new MissingStaticPage(page, err.message)\n    })\n  }\n\n  const mod = process.env.NEXT_MINIMAL\n    ? // @ts-ignore\n      __non_webpack_require__(pagePath)\n    : require(pagePath)\n  return mod\n}\n","export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","/**\n * Wait for a given number of milliseconds and then resolve.\n *\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n  SUBRESOURCE_INTEGRITY_MANIFEST,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest.external'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { isStaticMetadataRoute } from '../lib/metadata/is-metadata-route'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n/**\n * This manifest prevents removing server rendered <link> tags after client\n * navigation. This is only needed under `Pages dir && Production && Webpack`.\n * @see https://github.com/vercel/next.js/pull/72959\n */\nexport type DynamicCssManifest = string[]\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathname, LoadableManifest>`\n * where pathname is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  dynamicCssManifest?: DeepReadonly<DynamicCssManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n  multiZoneDraftMode?: boolean\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts, or return undefined.\n */\nexport async function tryLoadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  try {\n    return await loadManifestWithRetries<T>(manifestPath, attempts)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function tryLoadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string,\n  attempts?: number\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath, attempts)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n  isDev,\n  sriEnabled,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n  isDev: boolean\n  sriEnabled: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // In dev mode we retry loading a manifest file to handle a race condition\n  // that can occur while app and pages are compiling at the same time, and the\n  // build-manifest is still being written to disk while an app path is\n  // attempting to load.\n  const manifestLoadAttempts = isDev ? 3 : 1\n\n  let reactLoadableManifestPath\n  if (!process.env.TURBOPACK) {\n    reactLoadableManifestPath = join(distDir, REACT_LOADABLE_MANIFEST)\n  } else if (isAppPath) {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'app',\n      page,\n      REACT_LOADABLE_MANIFEST\n    )\n  } else {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'pages',\n      normalizePagePath(page),\n      REACT_LOADABLE_MANIFEST\n    )\n  }\n\n  // Make sure to avoid loading the manifest for static metadata routes for better performance.\n  const hasClientManifest = !isStaticMetadataRoute(page)\n\n  // Load the manifest files first\n  //\n  // Loading page-specific manifests shouldn't throw an error if the manifest couldn't be found, so\n  // that the `requirePage` call below will throw the correct error in that case\n  // (a `PageNotFoundError`).\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n    subresourceIntegrityManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(\n      join(distDir, BUILD_MANIFEST),\n      manifestLoadAttempts\n    ),\n    tryLoadManifestWithRetries<ReactLoadableManifest>(\n      reactLoadableManifestPath,\n      manifestLoadAttempts\n    ),\n    // This manifest will only exist in Pages dir && Production && Webpack.\n    isAppPath || process.env.TURBOPACK\n      ? undefined\n      : loadManifestWithRetries<DynamicCssManifest>(\n          join(distDir, `${DYNAMIC_CSS_MANIFEST}.json`),\n          manifestLoadAttempts\n        ).catch(() => undefined),\n    isAppPath && hasClientManifest\n      ? tryLoadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_'),\n          manifestLoadAttempts\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json'),\n          manifestLoadAttempts\n        ).catch(() => null)\n      : null,\n    sriEnabled\n      ? loadManifestWithRetries<DeepReadonly<Record<string, string>>>(\n          join(distDir, 'server', SUBRESOURCE_INTEGRITY_MANIFEST + '.json')\n        ).catch(() => undefined)\n      : undefined,\n  ])\n\n  // Before requiring the actual page module, we have to set the reference\n  // manifests to our global store so Server Action's encryption util can access\n  // to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    subresourceIntegrityManifest,\n    reactLoadableManifest: reactLoadableManifest || {},\n    dynamicCssManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { workAsyncStorage } from './work-async-storage.external'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n}: {\n  serverActionsManifest: ActionManifest\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        const workers =\n          serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ]?.[id]?.workers\n\n        if (!workers) {\n          return undefined\n        }\n\n        const workStore = workAsyncStorage.getStore()\n\n        let workerEntry:\n          | { moduleId: string | number; async: boolean }\n          | undefined\n\n        if (workStore) {\n          workerEntry = workers[normalizeWorkerPageName(workStore.page)]\n        } else {\n          // If there's no work store defined, we can assume that a server\n          // module map is needed during module evaluation, e.g. to create a\n          // server action using a higher-order function. Therefore it should be\n          // safe to return any entry from the manifest that matches the action\n          // ID. They all refer to the same module ID, which must also exist in\n          // the current page bundle. TODO: This is currently not guaranteed in\n          // Turbopack, and needs to be fixed.\n          workerEntry = Object.values(workers).at(0)\n        }\n\n        if (!workerEntry) {\n          return undefined\n        }\n\n        const { moduleId, async } = workerEntry\n\n        return { id: moduleId, name: id, chunks: [], async }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n","import type { BaseNextRequest } from '../../../../server/base-http'\nimport type { MiddlewareMatcher } from '../../../../build/analysis/get-page-static-info'\nimport type { Params } from '../../../../server/request/params'\nimport { matchHas } from './prepare-destination'\n\nexport interface MiddlewareRouteMatch {\n  (\n    pathname: string | null | undefined,\n    request: BaseNextRequest,\n    query: Params\n  ): boolean\n}\n\nexport function getMiddlewareRouteMatcher(\n  matchers: MiddlewareMatcher[]\n): MiddlewareRouteMatch {\n  return (\n    pathname: string | null | undefined,\n    req: BaseNextRequest,\n    query: Params\n  ) => {\n    for (const matcher of matchers) {\n      const routeMatch = new RegExp(matcher.regexp).exec(pathname!)\n      if (!routeMatch) {\n        continue\n      }\n\n      if (matcher.has || matcher.missing) {\n        const hasParams = matchHas(req, query, matcher.has, matcher.missing)\n        if (!hasParams) {\n          continue\n        }\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(\n              response.value.html,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(\n                response.value.html,\n                HTML_CONTENT_TYPE_HEADER\n              ),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    case RouteKind.PAGES_API:\n      // Pages Router API routes are not cached in the incremental cache.\n      throw new Error(`Unexpected route kind ${routeKind}`)\n    default:\n      return routeKind satisfies never\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      waitUntil,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      (cacheKey, resolve) => {\n        const prom = (async () => {\n          // We keep the previous cache entry around to leverage when the\n          // incremental cache is disabled in minimal mode.\n          if (\n            this.minimal_mode &&\n            this.previousCacheItem?.key === cacheKey &&\n            this.previousCacheItem.expiresAt > Date.now()\n          ) {\n            return this.previousCacheItem.entry\n          }\n\n          // Coerce the kindHint into a given kind for the incremental cache.\n          const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n          let resolved = false\n          let cachedResponse: IncrementalResponseCacheEntry | null = null\n          try {\n            cachedResponse = !this.minimal_mode\n              ? await incrementalCache.get(key, {\n                  kind,\n                  isRoutePPREnabled: context.isRoutePPREnabled,\n                  isFallback,\n                })\n              : null\n\n            if (cachedResponse && !isOnDemandRevalidate) {\n              resolve(cachedResponse)\n              resolved = true\n\n              if (!cachedResponse.isStale || context.isPrefetch) {\n                // The cached value is still valid, so we don't need\n                // to update it yet.\n                return null\n              }\n            }\n\n            const cacheEntry = await responseGenerator({\n              hasResolved: resolved,\n              previousCacheEntry: cachedResponse,\n              isRevalidating: true,\n            })\n\n            // If the cache entry couldn't be generated, we don't want to cache\n            // the result.\n            if (!cacheEntry) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            const resolveValue = await fromResponseCacheEntry({\n              ...cacheEntry,\n              isMiss: !cachedResponse,\n            })\n            if (!resolveValue) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            // For on-demand revalidate wait to resolve until cache is set.\n            // Otherwise resolve now.\n            if (!isOnDemandRevalidate && !resolved) {\n              resolve(resolveValue)\n              resolved = true\n            }\n\n            // We want to persist the result only if it has a cache control value\n            // defined.\n            if (resolveValue.cacheControl) {\n              if (this.minimal_mode) {\n                this.previousCacheItem = {\n                  key: cacheKey,\n                  entry: resolveValue,\n                  expiresAt: Date.now() + 1000,\n                }\n              } else {\n                await incrementalCache.set(key, resolveValue.value, {\n                  cacheControl: resolveValue.cacheControl,\n                  isRoutePPREnabled,\n                  isFallback,\n                })\n              }\n            }\n\n            return resolveValue\n          } catch (err) {\n            // When a path is erroring we automatically re-set the existing cache\n            // with new revalidate and expire times to prevent non-stop retrying.\n            if (cachedResponse?.cacheControl) {\n              const newRevalidate = Math.min(\n                Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n                30\n              )\n\n              const newExpire =\n                cachedResponse.cacheControl.expire === undefined\n                  ? undefined\n                  : Math.max(\n                      newRevalidate + 3,\n                      cachedResponse.cacheControl.expire\n                    )\n\n              await incrementalCache.set(key, cachedResponse.value, {\n                cacheControl: { revalidate: newRevalidate, expire: newExpire },\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n\n            // While revalidating in the background we can't reject as we already\n            // resolved the cache entry so log the error here.\n            if (resolved) {\n              console.error(err)\n              return null\n            }\n\n            // We haven't resolved yet, so let's throw to indicate an error.\n            throw err\n          }\n        })()\n\n        // we need to ensure background revalidates are\n        // passed to waitUntil\n        if (waitUntil) {\n          waitUntil(prom)\n        }\n        return prom\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import path from '../shared/lib/isomorphic/path'\nimport type { CacheFs } from '../shared/lib/utils'\n\n/**\n * A task to be written.\n */\ntype Task = [\n  /**\n   * The directory to create.\n   */\n  directory: string,\n\n  /**\n   * The promise to create the directory.\n   */\n  mkdir: Promise<unknown>,\n\n  /**\n   * The promises to write the files that are dependent on the directory being\n   * created.\n   */\n  writeFile: Promise<unknown>[],\n]\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */\nexport class MultiFileWriter {\n  /**\n   * The tasks to be written.\n   */\n  private readonly tasks: Task[] = []\n\n  constructor(\n    /**\n     * The file system methods to use.\n     */\n    private readonly fs: Pick<CacheFs, 'mkdir' | 'writeFile'>\n  ) {}\n\n  /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */\n  private findOrCreateTask(directory: string): Task {\n    // See if this directory already has a task to create it.\n    for (const task of this.tasks) {\n      if (task[0] === directory) {\n        return task\n      }\n    }\n\n    const promise = this.fs.mkdir(directory)\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Otherwise, create a new task for this directory.\n    const task: Task = [directory, promise, []]\n    this.tasks.push(task)\n\n    return task\n  }\n\n  /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */\n  public append(filePath: string, data: Buffer | string): void {\n    // Find or create a task for the directory that contains the file.\n    const task = this.findOrCreateTask(path.dirname(filePath))\n\n    const promise = task[1].then(() => this.fs.writeFile(filePath, data))\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Add the file write to the task AFTER the directory promise has resolved.\n    task[2].push(promise)\n  }\n\n  /**\n   * Returns a promise that resolves when all the files have been written.\n   */\n  public wait(): Promise<unknown> {\n    return Promise.all(this.tasks.flatMap((task) => task[2]))\n  }\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from '.'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchValue,\n  type IncrementalCacheValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\n\nimport type { LRUCache } from '../lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\nimport { isStale, tagsManifest } from './tags-manifest.external'\nimport { MultiFileWriter } from '../../../lib/multi-file-writer'\nimport { getMemoryCache } from './memory-cache.external'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private revalidatedTags: string[]\n  private static debug: boolean = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private static memoryCache: LRUCache<CacheHandlerValue> | undefined\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.revalidatedTags = ctx.revalidatedTags\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!FileSystemCache.memoryCache) {\n        if (FileSystemCache.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        FileSystemCache.memoryCache = getMemoryCache(ctx.maxMemoryCacheSize)\n      } else if (FileSystemCache.debug) {\n        console.log('memory store already initialized')\n      }\n    } else if (FileSystemCache.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (FileSystemCache.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    for (const tag of tags) {\n      if (!tagsManifest.has(tag)) {\n        tagsManifest.set(tag, Date.now())\n      }\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { kind } = ctx\n\n    let data = FileSystemCache.memoryCache?.get(key)\n\n    if (FileSystemCache.debug) {\n      if (kind === IncrementalCacheKind.FETCH) {\n        console.log('get', key, ctx.tags, kind, !!data)\n      } else {\n        console.log('get', key, kind, !!data)\n      }\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      try {\n        if (kind === IncrementalCacheKind.APP_ROUTE) {\n          const filePath = this.getFilePath(\n            `${key}.body`,\n            IncrementalCacheKind.APP_ROUTE\n          )\n          const fileData = await this.fs.readFile(filePath)\n          const { mtime } = await this.fs.stat(filePath)\n\n          const meta = JSON.parse(\n            await this.fs.readFile(\n              filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n              'utf8'\n            )\n          )\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_ROUTE,\n              body: fileData,\n              headers: meta.headers,\n              status: meta.status,\n            },\n          }\n        } else {\n          const filePath = this.getFilePath(\n            kind === IncrementalCacheKind.FETCH ? key : `${key}.html`,\n            kind\n          )\n\n          const fileData = await this.fs.readFile(filePath, 'utf8')\n          const { mtime } = await this.fs.stat(filePath)\n\n          if (kind === IncrementalCacheKind.FETCH) {\n            const { tags, fetchIdx, fetchUrl } = ctx\n\n            if (!this.flushToDisk) return null\n\n            const lastModified = mtime.getTime()\n            const parsedData: CachedFetchValue = JSON.parse(fileData)\n            data = {\n              lastModified,\n              value: parsedData,\n            }\n\n            if (data.value?.kind === CachedRouteKind.FETCH) {\n              const storedTags = data.value?.tags\n\n              // update stored tags if a new one is being added\n              // TODO: remove this when we can send the tags\n              // via header on GET same as SET\n              if (!tags?.every((tag) => storedTags?.includes(tag))) {\n                if (FileSystemCache.debug) {\n                  console.log('tags vs storedTags mismatch', tags, storedTags)\n                }\n                await this.set(key, data.value, {\n                  fetchCache: true,\n                  tags,\n                  fetchIdx,\n                  fetchUrl,\n                })\n              }\n            }\n          } else if (kind === IncrementalCacheKind.APP_PAGE) {\n            // We try to load the metadata file, but if it fails, we don't\n            // error. We also don't load it if this is a fallback.\n            let meta: RouteMetadata | undefined\n            try {\n              meta = JSON.parse(\n                await this.fs.readFile(\n                  filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                  'utf8'\n                )\n              )\n            } catch {}\n\n            let maybeSegmentData: Map<string, Buffer> | undefined\n            if (meta?.segmentPaths) {\n              // Collect all the segment data for this page.\n              // TODO: To optimize file system reads, we should consider creating\n              // separate cache entries for each segment, rather than storing them\n              // all on the page's entry. Though the behavior is\n              // identical regardless.\n              const segmentData: Map<string, Buffer> = new Map()\n              maybeSegmentData = segmentData\n              const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX\n              await Promise.all(\n                meta.segmentPaths.map(async (segmentPath: string) => {\n                  const segmentDataFilePath = this.getFilePath(\n                    segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX,\n                    IncrementalCacheKind.APP_PAGE\n                  )\n                  try {\n                    segmentData.set(\n                      segmentPath,\n                      await this.fs.readFile(segmentDataFilePath)\n                    )\n                  } catch {\n                    // This shouldn't happen, but if for some reason we fail to\n                    // load a segment from the filesystem, treat it the same as if\n                    // the segment is dynamic and does not have a prefetch.\n                  }\n                })\n              )\n            }\n\n            let rscData: Buffer | undefined\n            if (!ctx.isFallback) {\n              rscData = await this.fs.readFile(\n                this.getFilePath(\n                  `${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                  IncrementalCacheKind.APP_PAGE\n                )\n              )\n            }\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: CachedRouteKind.APP_PAGE,\n                html: fileData,\n                rscData,\n                postponed: meta?.postponed,\n                headers: meta?.headers,\n                status: meta?.status,\n                segmentData: maybeSegmentData,\n              },\n            }\n          } else if (kind === IncrementalCacheKind.PAGES) {\n            let meta: RouteMetadata | undefined\n            let pageData: string | object = {}\n\n            if (!ctx.isFallback) {\n              pageData = JSON.parse(\n                await this.fs.readFile(\n                  this.getFilePath(\n                    `${key}${NEXT_DATA_SUFFIX}`,\n                    IncrementalCacheKind.PAGES\n                  ),\n                  'utf8'\n                )\n              )\n            }\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: CachedRouteKind.PAGES,\n                html: fileData,\n                pageData,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          } else {\n            throw new Error(\n              `Invariant: Unexpected route kind ${kind} in file system cache.`\n            )\n          }\n        }\n\n        if (data) {\n          FileSystemCache.memoryCache?.set(key, data)\n        }\n      } catch {\n        return null\n      }\n    }\n\n    if (\n      data?.value?.kind === CachedRouteKind.APP_PAGE ||\n      data?.value?.kind === CachedRouteKind.APP_ROUTE ||\n      data?.value?.kind === CachedRouteKind.PAGES\n    ) {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale(cacheTags, data?.lastModified || Date.now())) {\n          return null\n        }\n      }\n    } else if (data?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags =\n        ctx.kind === IncrementalCacheKind.FETCH\n          ? [...(ctx.tags || []), ...(ctx.softTags || [])]\n          : []\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return isStale([tag], data?.lastModified || Date.now())\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(\n    key: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ) {\n    FileSystemCache.memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (FileSystemCache.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk || !data) return\n\n    // Create a new writer that will prepare to write all the files to disk\n    // after their containing directory is created.\n    const writer = new MultiFileWriter(this.fs)\n\n    if (data.kind === CachedRouteKind.APP_ROUTE) {\n      const filePath = this.getFilePath(\n        `${key}.body`,\n        IncrementalCacheKind.APP_ROUTE\n      )\n\n      writer.append(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n        segmentPaths: undefined,\n      }\n\n      writer.append(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n    } else if (\n      data.kind === CachedRouteKind.PAGES ||\n      data.kind === CachedRouteKind.APP_PAGE\n    ) {\n      const isAppPath = data.kind === CachedRouteKind.APP_PAGE\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES\n      )\n\n      writer.append(htmlPath, data.html)\n\n      // Fallbacks don't generate a data file.\n      if (!ctx.fetchCache && !ctx.isFallback) {\n        writer.append(\n          this.getFilePath(\n            `${key}${\n              isAppPath\n                ? ctx.isRoutePPREnabled\n                  ? RSC_PREFETCH_SUFFIX\n                  : RSC_SUFFIX\n                : NEXT_DATA_SUFFIX\n            }`,\n            isAppPath\n              ? IncrementalCacheKind.APP_PAGE\n              : IncrementalCacheKind.PAGES\n          ),\n          isAppPath ? data.rscData! : JSON.stringify(data.pageData)\n        )\n      }\n\n      if (data?.kind === CachedRouteKind.APP_PAGE) {\n        let segmentPaths: string[] | undefined\n        if (data.segmentData) {\n          segmentPaths = []\n          const segmentsDir = htmlPath.replace(\n            /\\.html$/,\n            RSC_SEGMENTS_DIR_SUFFIX\n          )\n\n          for (const [segmentPath, buffer] of data.segmentData) {\n            segmentPaths.push(segmentPath)\n            const segmentDataFilePath =\n              segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX\n            writer.append(segmentDataFilePath, buffer)\n          }\n        }\n\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: data.postponed,\n          segmentPaths,\n        }\n\n        writer.append(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data.kind === CachedRouteKind.FETCH) {\n      const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH)\n      writer.append(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.fetchCache ? ctx.tags : [],\n        })\n      )\n    }\n\n    // Wait for all FS operations to complete.\n    await writer.wait()\n  }\n\n  private getFilePath(pathname: string, kind: IncrementalCacheKind): string {\n    switch (kind) {\n      case IncrementalCacheKind.FETCH:\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case IncrementalCacheKind.PAGES:\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case IncrementalCacheKind.IMAGE:\n      case IncrementalCacheKind.APP_PAGE:\n      case IncrementalCacheKind.APP_ROUTE:\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(`Unexpected file path kind: ${kind}`)\n    }\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport {\n  type IncrementalCacheValue,\n  type IncrementalCacheEntry,\n  type IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKind,\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n  type IncrementalFetchCacheEntry,\n  type GetIncrementalFetchCacheContext,\n  type GetIncrementalResponseCacheContext,\n  type CachedFetchValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedCacheControls } from './shared-cache-controls.external'\nimport {\n  getPrerenderResumeDataCache,\n  getRenderResumeDataCache,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\nimport type { Revalidate } from '../cache-control'\nimport { getPreviouslyRevalidatedTags } from '../../server-utils'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { DetachedPromise } from '../../../lib/detached-promise'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    _cacheKey: string,\n    _ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    _cacheKey: string,\n    _data: IncrementalCacheValue | null,\n    _ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private static readonly debug: boolean =\n    !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private readonly locks = new Map<string, Promise<void>>()\n\n  /**\n   * The cache controls for routes. This will source the values from the\n   * prerender manifest until the in-memory cache is updated with new values.\n   */\n  private readonly cacheControls: SharedCacheControls\n\n  constructor({\n    fs,\n    dev,\n    flushToDisk,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n\n    const cacheHandlersSymbol = Symbol.for('@next/cache-handlers')\n    const _globalThis: typeof globalThis & {\n      [cacheHandlersSymbol]?: {\n        FetchCache?: typeof CacheHandler\n      }\n    } = globalThis\n\n    if (!CurCacheHandler) {\n      // if we have a global cache handler available leverage it\n      const globalCacheHandler = _globalThis[cacheHandlersSymbol]\n\n      if (globalCacheHandler?.FetchCache) {\n        CurCacheHandler = globalCacheHandler.FetchCache\n      } else {\n        if (fs && serverDistDir) {\n          if (IncrementalCache.debug) {\n            console.log('using filesystem cache handler')\n          }\n          CurCacheHandler = FileSystemCache\n        }\n      }\n    } else if (IncrementalCache.debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.cacheControls = new SharedCacheControls(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (minimalMode) {\n      revalidatedTags = getPreviouslyRevalidatedTags(\n        requestHeaders,\n        this.prerenderManifest?.preview?.previewModeId\n      )\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev: boolean,\n    isFallback: boolean | undefined\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev)\n      return Math.floor(performance.timeOrigin + performance.now() - 1000)\n\n    const cacheControl = this.cacheControls.get(toRoute(pathname))\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second unless it's a fallback request.\n    const initialRevalidateSeconds = cacheControl\n      ? cacheControl.revalidate\n      : isFallback\n        ? false\n        : 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async lock(cacheKey: string): Promise<() => Promise<void> | void> {\n    // Wait for any existing lock on this cache key to be released\n    // This implements a simple queue-based locking mechanism\n    while (true) {\n      const lock = this.locks.get(cacheKey)\n\n      if (IncrementalCache.debug) {\n        console.log('lock get', cacheKey, !!lock)\n      }\n\n      // If no lock exists, we can proceed to acquire it\n      if (!lock) break\n\n      // Wait for the existing lock to be released before trying again\n      await lock\n    }\n\n    // Create a new detached promise that will represent this lock\n    // The resolve function (unlock) will be returned to the caller\n    const { resolve, promise } = new DetachedPromise<void>()\n\n    if (IncrementalCache.debug) {\n      console.log('successfully locked', cacheKey)\n    }\n\n    // Store the lock promise in the locks map\n    this.locks.set(cacheKey, promise)\n\n    return () => {\n      // Resolve the promise to release the lock.\n      resolve()\n\n      // Remove the lock from the map once it's released so that future gets\n      // can acquire the lock.\n      this.locks.delete(cacheKey)\n    }\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle Uint8Array body\n      if (init.body instanceof Uint8Array) {\n        bodyChunks.push(decoder.decode(init.body))\n        ;(init as any)._ogBody = init.body\n      } // handle ReadableStream body\n      else if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    // w3c trace context headers can break request caching and deduplication\n    // so we remove them from the cache key\n    if ('traceparent' in headers) delete headers['traceparent']\n    if ('tracestate' in headers) delete headers['tracestate']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<IncrementalCacheEntry | null> {\n    // Unlike other caches if we have a resume data cache, we use it even if\n    // testmode would normally disable it or if requestHeaders say 'no-cache'.\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const resumeDataCache = workUnitStore\n        ? getRenderResumeDataCache(workUnitStore)\n        : null\n      if (resumeDataCache) {\n        const memoryCacheData = resumeDataCache.fetch.get(cacheKey)\n        if (memoryCacheData?.kind === CachedRouteKind.FETCH) {\n          return { isStale: false, value: memoryCacheData }\n        }\n      }\n    }\n\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kind !== IncrementalCacheKind.FETCH ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(\n      cacheKey,\n      ctx.kind === IncrementalCacheKind.FETCH\n    )\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      if (!cacheData) {\n        return null\n      }\n\n      if (cacheData.value?.kind !== CachedRouteKind.FETCH) {\n        throw new InvariantError(\n          `Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify(cacheData.value?.kind)} instead.`\n        )\n      }\n\n      const workStore = workAsyncStorage.getStore()\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some(\n          (tag) =>\n            this.revalidatedTags?.includes(tag) ||\n            workStore?.pendingRevalidatedTags?.includes(tag)\n        )\n      ) {\n        return null\n      }\n\n      const revalidate = ctx.revalidate || cacheData.value.revalidate\n      const age =\n        (performance.timeOrigin +\n          performance.now() -\n          (cacheData.lastModified || 0)) /\n        1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale,\n        value: { kind: CachedRouteKind.FETCH, data, revalidate },\n      }\n    } else if (cacheData?.value?.kind === CachedRouteKind.FETCH) {\n      throw new InvariantError(\n        `Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`\n      )\n    }\n\n    let entry: IncrementalResponseCacheEntry | null = null\n    const cacheControl = this.cacheControls.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || performance.timeOrigin + performance.now(),\n        this.dev ?? false,\n        ctx.isFallback\n      )\n      isStale =\n        revalidateAfter !== false &&\n        revalidateAfter < performance.timeOrigin + performance.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        cacheControl,\n        revalidateAfter,\n        value: cacheData.value,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        cacheControl,\n        revalidateAfter,\n      }\n      this.set(cacheKey, entry.value, { ...ctx, cacheControl })\n    }\n    return entry\n  }\n\n  async set(\n    pathname: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {\n    // Even if we otherwise disable caching for testMode or if no fetchCache is\n    // configured we still always stash results in the resume data cache if one\n    // exists. This is because this is a transient in memory cache that\n    // populates caches ahead of a dynamic render in dev mode to allow the RSC\n    // debug info to have the right environment associated to it.\n    if (data?.kind === CachedRouteKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const prerenderResumeDataCache = workUnitStore\n        ? getPrerenderResumeDataCache(workUnitStore)\n        : null\n      if (prerenderResumeDataCache) {\n        prerenderResumeDataCache.fetch.set(pathname, data)\n      }\n    }\n\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      itemSize > 2 * 1024 * 1024 &&\n      // We ignore the size limit when custom cache handler is being used, as it\n      // might not have this limit\n      !this.hasCustomCacheHandler &&\n      // We also ignore the size limit when it's an implicit build-time-only\n      // caching that the user isn't even aware of.\n      !ctx.isImplicitBuildTimeCache\n    ) {\n      const warningText = `Failed to set Next.js data cache for ${ctx.fetchUrl || pathname}, items over 2MB can not be cached (${itemSize} bytes)`\n\n      if (this.dev) {\n        throw new Error(warningText)\n      }\n      console.warn(warningText)\n      return\n    }\n\n    try {\n      if (!ctx.fetchCache && ctx.cacheControl) {\n        this.cacheControls.set(toRoute(pathname), ctx.cacheControl)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public setHeaders(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","export class AsyncCallbackSet {\n  private callbacks: (() => Promise<void>)[] = []\n\n  public add(callback: () => Promise<void>) {\n    this.callbacks.push(callback)\n  }\n\n  public async runAll(): Promise<void> {\n    if (!this.callbacks.length) {\n      return\n    }\n    const callbacks = this.callbacks\n    this.callbacks = []\n    await Promise.allSettled(\n      callbacks.map(\n        // NOTE: wrapped in an async function to protect against synchronous exceptions\n        async (f) => f()\n      )\n    )\n  }\n}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { NextConfigComplete } from '../../config-shared'\nimport type { UrlWithParsedQuery } from 'node:url'\n\nexport type RevalidateFn = (config: {\n  urlPath: string\n  revalidateHeaders: { [key: string]: string | string[] }\n  opts: { unstable_onlyGenerated?: boolean }\n}) => Promise<void>\n\n// The RouterServerContext contains instance specific\n// information that isn't available/relevant when\n// deployed in serverless environments, the key is\n// the relative project dir this allows separate contexts\n// when running multiple next instances in same process\nexport type RouterServerContext = Record<\n  string,\n  {\n    // hostname the server is started with\n    hostname?: string\n    // revalidate function to bypass going through network\n    // to invoke revalidate request (uses mocked req/res)\n    revalidate?: RevalidateFn\n    // function to render the 404 page\n    render404?: (\n      req: IncomingMessage,\n      res: ServerResponse,\n      parsedUrl?: UrlWithParsedQuery,\n      setHeaders?: boolean\n    ) => Promise<void>\n    // current loaded public runtime config\n    publicRuntimeConfig?: NextConfigComplete['publicRuntimeConfig']\n    // exposing nextConfig for dev mode specifically\n    nextConfig?: NextConfigComplete\n    // whether running in custom server mode\n    isCustomServer?: boolean\n    // whether test proxy is enabled\n    experimentalTestProxy?: boolean\n    // allow dev server to log with original stack\n    logErrorWithOriginalStack?: (err: unknown, type: string) => void\n    // allow setting ISR status in dev\n    setIsrStatus?: (key: string, value: boolean | null) => void\n  }\n>\n\nexport const RouterServerContextSymbol = Symbol.for(\n  '@next/router-server-methods'\n)\n\nexport const routerServerGlobal = globalThis as typeof globalThis & {\n  [RouterServerContextSymbol]?: RouterServerContext\n}\n","import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest, RoutesManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from './request/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { CacheControl } from './lib/cache-control'\nimport type { WaitUntil } from './after/builtin-request-context'\n\nimport fs from 'fs'\nimport { join, relative } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n  FUNCTIONS_CONFIG_MANIFEST,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, {\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n} from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { loadManifest } from './load-manifest.external'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { AwaiterOnce } from './after/awaiter'\nimport { AsyncCallbackSet } from './lib/async-callback-set'\nimport { initializeCacheHandlers, setCacheHandler } from './use-cache/handlers'\nimport type { UnwrapPromise } from '../lib/coalesced-function'\nimport { populateStaticEnv } from '../lib/static-env'\nimport { isPostpone } from './lib/router-utils/is-postpone'\nimport { NodeModuleLoader } from './lib/module-loader/node-module-loader'\nimport { NoFallbackError } from '../shared/lib/no-fallback-error.external'\nimport {\n  ensureInstrumentationRegistered,\n  getInstrumentationModule,\n} from './lib/router-utils/instrumentation-globals.external'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from './lib/router-utils/router-server-context'\n\nexport * from './base-server'\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nfunction installProcessErrorHandlers(\n  shouldRemoveUncaughtErrorAndRejectionListeners: boolean\n) {\n  // The conventional wisdom of Node.js and other runtimes is to treat\n  // unhandled errors as fatal and exit the process.\n  //\n  // But Next.js is not a generic JS runtime — it's a specialized runtime for\n  // React Server Components.\n  //\n  // Many unhandled rejections are due to the late-awaiting pattern for\n  // prefetching data. In Next.js it's OK to call an async function without\n  // immediately awaiting it, to start the request as soon as possible\n  // without blocking unncessarily on the result. These can end up\n  // triggering an \"unhandledRejection\" if it later turns out that the\n  // data is not needed to render the page. Example:\n  //\n  //     const promise = fetchData()\n  //     const shouldShow = await checkCondition()\n  //     if (shouldShow) {\n  //       return <Component promise={promise} />\n  //     }\n  //\n  // In this example, `fetchData` is called immediately to start the request\n  // as soon as possible, but if `shouldShow` is false, then it will be\n  // discarded without unwrapping its result. If it errors, it will trigger\n  // an \"unhandledRejection\" event.\n  //\n  // Ideally, we would suppress these rejections completely without warning,\n  // because we don't consider them real errors. (TODO: Currently we do warn.)\n  //\n  // But regardless of whether we do or don't warn, we definitely shouldn't\n  // crash the entire process.\n  //\n  // Even a \"legit\" unhandled error unrelated to prefetching shouldn't\n  // prevent the rest of the page from rendering.\n  //\n  // So, we're going to intentionally override the default error handling\n  // behavior of the outer JS runtime to be more forgiving\n\n  // Remove any existing \"unhandledRejection\" and \"uncaughtException\" handlers.\n  // This is gated behind an experimental flag until we've considered the impact\n  // in various deployment environments. It's possible this may always need to\n  // be configurable.\n  if (shouldRemoveUncaughtErrorAndRejectionListeners) {\n    process.removeAllListeners('uncaughtException')\n    process.removeAllListeners('unhandledRejection')\n  }\n\n  // Install a new handler to prevent the process from crashing.\n  process.on('unhandledRejection', (reason: unknown) => {\n    if (isPostpone(reason)) {\n      // React postpones that are unhandled might end up logged here but they're\n      // not really errors. They're just part of rendering.\n      return\n    }\n    // Immediately log the error.\n    // TODO: Ideally, if we knew that this error was triggered by application\n    // code, we would suppress it entirely without logging. We can't reliably\n    // detect all of these, but when cacheComponents is enabled, we could suppress\n    // at least some of them by waiting to log the error until after all in-\n    // progress renders have completed. Then, only log errors for which there\n    // was not a corresponding \"rejectionHandled\" event.\n    console.error(reason)\n  })\n\n  process.on('rejectionHandled', () => {\n    // TODO: See note in the unhandledRejection handler above. In the future,\n    // we may use the \"rejectionHandled\" event to de-queue an error from\n    // being logged.\n  })\n\n  // Unhandled exceptions are errors triggered by non-async functions, so this\n  // is unrelated to the late-awaiting pattern. However, for similar reasons,\n  // we still shouldn't crash the process. Just log it.\n  process.on('uncaughtException', (reason: unknown) => {\n    if (isPostpone(reason)) {\n      return\n    }\n    console.error(reason)\n  })\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  protected cleanupListeners = new AsyncCallbackSet()\n  protected internalWaitUntil: WaitUntil | undefined\n  private isDev: boolean\n  private sriEnabled: boolean\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    const isDev = options.dev ?? false\n    this.isDev = isDev\n    this.sriEnabled = Boolean(options.conf.experimental?.sri?.algorithm)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.experimental.useSkewCookie\n      ? ''\n      : this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const { interceptTestApis } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server') as typeof import('../experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n\n    // when using compile mode static env isn't inlined so we\n    // need to populate in normal runtime env\n    if (this.renderOpts.isExperimentalCompile) {\n      populateStaticEnv(this.nextConfig)\n    }\n\n    const shouldRemoveUncaughtErrorAndRejectionListeners = Boolean(\n      options.conf.experimental?.removeUncaughtErrorAndRejectionListeners\n    )\n    installProcessErrorHandlers(shouldRemoveUncaughtErrorAndRejectionListeners)\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    // Ensure prepare process will be finished before preloading entries.\n    await this.prepare()\n\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    await this.loadCustomCacheHandlers()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: true,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      })\n        .then(async ({ ComponentMod }) => {\n          // we need to ensure fetch is patched before we require the page,\n          // otherwise if the fetch is patched by user code, we will be patching it\n          // too late and there won't be any caching behaviors\n          ComponentMod.patchFetch()\n\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await getInstrumentationModule(\n          this.dir,\n          this.nextConfig.distDir\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    await ensureInstrumentationRegistered(this.dir, this.nextConfig.distDir)\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  private async loadCustomCacheHandlers() {\n    const { cacheHandlers } = this.nextConfig.experimental\n    if (!cacheHandlers) return\n\n    // If we've already initialized the cache handlers interface, don't do it\n    // again.\n    if (!initializeCacheHandlers()) return\n\n    for (const [kind, handler] of Object.entries(cacheHandlers)) {\n      if (!handler) continue\n\n      setCacheHandler(\n        kind,\n        interopDefault(\n          await dynamicImportEsmDefault(\n            formatDynamicImportPath(this.distDir, handler)\n          )\n        )\n      )\n    }\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    await this.loadCustomCacheHandlers()\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      cacheControl: options.cacheControl,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n    // The module supports minimal mode, load the minimal module.\n    // Restore original URL as the handler handles it's own parsing\n    const parsedInitUrl = parseUrl(getRequestMeta(req, 'initURL') || req.url)\n    req.url = `${parsedInitUrl.pathname}${parsedInitUrl.search || ''}`\n\n    const loader = new NodeModuleLoader()\n    const module = (await loader.load(match.definition.filename)) as {\n      handler: (\n        req: IncomingMessage,\n        res: ServerResponse,\n        ctx: {\n          waitUntil: ReturnType<BaseServer['getWaitUntil']>\n        }\n      ) => Promise<void>\n    }\n    addRequestMeta(\n      req.originalRequest,\n      'relativeProjectDir',\n      relative(process.cwd(), this.dir)\n    )\n    addRequestMeta(req.originalRequest, 'distDir', this.distDir)\n    await module.handler(req.originalRequest, res.originalResponse, {\n      waitUntil: this.getWaitUntil(),\n    })\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts,\n          this.getServerComponentsHmrCache(),\n          false,\n          {\n            buildId: this.buildId,\n          }\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts,\n        {\n          buildId: this.buildId,\n          deploymentId: this.nextConfig.deploymentId,\n          customServer: this.serverOptions.customServer || undefined,\n        },\n        {\n          isFallback: false,\n          isDraftMode: renderOpts.isDraftMode,\n          developmentNotFoundSourcePage: getRequestMeta(\n            req,\n            'developmentNotFoundSourcePage'\n          ),\n        }\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult,\n    previousCacheEntry?: IncrementalResponseCacheEntry | null\n  ): Promise<{\n    buffer: Buffer\n    contentType: string\n    maxAge: number\n    upstreamEtag: string\n    etag: string\n  }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(imageUpstream, paramsResult, this.nextConfig, {\n        isDev: this.renderOpts.dev,\n        previousCacheEntry,\n      })\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          locale,\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (locale) {\n      pagePaths.unshift(\n        ...pagePaths.map((path) => `/${locale}${path === '/' ? '' : path}`)\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n          isDev: this.isDev,\n          sriEnabled: this.sriEnabled,\n        })\n\n        if (\n          locale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${locale}/`) &&\n          pagePath !== `/${locale}`\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n    // Ignore if its a middleware request\n    if (getRequestMeta(req, 'middlewareInvoke')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async ({ previousCacheEntry }) => {\n            const { buffer, contentType, maxAge, upstreamEtag, etag } =\n              await this.imageOptimizer(\n                req,\n                res,\n                paramsResult,\n                previousCacheEntry\n              )\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n                upstreamEtag,\n              },\n              cacheControl: { revalidate: maxAge, expire: undefined },\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          cacheEntry.value.etag,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.cacheControl?.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // When in minimal mode we do not bubble the fallback as the\n    // router-server is not present to handle the error\n    addRequestMeta(req, 'bubbleNoFallback', this.minimalMode ? undefined : true)\n\n    // This is needed to expose render404 and nextConfig\n    // for environments without router-server\n    if (!routerServerGlobal[RouterServerContextSymbol]) {\n      routerServerGlobal[RouterServerContextSymbol] = {}\n    }\n    const relativeProjectDir = relative(process.cwd(), this.dir)\n    const existingServerContext =\n      routerServerGlobal[RouterServerContextSymbol][relativeProjectDir]\n\n    if (!existingServerContext) {\n      routerServerGlobal[RouterServerContextSymbol][relativeProjectDir] = {\n        render404: this.render404.bind(this),\n      }\n    }\n    routerServerGlobal[RouterServerContextSymbol][\n      relativeProjectDir\n    ].nextConfig = this.nextConfig\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromRequest(req, pathname),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const { wrapRequestHandlerNode } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server') as typeof import('../experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      mocked.res.statusCode !== 200 &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) {\n      return null\n    } else {\n      const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n      return manifest\n    }\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected async getMiddleware(): Promise<MiddlewareRoutingItem | undefined> {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      const middlewareModule = await this.loadNodeMiddleware()\n\n      if (middlewareModule) {\n        return {\n          match: getMiddlewareRouteMatcher(\n            middlewareModule.config?.matchers || [\n              { regexp: '.*', originalSource: '/:path*' },\n            ]\n          ),\n          page: '/',\n        }\n      }\n\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  private async loadNodeMiddleware() {\n    if (!process.env.NEXT_MINIMAL) {\n      try {\n        const functionsConfig = this.renderOpts.dev\n          ? {}\n          : require(join(this.distDir, 'server', FUNCTIONS_CONFIG_MANIFEST))\n\n        if (\n          this.renderOpts.dev ||\n          functionsConfig?.functions?.['/_middleware']\n        ) {\n          // if used with top level await, this will be a promise\n          return require(join(this.distDir, 'server', 'middleware.js'))\n        }\n      } catch (err) {\n        if (\n          isError(err) &&\n          err.code !== 'ENOENT' &&\n          err.code !== 'MODULE_NOT_FOUND'\n        ) {\n          throw err\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    const nodeMiddleware = await this.loadNodeMiddleware()\n\n    if (!info && nodeMiddleware) {\n      return true\n    }\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = getRequestMeta(params.request, 'locale')\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const requestData = {\n      headers: params.request.headers,\n      method,\n      nextConfig: {\n        basePath: this.nextConfig.basePath,\n        i18n: this.nextConfig.i18n,\n        trailingSlash: this.nextConfig.trailingSlash,\n        experimental: this.nextConfig.experimental,\n      },\n      url: url,\n      page,\n      body:\n        method !== 'GET' && method !== 'HEAD'\n          ? (getRequestMeta(params.request, 'clonableBody') as any)\n          : undefined,\n\n      signal: signalFromNodeResponse(params.response.originalResponse),\n      waitUntil: this.getWaitUntil(),\n    }\n    let result:\n      | UnwrapPromise<ReturnType<typeof import('./web/sandbox').run>>\n      | undefined\n\n    // if no middleware info check for Node.js middleware\n    // this is not in the middleware-manifest as that historically\n    // has only included edge-functions, we need to do a breaking\n    // version bump for that manifest to write this info there if\n    // we decide we want to\n    if (!middlewareInfo) {\n      let middlewareModule\n      middlewareModule = await this.loadNodeMiddleware()\n\n      if (!middlewareModule) {\n        throw new MiddlewareNotFoundError()\n      }\n      const adapterFn: typeof import('./web/adapter').adapter =\n        middlewareModule.default || middlewareModule\n\n      const hasRequestBody =\n        !['HEAD', 'GET'].includes(params.request.method) &&\n        Boolean(requestData.body)\n\n      try {\n        result = await adapterFn({\n          handler: middlewareModule.middleware || middlewareModule,\n          request: {\n            ...requestData,\n            body: hasRequestBody\n              ? requestData.body.cloneBodyStream()\n              : undefined,\n          },\n          page: 'middleware',\n        })\n      } finally {\n        if (hasRequestBody) {\n          requestData.body.finalize()\n        }\n      }\n    } else {\n      const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n      result = await run({\n        distDir: this.distDir,\n        name: middlewareInfo.name,\n        paths: middlewareInfo.paths,\n        edgeFunctionEntry: middlewareInfo,\n        request: requestData,\n        useCache: true,\n        onWarning: params.onWarning,\n      })\n    }\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    let maybeDecodedPathname = normalizedPathname\n\n    try {\n      maybeDecodedPathname = decodeURIComponent(normalizedPathname)\n    } catch {\n      /* non-fatal we can't decode so can't match it */\n    }\n\n    if (\n      !(\n        middleware.match(normalizedPathname, req, parsedUrl.query) ||\n        middleware.match(maybeDecodedPathname, req, parsedUrl.query)\n      )\n    ) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(\n      NextNodeServerSpan.getRoutesManifest,\n      () => loadManifest(join(this.distDir, ROUTES_MANIFEST)) as RoutesManifest\n    )\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = getRequestMeta(params.req, 'isNextDataReq')\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n\n  protected onServerClose(listener: () => Promise<void>) {\n    this.cleanupListeners.add(listener)\n  }\n\n  async close(): Promise<void> {\n    await this.cleanupListeners.runAll()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil {\n    this.internalWaitUntil ??= this.createInternalWaitUntil()\n    return this.internalWaitUntil\n  }\n\n  private createInternalWaitUntil() {\n    if (this.minimalMode) {\n      throw new InvariantError(\n        'createInternalWaitUntil should never be called in minimal mode'\n      )\n    }\n\n    const awaiter = new AwaiterOnce({ onError: console.error })\n\n    // TODO(after): warn if the process exits before these are awaited\n    this.onServerClose(() => awaiter.awaiting())\n\n    return awaiter.waitUntil\n  }\n}\n","import type { RouteMatch } from './route-match'\nimport type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\n\nimport { RouteKind } from '../route-kind'\n\nexport interface PagesAPIRouteMatch\n  extends RouteMatch<PagesAPIRouteDefinition> {}\n\n/**\n * Checks if the given match is a Pages API route match.\n * @param match the match to check\n * @returns true if the match is a Pages API route match, false otherwise\n */\nexport function isPagesAPIRouteMatch(\n  match: RouteMatch\n): match is PagesAPIRouteMatch {\n  return match.definition.kind === RouteKind.PAGES_API\n}\n","import type { NextConfig } from '../types'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\n\nexport function setHttpClientAndAgentOptions(config: {\n  httpAgentOptions?: NextConfig['httpAgentOptions']\n}) {\n  if (globalThis.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to reuse the same agent for all requests.\n    return\n  }\n\n  if (!config) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions\n  globalThis.__NEXT_HTTP_AGENT = new HttpAgent(config.httpAgentOptions)\n  globalThis.__NEXT_HTTPS_AGENT = new HttpsAgent(config.httpAgentOptions)\n}\n","import type { NextConfigComplete } from '../server/config-shared'\n\nfunction errorIfEnvConflicted(config: NextConfigComplete, key: string) {\n  const isPrivateKey = /^(?:NODE_.+)|^(?:__.+)$/i.test(key)\n  const hasNextRuntimeKey = key === 'NEXT_RUNTIME'\n\n  if (isPrivateKey || hasNextRuntimeKey) {\n    throw new Error(\n      `The key \"${key}\" under \"env\" in ${config.configFileName} is not allowed. https://nextjs.org/docs/messages/env-key-not-allowed`\n    )\n  }\n}\n\n/**\n * Collects all environment variables that are using the `NEXT_PUBLIC_` prefix.\n */\nexport function getNextPublicEnvironmentVariables() {\n  const defineEnv: Record<string, string | undefined> = {}\n  for (const key in process.env) {\n    if (key.startsWith('NEXT_PUBLIC_')) {\n      const value = process.env[key]\n      if (value != null) {\n        defineEnv[`process.env.${key}`] = value\n      }\n    }\n  }\n  return defineEnv\n}\n\n/**\n * Collects the `env` config value from the Next.js config.\n */\nexport function getNextConfigEnv(config: NextConfigComplete) {\n  // Refactored code below to use for-of\n  const defineEnv: Record<string, string | undefined> = {}\n  const env = config.env\n  for (const key in env) {\n    const value = env[key]\n    if (value != null) {\n      errorIfEnvConflicted(config, key)\n      defineEnv[`process.env.${key}`] = value\n    }\n  }\n  return defineEnv\n}\n\nexport function getStaticEnv(config: NextConfigComplete) {\n  const staticEnv: Record<string, string | undefined> = {\n    ...getNextPublicEnvironmentVariables(),\n    ...getNextConfigEnv(config),\n    'process.env.NEXT_DEPLOYMENT_ID': config.deploymentId || '',\n  }\n  return staticEnv\n}\n\nexport function populateStaticEnv(config: NextConfigComplete) {\n  // since inlining comes after static generation we need\n  // to ensure this value is assigned to process env so it\n  // can still be accessed\n  const staticEnv = getStaticEnv(config)\n  for (const key in staticEnv) {\n    const innerKey = key.split('.').pop() || ''\n    if (!process.env[innerKey]) {\n      process.env[innerKey] = staticEnv[key] || ''\n    }\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Readable } from 'stream'\nimport { PassThrough } from 'stream'\n\nexport function requestToBodyStream(\n  context: { ReadableStream: typeof ReadableStream },\n  KUint8Array: typeof Uint8Array,\n  stream: Readable\n) {\n  return new context.ReadableStream({\n    start: async (controller) => {\n      for await (const chunk of stream) {\n        controller.enqueue(new KUint8Array(chunk))\n      }\n      controller.close()\n    },\n  })\n}\n\nfunction replaceRequestBody<T extends IncomingMessage>(\n  base: T,\n  stream: Readable\n): T {\n  for (const key in stream) {\n    let v = stream[key as keyof Readable] as any\n    if (typeof v === 'function') {\n      v = v.bind(base)\n    }\n    base[key as keyof T] = v\n  }\n\n  return base\n}\n\nexport interface CloneableBody {\n  finalize(): Promise<void>\n  cloneBodyStream(): Readable\n}\n\nexport function getCloneableBody<T extends IncomingMessage>(\n  readable: T\n): CloneableBody {\n  let buffered: Readable | null = null\n\n  const endPromise = new Promise<void | { error?: unknown }>(\n    (resolve, reject) => {\n      readable.on('end', resolve)\n      readable.on('error', reject)\n    }\n  ).catch((error) => {\n    return { error }\n  })\n\n  return {\n    /**\n     * Replaces the original request body if necessary.\n     * This is done because once we read the body from the original request,\n     * we can't read it again.\n     */\n    async finalize(): Promise<void> {\n      if (buffered) {\n        const res = await endPromise\n\n        if (res && typeof res === 'object' && res.error) {\n          throw res.error\n        }\n        replaceRequestBody(readable, buffered)\n        buffered = readable\n      }\n    },\n    /**\n     * Clones the body stream\n     * to pass into a middleware\n     */\n    cloneBodyStream() {\n      const input = buffered ?? readable\n      const p1 = new PassThrough()\n      const p2 = new PassThrough()\n      input.on('data', (chunk) => {\n        p1.push(chunk)\n        p2.push(chunk)\n      })\n      input.on('end', () => {\n        p1.push(null)\n        p2.push(null)\n      })\n      buffered = p2\n      return p1\n    },\n  }\n}\n"],"names":["Symbol","Object","Error","reportError","r","e","t","process","n","Array","console","s","URL","Buffer","RangeError","JSON","__dirname","p","o","Boolean","Date","encodeURIComponent","Map","decodeURIComponent","Number","__nccwpck_require__","TypeError","a","isNaN","isFinite","Math","NaN","i","arguments","Promise","setTimeout","clearTimeout","clearInterval","setInterval","u","RegExp","String","globalThis","AsyncLocalStorage","require","WebSocket","defineProperty","configurable","get","set","value","writable","global","crypto","webcrypto","enumerable","module","Set","c","webCrypto","LRUNode","constructor","key","data","size","prev","next","SentinelNode","LRUCache","maxSize","calculateSize","cache","totalSize","head","tail","addToHead","node","removeNode","moveToHead","removeTail","lastNode","warn","existing","newNode","delete","has","iterator","current","remove","currentSize","versions","startsWith","invalidSourceMap","isAnonymousFrameLikelyJSNative","methodName","url","length","regexNextStatic","reactVendoredRe","reactNodeModulesRe","nextInternalsRe","env","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","nextIndex","indexOf","formatter","open","input","string","bold","red","green","yellow","magenta","white","frameToString","sourceURL","line1","column1","fileLocation","sourceLocation","canParse","path","cwd","computeErrorName","error","name","prepareUnsourcemappedStackTrace","structuredStackTrace","stack","message","toString","shouldIgnoreListGeneratedFrame","file","includes","createUnsourcemappedFrame","frame","ignored","code","patchErrorInspectNodeJS","errorConstructor","inspectSymbol","for","prepareStackTrace","prototype","depth","inspectOptions","inspect","workUnitAsyncStorage","newError","sourceMapError","undefined","cause","parseAndSourceMap","unparsedStack","errorName","idx","lastIndexOf","slice","unsourcemappedStack","parseStack","distDir","__NEXT_DIST_DIR","split","map","line","join","frames","parse","res","exec","pathname","effectiveDistDir","concat","pop","search","lineNumber","column","sourceMapCache","sourceMappedFrames","sourceFrame","push","sourcemappedFrame","getSourcemappedFrameIfPossible","applicableSourceMap","sourceMap","sourceMapConsumer","sourceMapPayload","codeFrame","sourceMapCacheEntry","maybeSourceMapPayload","nativeFindSourceMap","payload","SyncSourceMapConsumer","sourcePosition","originalPositionFor","findApplicableSourceMapPayload","line0","column0","sections","left","right","result","middle","section","offset","ignoreList","sources","source","sourceIndex","originalFrame","colors","sourceContent","sourceContentFor","test","codeFrameColumns","forceColor","ignoreListAnonymousStackFramesIfSandwichedGeneric","isAnonymousFrame","isIgnoredFrame","getMethodName","ignoreFrame","currentFrame","previousFrameIsIgnored","ignoreSandwich","j","nextFrame","sourceMappedStack","hasOwnProperty","call","originalCustomInspect","WeakMap","InvariantError","options","endsWith","abortOnSynchronousPlatformIOAccess","route","expression","errorWithStack","prerenderStore","dynamicTracking","createPrerenderInterruptedError","digest","controller","abort","dynamicAccesses","isDebugDynamicAccesses","syncDynamicErrorWithStack","React","isDynamicPostponeReason","reason","io","type","workUnitStore","workStore","workAsyncStorage","prerenderSignal","signal","aborted","prerenderPhase","requestStore","_random","random","apply","bind","createDate","originalConstructor","originalNow","properties","getOwnPropertyDescriptors","now","Reflect","construct","newConstructor","defineProperties","getRandomValuesExpression","_getRandomValues","getRandomValues","_randomUUID","randomUUID","nodeCrypto","randomUUIDExpression","randomBytesExpression","_randomBytes","randomBytes","randomFillSyncExpression","_randomFillSync","randomFillSync","_randomInt","randomInt","generatePrimeSyncExpression","_generatePrimeSync","generatePrimeSync","generateKeyPairSyncExpression","_generateKeyPairSync","generateKeyPairSync","generateKeySyncExpression","_generateKeySync","generateKeySync","mod","originalRequire","resolveFilename","_resolveFilename","resolve","__non_webpack_require__","hookPropertyMap","addHookAliases","aliases","entries","dirname","originalResolveFilename","requestMap","request","parent","isMain","hookResolved","basename","SP","performance","every","method","DecodeError","NormalizeError","PageNotFoundError","page","MissingStaticPage","PARAM_SEPARATOR","hasAdjacentParameterIssues","normalizeAdjacentParameters","normalized","safePathToRegexp","keys","pathToRegexp","needsNormalization","routeToUse","normalizedRoute","retryError","safeCompile","compile","getRouteMatcher","matcherFn","re","groups","routeMatch","decode","param","params","group","match","pos","repeat","entry","cleaned","isArray","item","NEXT_REQUEST_META","getRequestMeta","req","meta","addRequestMeta","removeRequestMeta","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","PAGES_MANIFEST","APP_PATHS_MANIFEST","SERVER_DIRECTORY","BLOCKED_PAGES","STATIC_STATUS_PAGES","findDir","dir","curDir","fs","ReflectAdapter","target","prop","receiver","deleteProperty","ReadonlyHeadersError","callable","HeadersAdapter","Headers","headers","Proxy","lowercased","toLowerCase","original","find","seal","merge","from","append","forEach","callbackfn","thisArg","values","HTML_CONTENT_TYPE_HEADER","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_REVALIDATED_TAGS_HEADER","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","SYMBOL_CLEARED_COOKIES","RedirectStatusCode","getCookieParser","cookie","parseCookieFn","BaseNextRequest","body","cookies","_cookies","BaseNextResponse","destination","redirect","statusCode","setHeader","NodeNextRequest","_req","toUpperCase","fetchMetrics","streaming","originalRequest","stream","ReadableStream","on","chunk","enqueue","Uint8Array","err","NodeNextResponse","originalResponse","_res","textBody","sent","finished","headersSent","statusMessage","removeHeader","getHeaderValues","getHeader","hasHeader","getHeaders","appendHeader","currentValues","send","onClose","callback","sendRenderResult","generateEtags","poweredByHeader","cacheControl","contentType","getCacheControlHeader","revalidate","expire","swrHeader","isDynamic","toUnchunkedString","etag","generateETag","weak","prefix","fnv1a52","len","t0","v0","t1","v1","t2","v2","t3","v3","charCodeAt","fresh","byteLength","pipeToNodeResponse","searchParamsToUrlQuery","searchParams","query","stringifyUrlQueryParam","parseUrl","parseRelativeUrl","base","parseQuery","globalBase","resolvedBase","hash","href","origin","slashes","parsedURL","hostname","port","protocol","prefixes","wait","ready","info","event","trace","LOGGING_METHOD","log","prefixedLog","prefixType","shift","consoleMethod","bootstrap","warnOnceCache","warnOnce","v4Seg","v4Str","v6Seg","IPv6Reg","ensureLeadingSlash","normalizeAppPath","reduce","segment","segments","normalizeRscURL","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","m","TEST_ROUTE","TEST_STRICT_ROUTE","isDynamicRoute","strict","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","voidCatch","encoder","TextEncoder","streamFromString","encode","streamFromBuffer","streamToString","decoder","TextDecoder","fatal","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","skipWhitespace","charAt","toNodeOutgoingHttpHeaders","nodeHeaders","validateURL","normalizeNextQueryParam","removeTrailingSlash","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","suffix","pathHasPrefix","getHostname","parsed","host","normalizeLocalePath","locales","detectedLocale","lowercasedLocales","locale","removePathPrefix","withoutPrefix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","detectDomainLocale","domainItems","domain","defaultLocale","some","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","password","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","INTERNALS","NextRequest","Request","init","duplex","nextUrl","RequestCookies","bodyUsed","credentials","fromEntries","integrity","keepalive","mode","referrer","referrerPolicy","ua","ResponseAbortedName","ResponseAborted","DetachedPromise","reject","promise","rej","BaseServerSpan","LoadComponentsSpan","NextNodeServerSpan","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","readable","waitUntilForEnd","errored","destroyed","createAbortController","response","AbortController","once","writableFinished","writer","createWriterFromResponse","started","drained","onDrain","off","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","reset","measure","flushHeaders","getTracer","spanName","ok","flush","destroy","pipeTo","RenderResult","EMPTY","metadata","fromStatic","waitUntil","assignMetadata","assign","isNull","isBuffer","chainStreams","streams","TransformStream","preventClose","nextStream","then","lastStream","catch","coerce","unshift","normalizePathSep","denormalizePagePath","_page","getPathMatch","regexp","delimiter","sensitive","matcher","regexpToFunction","regexModifier","flags","removeUnnamedParams","reHasRegExp","reReplaceRegExp","escapeStringRegexp","PARAMETER_PATTERN","parseMatchedParameter","optional","getRouteRegex","includeSuffix","includePrefix","excludeOptionalTrailingSlash","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","unescapeSegments","matchHas","missing","hasMatch","hasItem","getSafeParamName","paramName","newParamName","charCode","matches","groupKey","compileNonPath","validate","decodeQueryPathParameter","slashedProtocols","dynamicParamTypesSchema","segmentSchema","flightRouterStateSchema","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_URL","FLIGHT_HEADERS","NEXT_RSC_UNION_QUERY","isInterceptionRouteRewrite","filterInternalQuery","paramKeys","isNextQueryPrefix","isNextInterceptionMarkerPrefix","getPreviouslyRevalidatedTags","previewModeId","isError","getProperError","isPlainObject","getObjectClassLabel","getPrototypeOf","safeStringify","obj","seen","WeakSet","stringify","_key","add","LocaleRouteNormalizer","provider","normalize","UrlNode","insert","urlPath","_insert","filter","smoosh","_smoosh","childrenPaths","children","sort","slugName","splice","restSlugName","optionalRestSlugName","routes","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","slug","RouteMatcher","definition","dynamic","identity","LocaleRouteMatcher","DefaultRouteMatcherManager","compilationID","providers","waitTillReady","waitTillReadyPromise","reload","matchers","providersMatchers","all","duplicates","providerMatchers","duplicated","duplicate","others","previousMatchers","cachedMatcher","static","reference","pathnames","indexes","sorted","getSortedRoutes","normalizedPages","root","pagePath","sortedDynamicMatchers","dynamicMatches","lastCompilationID","matchAll","inferredFromDefault","skipDynamic","Normalizers","normalizers","normalizer","PrefixingNormalizer","normalizePagePath","posix","resolvedPage","UnderscoreNormalizer","AppBundlePathNormalizer","AppFilenameNormalizer","manifestFilename","isAppRouteRoute","STATIC_METADATA_IMAGES","icon","filename","extensions","apple","openGraph","twitter","getExtensionRegexString","staticExtensions","dynamicExtensions","wrapNormalizerFn","fn","AppPathnameNormalizer","AppNormalizers","bundlePath","RouteKind","AppPageRouteMatcher","CachedRouteMatcherProvider","loader","cached","load","compare","transform","ManifestRouteMatcherProvider","manifestName","manifestLoader","AppPageRouteMatcherProvider","manifest","pages","allAppPaths","appPaths","kind","AppRouteRouteMatcher","AppRouteRouteMatcherProvider","isAPIRoute","PagesAPIRouteMatcher","PagesAPILocaleRouteMatcher","PagesBundlePathNormalizer","PagesFilenameNormalizer","PagesNormalizers","PagesAPIRouteMatcherProvider","PagesRouteMatcher","PagesLocaleRouteMatcher","PagesRouteMatcherProvider","ServerManifestLoader","getter","I18NProvider","config","lowerCaseLocales","lowerCaseDomains","http","fromRequest","analysis","sendResponse","status","statusText","headersWithMultipleValuesAllowed","isHeaderPresent","SuffixPathnameNormalizer","matched","RSCPathnameNormalizer","PrefetchRSCPathnameNormalizer","PrefixPathnameNormalizer","NextDataPathnameNormalizer","buildID","toRoute","NEXT_REQUEST_CONTEXT_SYMBOL","REDIRECTS","handleMiddlewareField","NextResponse","Response","cookiesProxy","ResponseCookies","args","newHeaders","getAll","stringifyCookie","redirected","json","initObj","rewrite","debug","NEXT_PRIVATE_DEBUG_CACHE","handlersSymbol","handlersMapSymbol","handlersSetSymbol","NextRequestHint","sourcePage","respondWith","PATTERN","SegmentPrefixRSCPathnameNormalizer","extract","originalPathname","segmentPath","WrappedBuildError","innerError","Server","getServerComponentsHmrCache","experimental","serverComponentsHmrCache","__serverComponentsHmrCache","handleRSCRequest","parsedUrl","segmentPrefetchRSC","prefetchRSC","rsc","header","segmentPrefetchRSCRequest","formatUrl","handleNextDataRequest","getMiddleware","matchNextDataPathname","render404","lastParam","getRouteFromAssetPath","assetPath","ext","localePathResult","handleNextImageRequest","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","normalizeAndAttachMetadata","enabledDirectories","prepared","preparedPromise","customErrorNo404Warn","execOnce","used","Log","quiet","conf","dev","minimalMode","experimentalTestProxy","serverOptions","loadEnvConfig","fetchHostname","formatHostname","isIPv6","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","localeNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","getBuildId","NEXT_PRIVATE_MINIMAL_MODE","getEnabledDirectories","isAppPPREnabled","app","checkIsAppPPREnabled","ppr","isAppSegmentPrefetchEnabled","clientSegmentCache","nextFontManifest","getNextFontManifest","NEXT_DEPLOYMENT_ID","deploymentId","renderOpts","supportsDynamicResponse","canonicalBase","amp","previewProps","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","images","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","serverComponents","cacheLifeProfiles","cacheLife","enableTainting","taint","crossOrigin","largePageDataBytes","runtimeConfig","isExperimentalCompile","htmlLimitedBots","expireTime","staleTimes","clientTraceMetadata","cacheComponents","clientParamParsing","dynamicOnHover","inlineCss","authInterrupts","onInstrumentationRequestError","instrumentationOnRequestError","reactMaxHeadersLength","devtoolSegmentExplorer","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","interceptionRoutePatterns","getinterceptionRoutePatterns","getRouteMatchers","setAssetPrefix","responseCache","getResponseCache","ctx","instrumentation","onRequestError","handlerErr","logError","handleRequest","prepare","tracer","withPropagatedContext","SpanKind","attributes","span","handleRequestImpl","finally","isRSCRequest","setAttributes","setStatus","SpanStatusCode","setAttribute","rootSpanAttributes","getRootSpanAttributes","updateName","utils","middlewareValue","urlNoQuery","urlParts","cleanUrl","normalizeRepeatedSlashes","URLSearchParams","xForwardedProto","isHttps","socket","encrypted","remoteAddress","attachRequestMeta","parseUrlUtil","pathnameInfo","useMatchedPathHeader","matchedPath","fixMojibake","bytes","urlPathname","postponed","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","srcPathname","pageIsDynamic","paramsResult","hasValidParams","getServerUtils","rewrites","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","floor","hasInterceptionMarker","namedParameterizedRoute","namedRegex","handleRewrites","rewriteParams","fsPathname","checkRewrite","hasParams","stateHeader","getSelectedParams","currentTree","parallelRoute","isDynamicParameter","segmentValue","parseAndValidateFlightRouterState","state","assert","parsedDestination","destQuery","prepareDestination","destHostnameCompiler","newUrl","parseDestination","escaped","destHostname","destSearch","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","strOrArray","appendParamsToQuery","actualValue","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","fallback","normalizeQueryParams","routeParamKeys","normalizedKey","v","getParamsFromRouteMatches","routeMatchesHeader","routeMatches","keyName","normalizeDynamicRouteParams","ignoreMissingOptional","defaultValue","isDefaultValue","defaultVal","val","normalizeCdnUrl","_parsedUrl","parseReqUrl","auth","urlObj","querystring","interpolateDynamicPath","paramValue","builtParam","replaceAll","getRoutesManifest","caseSensitiveRoutes","originQueryParams","pathnameBeforeRewrite","rewriteParamKeys","queryParams","didRewrite","matcherParams","curParamsResult","renderError","webServerConfig","incrementalCache","getIncrementalCache","requestHeaders","resetRequestCache","__incrementalCache","cacheHandlers","getCacheHandlers","cacheHandler","previouslyRevalidatedTags","receiveExpiredTags","invokePath","invokeStatus","invokeQuery","parsedMatchedPath","invokePathnameInfo","normalizeResult","bubble","run","NoFallbackError","getRequestHandlerWithMetadata","handler","getRequestHandler","loadInstrumentationModule","prepareImpl","normalizedPath","runImpl","pipe","partialContext","pipeImpl","botType","serveStreamingMetadata","shouldServeStreamingMetadata","userAgent","blockingMetadataUARegex","originalStatus","getStaticHTML","render","internalRender","renderImpl","getWaitUntil","builtinRequestContext","getBuiltinRequestContext","_globalThis","getInternalWaitUntil","customServer","hasPage","getBotType","renderToResponse","getStaticPaths","staticPaths","fallbackMode","parseFallbackField","fallbackField","dynamicRoutes","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","pathCouldBeIntercepted","resolvedPathname","setVaryHeader","isAppPath","baseVaryHeader","addedNextUrlToVary","components","prerenderManifest","pathsResults","routeModule","isErrorPathname","is404Page","is500Page","hasServerProps","getServerSideProps","isPossibleServerAction","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","isNextDataRequest","couldSupportPPR","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","minimalPostponed","isRoutePPREnabled","renderingMode","Component","isBotRequest","isDomBotUA","isSupportedDocument","Document","getInitialProps","NEXT_BUILTIN_DOCUMENT","isDev","prerenderedRoutes","smallestFallbackRouteParams","fallbackRouteParams","parsedInitUrl","initPathname","ampValidator","ComponentMod","stripLocale","splitPath","getOriginalAppPaths","originalAppPath","renderPageComponent","bubbleNoFallback","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","setRootSpanAttribute","isNoFallbackError","renderToResponseImpl","initUrl","rewroteUrl","renderErrorToResponse","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","statusPage","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","pagePathCache","getMaybePagePath","cacheKey","serverBuildPath","loadManifest","checkManifest","curPath","manifestNoLocales","getPagePath","requirePage","promises","interopDefault","default","ms","SERVER_ACTION_MANIFESTS_SINGLETON","loadManifestWithRetries","manifestPath","attempts","tryLoadManifestWithRetries","evalManifestWithRetries","evalManifest","tryLoadClientReferenceManifest","entryName","context","__RSC_MANIFEST","loadComponentsImpl","reactLoadableManifestPath","DocumentMod","AppMod","manifestLoadAttempts","hasClientManifest","isStaticMetadataRoute","isMetadataRouteFile","appDirRelativePath","pageExtensions","strictlyMatchExtensions","trailingMatcher","suffixMatcher","metadataRouteFilesRegex","normalizedAppDirRelativePath","buildManifest","reactLoadableManifest","dynamicCssManifest","clientReferenceManifest","serverActionsManifest","subresourceIntegrityManifest","SERVER_REFERENCE_MANIFEST","SUBRESOURCE_INTEGRITY_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","clientReferenceManifestsPerPage","createServerModuleMap","_","id","pageName","workerEntry","workers","at","moduleId","async","chunks","App","pageConfig","loadComponents","wrap","getMiddlewareRouteMatcher","Batcher","cacheKeyFn","schedulerFn","pending","create","batch","scheduleOnNextTick","cb","nextTick","CachedRouteKind","IncrementalCacheKind","fromResponseCacheEntry","cacheEntry","html","pageData","rscData","segmentData","toResponseCacheEntry","isMiss","isStale","ResponseCache","minimal_mode","batcher","isOnDemandRevalidate","responseGenerator","hasResolved","previousCacheEntry","isFallback","prom","previousCacheItem","expiresAt","routeKindToIncrementalCacheKind","routeKind","resolved","cachedResponse","isPrefetch","isRevalidating","resolveValue","newRevalidate","min","max","newExpire","MultiFileWriter","tasks","findOrCreateTask","directory","task","mkdir","filePath","writeFile","flatMap","FileSystemCache","flushToDisk","serverDistDir","revalidatedTags","maxMemoryCacheSize","memoryCache","getMemoryCache","revalidateTag","tags","tag","tagsManifest","getFilePath","fileData","readFile","mtime","stat","lastModified","getTime","fetchIdx","fetchUrl","parsedData","storedTags","fetchCache","maybeSegmentData","segmentPaths","segmentsDir","segmentDataFilePath","cacheTags","tagsHeader","combinedTags","softTags","htmlPath","buffer","IncrementalCache","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","hasCustomCacheHandler","cacheHandlersSymbol","globalCacheHandler","FetchCache","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","cacheControls","SharedCacheControls","_requestHeaders","calculateRevalidate","fromTime","timeOrigin","initialRevalidateSeconds","_getPathname","lock","generateCacheKey","bodyChunks","_ogBody","getReader","readableBody","total","arr","arrayBuffer","formData","text","blob","Blob","cacheString","createHash","update","cacheData","revalidateAfter","resumeDataCache","getRenderResumeDataCache","memoryCacheData","fetch","pendingRevalidatedTags","age","notFoundRoutes","prerenderResumeDataCache","getPrerenderResumeDataCache","itemSize","isImplicitBuildTimeCache","warningText","nodeFs","existsSync","readFileSync","f","d","recursive","MockedRequest","Stream","httpVersion","httpVersionMajor","httpVersionMinor","_target","bodyReadable","emit","headersDistinct","_read","connection","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","MockedResponse","buffers","fromNodeOutgoingHttpHeaders","headPromise","headPromiseResolve","hasStreamed","resWriter","isSent","_implicitHeader","_write","_encoding","writeHead","getHeaderNames","strictContentLength","writeEarlyHints","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","formatDynamicImportPath","absoluteFilePath","pathToFileURL","AsyncCallbackSet","callbacks","runAll","allSettled","REACT_POSTPONE_TYPE","isPostpone","$$typeof","NodeModuleLoader","RouterServerContextSymbol","routerServerGlobal","dynamicImportEsmDefault","MiddlewareMatcherCache","NextNodeServer","BaseServer","cleanupListeners","relativeProjectDir","relative","edgeFunctionsPage","getEdgeFunctionsPages","runEdgeFunction","apiError","routePath","routerKind","routeType","revalidateReason","handleApiRequest","isMiddlewareInvoke","handleFinished","normalizedPathname","maybeDecodedPathname","bubblingResult","ensureMiddleware","runMiddleware","BubbledError","__NEXT_OPTIMIZE_CSS","__NEXT_SCRIPT_WORKERS","useSkewCookie","appDocumentPreloading","regex","setHttpClientAndAgentOptions","__NEXT_HTTP_AGENT","__NEXT_HTTP_AGENT_OPTIONS","httpAgentOptions","HttpAgent","__NEXT_HTTPS_AGENT","HttpsAgent","middlewareManifestPath","populateStaticEnv","staticEnv","getNextPublicEnvironmentVariables","defineEnv","getNextConfigEnv","isPrivateKey","hasNextRuntimeKey","configFileName","innerKey","removeUncaughtErrorAndRejectionListeners","removeAllListeners","unstable_preloadEntries","loadCustomCacheHandlers","patchFetch","webpackRequire","__next_app__","handleUpgrade","getInstrumentationModule","runInstrumentationHookIfAvailable","ensureInstrumentationRegistered","forceReload","silent","initializeCacheHandlers","DefaultCache","DefaultCacheHandler","RemoteCache","setCacheHandler","CacheHandler","getCacheFilesystem","cacheMaxMemorySize","routesManifest","buildIdFile","trim","runApi","renderHTML","renderHTMLImpl","imageOptimizer","edgeFunctionsPages","findPageComponentsImpl","_url","pagePaths","NEXT_FONT_MANIFEST","logErrorWithOriginalStack","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","makeRequestHandler","revalidateHeaders","mocked","createRequestResponseMocks","unstable_onlyGenerated","internal","is404","getMiddlewareManifest","middlewareModule","loadNodeMiddleware","originalSource","getMiddlewareMatcher","stored","functions","getEdgeFunctionInfo","foundPage","pageInfo","files","wasm","binding","assets","hasMiddleware","nodeMiddleware","ensureEdgeFunction","_params","_cachedPreviewManifest","isUpgradeReq","trustHostHeader","getCloneableBody","buffered","endPromise","finalize","replaceRequestBody","cloneBodyStream","p1","PassThrough","p2","_serverDistDir","onServerClose","listener","internalWaitUntil","createInternalWaitUntil"],"mappings":"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AG,CAACuhB,0BACb7hB,QAD+C,kBAE/CujB,EAAQrgB,QAAQ;gBACtB;YACF;QAqDF;QC9FO,IAAMghB,KAAsB,iBAC5B;QAAA,MAAMC,WAAwBhqB;Y,Y,G,C,C;gBAA9B,KAAA,IAAA,IAAA,IAAA,CACW0I,IAAI,GAAGqhB;Y;QACzB;QCPO,MAAME;YAKXtmB,aAAc;gBACZ,IAAIgQ,GACAuW,CAGJ;gBAAA,IAAI,CAACC,OAAO,GAAG,IAAInoB,QAAW,CAACqJ,GAAK+e;oBAClCzW,IAAUtI,GACV6e,IAASE;gBACX,IAIA,IAAI,CAACzW,OAAO,GAAGA,GACf,IAAI,CAACuW,MAAM,GAAGA;YAChB;QACF;QChBA,IAAKG,KAAcA,SAAdA,CAAc;Y,O,E,a,G,4B,E,G,G,kB,E,I,G,mB,E,a,G,4B,E,M,G,qB,E,8B,G,6C,E,gB,G,+B,E,Y,G,2B,E,W,G,0B,E,qB,G,oC,E,iB,G,gC,E,S,G,wBAAdA;Q,EAAAA,MAAcA,CAAAA,IAedC,KAAkBA,SAAlBA,CAAkB;Y,O,E,0B,G,6C,E,c,G,iCAAlBA;Q,EAAAA,MAAkBA,CAAAA,IAYlBC,KAAkBA,SAAlBA,CAAkB;Y,O,E,W,G,8B,E,U,G,6B,E,mB,G,sC,E,sB,G,yC,E,qB,G,wC,E,oB,G,uC,E,sB,G,yC,E,oB,G,uC,E,mB,G,4C,E,gB,G,mC,E,Y,G,+B,E,M,G,yB,E,M,G,yB,E,U,G,6B,E,c,G,iC,E,W,G,8B,E,iB,G,oC,E,kB,G,qC,E,e,G,kC,E,0B,G,6C,E,iB,G,oC,E,Y,G,+B,E,W,G,8B,E,iB,G,oC,E,S,G,4B,E,a,G,gC,E,K,G,S,E,U,G,c,E,W,G,e,E,a,G,iBAAlBA;Q,EAAAA,MAAkBA,CAAAA;QClCvB,IAAIC,KAA2B,GAC3BC,KAA2B,GAC3BC,KAA2B;QCMxB,SAASC,GAAaxqB,CAAM;YACjC,OAAOA,CAAAA,QAAAA,IAAAA,KAAAA,IAAAA,EAAGuI,IAAG,MAAM,gBAAgBvI,CAAAA,QAAAA,IAAAA,KAAAA,IAAAA,EAAGuI,IAAG,MAAMqhB;QACjD;QA6GO,eAAe3J,GACpBwK,CAAoC,EACpCvf,CAAmB,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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"debugId":null}}]
}