{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Desktop/New folder/19-04-2025/New folder (7)/backend/ecom/client/ecomfurniture/src/middleware.js"],"sourcesContent":["  import { NextResponse } from 'next/server';\r\n  import Cookies from \"js-cookie\"\r\n  export function middleware(request) {\r\n\r\n       if( ! request.cookies.get('USER') ){\r\n       \r\n            return NextResponse.redirect(new URL('/login', request.url));\r\n       }\r\n\r\n       else{\r\n            if (request.nextUrl.pathname.startsWith('/login')) {\r\n                 return NextResponse.redirect(new URL('/my-dashboard', request.url));\r\n            } \r\n       }\r\n      // Perform logic here\r\n      // For example, redirecting based on a condition\r\n    //   if (request.nextUrl.pathname.startsWith('/old-path')) {\r\n    //     return NextResponse.redirect(new URL('/new-path', request.url));\r\n    //   }\r\n\r\n      // Continue to the next handler if no action is taken\r\n      return NextResponse.next();\r\n    }\r\n\r\n     export const config = {\r\n      matcher: ['/my-dashboard','/wishlist'], // Apply middleware to /dashboard and /admin routes\r\n    };"],"names":[],"mappings":";;;;;;AAAE;AAAA;AACA;;;AACO,SAAS,WAAW,OAAO;IAE7B,IAAI,CAAE,QAAQ,OAAO,CAAC,GAAG,CAAC,SAAS;QAE9B,OAAO,oTAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC/D,OAEI;QACC,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW;YAC9C,OAAO,oTAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;QACtE;IACL;IACD,qBAAqB;IACrB,gDAAgD;IAClD,4DAA4D;IAC5D,uEAAuE;IACvE,MAAM;IAEJ,qDAAqD;IACrD,OAAO,oTAAY,CAAC,IAAI;AAC1B;AAEQ,MAAM,SAAS;IACrB,SAAS;QAAC;QAAgB;KAAY;AACxC"}}]
}