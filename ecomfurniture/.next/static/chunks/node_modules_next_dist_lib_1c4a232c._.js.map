{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/non-nullable.ts"],"sourcesContent":["export function nonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n"],"names":["nonNullable","value","undefined"],"mappings":";;;+BAAgBA,eAAAA;;;eAAAA;;;AAAT,SAASA,YAAeC,KAAQ;IACrC,OAAOA,UAAU,QAAQA,UAAUC;AACrC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/meta.tsx"],"sourcesContent":["import React from 'react'\nimport { nonNullable } from '../../non-nullable'\n\nexport function Meta({\n  name,\n  property,\n  content,\n  media,\n}: {\n  name?: string\n  property?: string\n  media?: string\n  content: string | number | URL | null | undefined\n}): React.ReactElement | null {\n  if (typeof content !== 'undefined' && content !== null && content !== '') {\n    return (\n      <meta\n        {...(name ? { name } : { property })}\n        {...(media ? { media } : undefined)}\n        content={typeof content === 'string' ? content : content.toString()}\n      />\n    )\n  }\n  return null\n}\n\nexport function MetaFilter<T extends {} | {}[]>(\n  items: (T | null)[]\n): NonNullable<T>[] {\n  const acc: NonNullable<T>[] = []\n  for (const item of items) {\n    if (Array.isArray(item)) {\n      acc.push(...item.filter(nonNullable))\n    } else if (nonNullable(item)) {\n      acc.push(item)\n    }\n  }\n  return acc\n}\n\ntype ExtendMetaContent = Record<\n  string,\n  undefined | string | URL | number | boolean | null | undefined\n>\ntype MultiMetaContent =\n  | (ExtendMetaContent | string | URL | number)[]\n  | null\n  | undefined\n\nfunction camelToSnake(camelCaseStr: string) {\n  return camelCaseStr.replace(/([A-Z])/g, function (match) {\n    return '_' + match.toLowerCase()\n  })\n}\n\nconst aliasPropPrefixes = new Set([\n  'og:image',\n  'twitter:image',\n  'og:video',\n  'og:audio',\n])\nfunction getMetaKey(prefix: string, key: string) {\n  // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n  // to be more compatible as it's a more common format.\n  // `og:video` & `og:audio` do not have a `:url` suffix alias\n  if (aliasPropPrefixes.has(prefix) && key === 'url') {\n    return prefix\n  }\n  if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n    key = camelToSnake(key)\n  }\n  return prefix + ':' + key\n}\n\nfunction ExtendMeta({\n  content,\n  namePrefix,\n  propertyPrefix,\n}: {\n  content?: ExtendMetaContent\n  namePrefix?: string\n  propertyPrefix?: string\n}) {\n  if (!content) return null\n  return MetaFilter(\n    Object.entries(content).map(([k, v]) => {\n      return typeof v === 'undefined'\n        ? null\n        : Meta({\n            ...(propertyPrefix && { property: getMetaKey(propertyPrefix, k) }),\n            ...(namePrefix && { name: getMetaKey(namePrefix, k) }),\n            content: typeof v === 'string' ? v : v?.toString(),\n          })\n    })\n  )\n}\n\nexport function MultiMeta({\n  propertyPrefix,\n  namePrefix,\n  contents,\n}: {\n  propertyPrefix?: string\n  namePrefix?: string\n  contents?: MultiMetaContent | null\n}) {\n  if (typeof contents === 'undefined' || contents === null) {\n    return null\n  }\n\n  return MetaFilter(\n    contents.map((content) => {\n      if (\n        typeof content === 'string' ||\n        typeof content === 'number' ||\n        content instanceof URL\n      ) {\n        return Meta({\n          ...(propertyPrefix\n            ? { property: propertyPrefix }\n            : { name: namePrefix }),\n          content,\n        })\n      } else {\n        return ExtendMeta({\n          namePrefix,\n          propertyPrefix,\n          content,\n        })\n      }\n    })\n  )\n}\n"],"names":["Meta","MetaFilter","MultiMeta","name","property","content","media","meta","undefined","toString","items","acc","item","Array","isArray","push","filter","nonNullable","camelToSnake","camelCaseStr","replace","match","toLowerCase","aliasPropPrefixes","Set","getMetaKey","prefix","key","has","startsWith","ExtendMeta","namePrefix","propertyPrefix","Object","entries","map","k","v","contents","URL"],"mappings":";;;;;;;;;;;;;;;IAGgBA,IAAI,EAAA;eAAJA;;IAuBAC,UAAU,EAAA;eAAVA;;IAuEAC,SAAS,EAAA;eAATA;;;;8DAjGE;6BACU;;;;;;AAErB,SAASF,UAUf;UATCG,IAAI,EACJC,QAAQ,EACRC,OAAO,EACPC,KAAK,KAJc;IAWnB,IAAI,OAAOD,YAAY,eAAeA,YAAY,QAAQA,YAAY,IAAI;QACxE,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;YACE,GAAIJ,OAAO;gBAAEA;YAAK,IAAI;gBAAEC;YAAS,CAAC;YAClC,GAAIE,QAAQ;gBAAEA;YAAM,IAAIE,SAAS;YAClCH,SAAS,OAAOA,YAAY,WAAWA,UAAUA,QAAQI,QAAQ;;IAGvE;IACA,OAAO;AACT;AAEO,SAASR,WACdS,KAAmB;IAEnB,MAAMC,MAAwB,EAAE;IAChC,KAAK,MAAMC,QAAQF,MAAO;QACxB,IAAIG,MAAMC,OAAO,CAACF,OAAO;YACvBD,IAAII,IAAI,IAAIH,KAAKI,MAAM,CAACC,aAAAA,WAAW;QACrC,OAAO,IAAIA,CAAAA,GAAAA,aAAAA,WAAW,EAACL,OAAO;YAC5BD,IAAII,IAAI,CAACH;QACX;IACF;IACA,OAAOD;AACT;AAWA,SAASO,aAAaC,YAAoB;IACxC,OAAOA,aAAaC,OAAO,CAAC,YAAY,SAAUC,KAAK;QACrD,OAAO,MAAMA,MAAMC,WAAW;IAChC;AACF;AAEA,MAAMC,oBAAoB,IAAIC,IAAI;IAChC;IACA;IACA;IACA;CACD;AACD,SAASC,WAAWC,MAAc,EAAEC,GAAW;IAC7C,uFAAuF;IACvF,sDAAsD;IACtD,4DAA4D;IAC5D,IAAIJ,kBAAkBK,GAAG,CAACF,WAAWC,QAAQ,OAAO;QAClD,OAAOD;IACT;IACA,IAAIA,OAAOG,UAAU,CAAC,UAAUH,OAAOG,UAAU,CAAC,aAAa;QAC7DF,MAAMT,aAAaS;IACrB;IACA,OAAOD,SAAS,MAAMC;AACxB;AAEA,SAASG,gBAQR;UAPCzB,OAAO,EACP0B,UAAU,EACVC,cAAc,KAHI;IASlB,IAAI,CAAC3B,SAAS,OAAO;IACrB,OAAOJ,WACLgC,OAAOC,OAAO,CAAC7B,SAAS8B,GAAG,CAAC;YAAC,CAACC,GAAGC,EAAE;QACjC,OAAO,OAAOA,MAAM,cAChB,OACArC,KAAK;YACH,GAAIgC,kBAAkB;gBAAE5B,UAAUqB,WAAWO,gBAAgBI;YAAG,CAAC;YACjE,GAAIL,cAAc;gBAAE5B,MAAMsB,WAAWM,YAAYK;YAAG,CAAC;YACrD/B,SAAS,OAAOgC,MAAM,WAAWA,IAAIA,KAAAA,OAAAA,KAAAA,IAAAA,EAAG5B,QAAQ;QAClD;IACN;AAEJ;AAEO,SAASP,eAQf;UAPC8B,cAAc,EACdD,UAAU,EACVO,QAAQ,KAHgB;IASxB,IAAI,OAAOA,aAAa,eAAeA,aAAa,MAAM;QACxD,OAAO;IACT;IAEA,OAAOrC,WACLqC,SAASH,GAAG,CAAC,CAAC9B;QACZ,IACE,OAAOA,YAAY,YACnB,OAAOA,YAAY,YACnBA,mBAAmBkC,KACnB;YACA,OAAOvC,KAAK;gBACV,GAAIgC,iBACA;oBAAE5B,UAAU4B;gBAAe,IAC3B;oBAAE7B,MAAM4B;gBAAW,CAAC;gBACxB1B;YACF;QACF,OAAO;YACL,OAAOyB,WAAW;gBAChBC;gBACAC;gBACA3B;YACF;QACF;IACF;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/constants.ts"],"sourcesContent":["import type { ViewportLayout } from './types/extra-types'\nimport type { Icons } from './types/metadata-types'\n\nexport const ViewportMetaKeys: { [k in keyof ViewportLayout]: string } = {\n  width: 'width',\n  height: 'height',\n  initialScale: 'initial-scale',\n  minimumScale: 'minimum-scale',\n  maximumScale: 'maximum-scale',\n  viewportFit: 'viewport-fit',\n  userScalable: 'user-scalable',\n  interactiveWidget: 'interactive-widget',\n} as const\n\nexport const IconKeys: (keyof Icons)[] = ['icon', 'shortcut', 'apple', 'other']\n"],"names":["IconKeys","ViewportMetaKeys","width","height","initialScale","minimumScale","maximumScale","viewportFit","userScalable","interactiveWidget"],"mappings":";;;;;;;;;;;;;;IAcaA,QAAQ,EAAA;eAARA;;IAXAC,gBAAgB,EAAA;eAAhBA;;;AAAN,MAAMA,mBAA4D;IACvEC,OAAO;IACPC,QAAQ;IACRC,cAAc;IACdC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,mBAAmB;AACrB;AAEO,MAAMT,WAA4B;IAAC;IAAQ;IAAY;IAAS;CAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/utils.ts"],"sourcesContent":["function resolveArray<T>(value: T | T[]): T[] {\n  if (Array.isArray(value)) {\n    return value as any\n  }\n  return [value] as any\n}\n\nfunction resolveAsArrayOrUndefined<T>(\n  value: T | T[] | undefined | null\n): T extends undefined | null ? undefined : T[] {\n  if (typeof value === 'undefined' || value === null) {\n    return undefined as any\n  }\n  return resolveArray(value) as any\n}\n\nfunction getOrigin(url: string | URL): string | undefined {\n  let origin = undefined\n  if (typeof url === 'string') {\n    try {\n      url = new URL(url)\n      origin = url.origin\n    } catch {}\n  }\n  return origin\n}\n\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin }\n"],"names":["getOrigin","resolveArray","resolveAsArrayOrUndefined","value","Array","isArray","undefined","url","origin","URL"],"mappings":";;;;;;;;;;;;;;;IA2BkDA,SAAS,EAAA;eAATA;;IAAdC,YAAY,EAAA;eAAZA;;IAA3BC,yBAAyB,EAAA;eAAzBA;;;AA3BT,SAASD,aAAgBE,KAAc;IACrC,IAAIC,MAAMC,OAAO,CAACF,QAAQ;QACxB,OAAOA;IACT;IACA,OAAO;QAACA;KAAM;AAChB;AAEA,SAASD,0BACPC,KAAiC;IAEjC,IAAI,OAAOA,UAAU,eAAeA,UAAU,MAAM;QAClD,OAAOG;IACT;IACA,OAAOL,aAAaE;AACtB;AAEA,SAASH,UAAUO,GAAiB;IAClC,IAAIC,SAASF;IACb,IAAI,OAAOC,QAAQ,UAAU;QAC3B,IAAI;YACFA,MAAM,IAAIE,IAAIF;YACdC,SAASD,IAAIC,MAAM;QACrB,EAAE,UAAM,CAAC;IACX;IACA,OAAOA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/basic.tsx"],"sourcesContent":["import type {\n  ResolvedMetadata,\n  ResolvedViewport,\n  Viewport,\n} from '../types/metadata-interface'\nimport type { ViewportLayout } from '../types/extra-types'\n\nimport { Meta, MetaFilter, MultiMeta } from './meta'\nimport { ViewportMetaKeys } from '../constants'\nimport { getOrigin } from './utils'\n\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport: Viewport) {\n  let resolved: string | null = null\n\n  if (viewport && typeof viewport === 'object') {\n    resolved = ''\n    for (const viewportKey_ in ViewportMetaKeys) {\n      const viewportKey = viewportKey_ as keyof ViewportLayout\n      if (viewportKey in viewport) {\n        let value = viewport[viewportKey]\n        if (typeof value === 'boolean') {\n          value = value ? 'yes' : 'no'\n        } else if (!value && viewportKey === 'initialScale') {\n          value = undefined\n        }\n        if (value) {\n          if (resolved) resolved += ', '\n          resolved += `${ViewportMetaKeys[viewportKey]}=${value}`\n        }\n      }\n    }\n  }\n  return resolved\n}\n\nexport function ViewportMeta({ viewport }: { viewport: ResolvedViewport }) {\n  return MetaFilter([\n    <meta charSet=\"utf-8\" />,\n    Meta({ name: 'viewport', content: resolveViewportLayout(viewport) }),\n    ...(viewport.themeColor\n      ? viewport.themeColor.map((themeColor) =>\n          Meta({\n            name: 'theme-color',\n            content: themeColor.color,\n            media: themeColor.media,\n          })\n        )\n      : []),\n    Meta({ name: 'color-scheme', content: viewport.colorScheme }),\n  ])\n}\n\nexport function BasicMeta({ metadata }: { metadata: ResolvedMetadata }) {\n  const manifestOrigin = metadata.manifest\n    ? getOrigin(metadata.manifest)\n    : undefined\n\n  return MetaFilter([\n    metadata.title !== null && metadata.title.absolute ? (\n      <title>{metadata.title.absolute}</title>\n    ) : null,\n    Meta({ name: 'description', content: metadata.description }),\n    Meta({ name: 'application-name', content: metadata.applicationName }),\n    ...(metadata.authors\n      ? metadata.authors.map((author) => [\n          author.url ? (\n            <link rel=\"author\" href={author.url.toString()} />\n          ) : null,\n          Meta({ name: 'author', content: author.name }),\n        ])\n      : []),\n    metadata.manifest ? (\n      <link\n        rel=\"manifest\"\n        href={metadata.manifest.toString()}\n        // If it's same origin, and it's a preview deployment,\n        // including credentials for manifest request.\n        crossOrigin={\n          !manifestOrigin && process.env.VERCEL_ENV === 'preview'\n            ? 'use-credentials'\n            : undefined\n        }\n      />\n    ) : null,\n    Meta({ name: 'generator', content: metadata.generator }),\n    Meta({ name: 'keywords', content: metadata.keywords?.join(',') }),\n    Meta({ name: 'referrer', content: metadata.referrer }),\n    Meta({ name: 'creator', content: metadata.creator }),\n    Meta({ name: 'publisher', content: metadata.publisher }),\n    Meta({ name: 'robots', content: metadata.robots?.basic }),\n    Meta({ name: 'googlebot', content: metadata.robots?.googleBot }),\n    Meta({ name: 'abstract', content: metadata.abstract }),\n    ...(metadata.archives\n      ? metadata.archives.map((archive) => (\n          <link rel=\"archives\" href={archive} />\n        ))\n      : []),\n    ...(metadata.assets\n      ? metadata.assets.map((asset) => <link rel=\"assets\" href={asset} />)\n      : []),\n    ...(metadata.bookmarks\n      ? metadata.bookmarks.map((bookmark) => (\n          <link rel=\"bookmarks\" href={bookmark} />\n        ))\n      : []),\n    ...(metadata.pagination\n      ? [\n          metadata.pagination.previous ? (\n            <link rel=\"prev\" href={metadata.pagination.previous} />\n          ) : null,\n          metadata.pagination.next ? (\n            <link rel=\"next\" href={metadata.pagination.next} />\n          ) : null,\n        ]\n      : []),\n    Meta({ name: 'category', content: metadata.category }),\n    Meta({ name: 'classification', content: metadata.classification }),\n    ...(metadata.other\n      ? Object.entries(metadata.other).map(([name, content]) => {\n          if (Array.isArray(content)) {\n            return content.map((contentItem) =>\n              Meta({ name, content: contentItem })\n            )\n          } else {\n            return Meta({ name, content })\n          }\n        })\n      : []),\n  ])\n}\n\nexport function ItunesMeta({ itunes }: { itunes: ResolvedMetadata['itunes'] }) {\n  if (!itunes) return null\n  const { appId, appArgument } = itunes\n  let content = `app-id=${appId}`\n  if (appArgument) {\n    content += `, app-argument=${appArgument}`\n  }\n  return <meta name=\"apple-itunes-app\" content={content} />\n}\n\nexport function FacebookMeta({\n  facebook,\n}: {\n  facebook: ResolvedMetadata['facebook']\n}) {\n  if (!facebook) return null\n\n  const { appId, admins } = facebook\n\n  return MetaFilter([\n    appId ? <meta property=\"fb:app_id\" content={appId} /> : null,\n    ...(admins\n      ? admins.map((admin) => <meta property=\"fb:admins\" content={admin} />)\n      : []),\n  ])\n}\n\nexport function PinterestMeta({\n  pinterest,\n}: {\n  pinterest: ResolvedMetadata['pinterest']\n}) {\n  if (!pinterest || !pinterest.richPin) return null\n\n  const { richPin } = pinterest\n\n  return <meta property=\"pinterest-rich-pin\" content={richPin.toString()} />\n}\n\nconst formatDetectionKeys = [\n  'telephone',\n  'date',\n  'address',\n  'email',\n  'url',\n] as const\nexport function FormatDetectionMeta({\n  formatDetection,\n}: {\n  formatDetection: ResolvedMetadata['formatDetection']\n}) {\n  if (!formatDetection) return null\n  let content = ''\n  for (const key of formatDetectionKeys) {\n    if (key in formatDetection) {\n      if (content) content += ', '\n      content += `${key}=no`\n    }\n  }\n  return <meta name=\"format-detection\" content={content} />\n}\n\nexport function AppleWebAppMeta({\n  appleWebApp,\n}: {\n  appleWebApp: ResolvedMetadata['appleWebApp']\n}) {\n  if (!appleWebApp) return null\n\n  const { capable, title, startupImage, statusBarStyle } = appleWebApp\n\n  return MetaFilter([\n    capable ? Meta({ name: 'mobile-web-app-capable', content: 'yes' }) : null,\n    Meta({ name: 'apple-mobile-web-app-title', content: title }),\n    startupImage\n      ? startupImage.map((image) => (\n          <link\n            href={image.url}\n            media={image.media}\n            rel=\"apple-touch-startup-image\"\n          />\n        ))\n      : null,\n    statusBarStyle\n      ? Meta({\n          name: 'apple-mobile-web-app-status-bar-style',\n          content: statusBarStyle,\n        })\n      : null,\n  ])\n}\n\nexport function VerificationMeta({\n  verification,\n}: {\n  verification: ResolvedMetadata['verification']\n}) {\n  if (!verification) return null\n\n  return MetaFilter([\n    MultiMeta({\n      namePrefix: 'google-site-verification',\n      contents: verification.google,\n    }),\n    MultiMeta({ namePrefix: 'y_key', contents: verification.yahoo }),\n    MultiMeta({\n      namePrefix: 'yandex-verification',\n      contents: verification.yandex,\n    }),\n    MultiMeta({ namePrefix: 'me', contents: verification.me }),\n    ...(verification.other\n      ? Object.entries(verification.other).map(([key, value]) =>\n          MultiMeta({ namePrefix: key, contents: value })\n        )\n      : []),\n  ])\n}\n"],"names":["AppleWebAppMeta","BasicMeta","FacebookMeta","FormatDetectionMeta","ItunesMeta","PinterestMeta","VerificationMeta","ViewportMeta","resolveViewportLayout","viewport","resolved","viewportKey_","ViewportMetaKeys","viewportKey","value","undefined","MetaFilter","meta","charSet","Meta","name","content","themeColor","map","color","media","colorScheme","metadata","manifestOrigin","manifest","getOrigin","title","absolute","description","applicationName","authors","author","url","link","rel","href","toString","crossOrigin","process","env","VERCEL_ENV","generator","keywords","join","referrer","creator","publisher","robots","basic","googleBot","abstract","archives","archive","assets","asset","bookmarks","bookmark","pagination","previous","next","category","classification","other","Object","entries","Array","isArray","contentItem","itunes","appId","appArgument","facebook","admins","property","admin","pinterest","richPin","formatDetectionKeys","formatDetection","key","appleWebApp","capable","startupImage","statusBarStyle","image","verification","MultiMeta","namePrefix","contents","google","yahoo","yandex","me"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/alternate.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { AlternateLinkDescriptor } from '../types/alternative-urls-types'\n\nimport React from 'react'\nimport { MetaFilter } from './meta'\n\nfunction AlternateLink({\n  descriptor,\n  ...props\n}: {\n  descriptor: AlternateLinkDescriptor\n} & React.LinkHTMLAttributes<HTMLLinkElement>) {\n  if (!descriptor.url) return null\n  return (\n    <link\n      {...props}\n      {...(descriptor.title && { title: descriptor.title })}\n      href={descriptor.url.toString()}\n    />\n  )\n}\n\nexport function AlternatesMetadata({\n  alternates,\n}: {\n  alternates: ResolvedMetadata['alternates']\n}) {\n  if (!alternates) return null\n\n  const { canonical, languages, media, types } = alternates\n\n  return MetaFilter([\n    canonical\n      ? AlternateLink({ rel: 'canonical', descriptor: canonical })\n      : null,\n    languages\n      ? Object.entries(languages).flatMap(([locale, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', hrefLang: locale, descriptor })\n          )\n        )\n      : null,\n    media\n      ? Object.entries(media).flatMap(([mediaName, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', media: mediaName, descriptor })\n          )\n        )\n      : null,\n    types\n      ? Object.entries(types).flatMap(([type, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', type, descriptor })\n          )\n        )\n      : null,\n  ])\n}\n"],"names":["AlternatesMetadata","AlternateLink","descriptor","props","url","link","title","href","toString","alternates","canonical","languages","media","types","MetaFilter","rel","Object","entries","flatMap","locale","descriptors","map","hrefLang","mediaName","type"],"mappings":";;;+BAsBgBA,sBAAAA;;;eAAAA;;;;8DAnBE;sBACS;;;;;;AAE3B,SAASC;UACPC,UAAU,EACV,GAAGC,OAGwC,GALtB;IAMrB,IAAI,CAACD,WAAWE,GAAG,EAAE,OAAO;IAC5B,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACC,QAAAA;QACE,GAAGF,KAAK;QACR,GAAID,WAAWI,KAAK,IAAI;YAAEA,OAAOJ,WAAWI,KAAK;QAAC,CAAC;QACpDC,MAAML,WAAWE,GAAG,CAACI,QAAQ;;AAGnC;AAEO,SAASR,wBAIf;UAHCS,UAAU,KADuB;IAKjC,IAAI,CAACA,YAAY,OAAO;IAExB,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGJ;IAE/C,OAAOK,CAAAA,GAAAA,MAAAA,UAAU,EAAC;QAChBJ,YACIT,cAAc;YAAEc,KAAK;YAAab,YAAYQ;QAAU,KACxD;QACJC,YACIK,OAAOC,OAAO,CAACN,WAAWO,OAAO,CAAC;gBAAC,CAACC,QAAQC,YAAY;mBACtDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaO,UAAUH;oBAAQjB;gBAAW;aAGnE;QACJU,QACII,OAAOC,OAAO,CAACL,OAAOM,OAAO,CAAC;gBAAC,CAACK,WAAWH,YAAY;mBACrDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaH,OAAOW;oBAAWrB;gBAAW;aAGnE;QACJW,QACIG,OAAOC,OAAO,CAACJ,OAAOK,OAAO,CAAC;gBAAC,CAACM,MAAMJ,YAAY;mBAChDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaS;oBAAMtB;gBAAW;aAGvD;KACL;AACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/opengraph.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { TwitterAppDescriptor } from '../types/twitter-types'\n\nimport { Meta, MetaFilter, MultiMeta } from './meta'\n\nexport function OpenGraphMetadata({\n  openGraph,\n}: {\n  openGraph: ResolvedMetadata['openGraph']\n}) {\n  if (!openGraph) {\n    return null\n  }\n\n  let typedOpenGraph\n  if ('type' in openGraph) {\n    const openGraphType = openGraph.type\n    switch (openGraphType) {\n      case 'website':\n        typedOpenGraph = [Meta({ property: 'og:type', content: 'website' })]\n        break\n      case 'article':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'article' }),\n          Meta({\n            property: 'article:published_time',\n            content: openGraph.publishedTime?.toString(),\n          }),\n          Meta({\n            property: 'article:modified_time',\n            content: openGraph.modifiedTime?.toString(),\n          }),\n          Meta({\n            property: 'article:expiration_time',\n            content: openGraph.expirationTime?.toString(),\n          }),\n          MultiMeta({\n            propertyPrefix: 'article:author',\n            contents: openGraph.authors,\n          }),\n          Meta({ property: 'article:section', content: openGraph.section }),\n          MultiMeta({\n            propertyPrefix: 'article:tag',\n            contents: openGraph.tags,\n          }),\n        ]\n        break\n      case 'book':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'book' }),\n          Meta({ property: 'book:isbn', content: openGraph.isbn }),\n          Meta({\n            property: 'book:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({\n            propertyPrefix: 'book:author',\n            contents: openGraph.authors,\n          }),\n          MultiMeta({ propertyPrefix: 'book:tag', contents: openGraph.tags }),\n        ]\n        break\n      case 'profile':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'profile' }),\n          Meta({\n            property: 'profile:first_name',\n            content: openGraph.firstName,\n          }),\n          Meta({ property: 'profile:last_name', content: openGraph.lastName }),\n          Meta({ property: 'profile:username', content: openGraph.username }),\n          Meta({ property: 'profile:gender', content: openGraph.gender }),\n        ]\n        break\n      case 'music.song':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.song' }),\n          Meta({\n            property: 'music:duration',\n            content: openGraph.duration?.toString(),\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:album',\n            contents: openGraph.albums,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:musician',\n            contents: openGraph.musicians,\n          }),\n        ]\n        break\n      case 'music.album':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.album' }),\n          MultiMeta({\n            propertyPrefix: 'music:song',\n            contents: openGraph.songs,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:musician',\n            contents: openGraph.musicians,\n          }),\n          Meta({\n            property: 'music:release_date',\n            content: openGraph.releaseDate,\n          }),\n        ]\n        break\n      case 'music.playlist':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.playlist' }),\n          MultiMeta({\n            propertyPrefix: 'music:song',\n            contents: openGraph.songs,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:creator',\n            contents: openGraph.creators,\n          }),\n        ]\n        break\n      case 'music.radio_station':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.radio_station' }),\n          MultiMeta({\n            propertyPrefix: 'music:creator',\n            contents: openGraph.creators,\n          }),\n        ]\n        break\n\n      case 'video.movie':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.movie' }),\n          MultiMeta({\n            propertyPrefix: 'video:actor',\n            contents: openGraph.actors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:director',\n            contents: openGraph.directors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:writer',\n            contents: openGraph.writers,\n          }),\n          Meta({ property: 'video:duration', content: openGraph.duration }),\n          Meta({\n            property: 'video:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({ propertyPrefix: 'video:tag', contents: openGraph.tags }),\n        ]\n        break\n      case 'video.episode':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.episode' }),\n          MultiMeta({\n            propertyPrefix: 'video:actor',\n            contents: openGraph.actors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:director',\n            contents: openGraph.directors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:writer',\n            contents: openGraph.writers,\n          }),\n          Meta({ property: 'video:duration', content: openGraph.duration }),\n          Meta({\n            property: 'video:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({ propertyPrefix: 'video:tag', contents: openGraph.tags }),\n          Meta({ property: 'video:series', content: openGraph.series }),\n        ]\n        break\n      case 'video.tv_show':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.tv_show' }),\n        ]\n        break\n      case 'video.other':\n        typedOpenGraph = [Meta({ property: 'og:type', content: 'video.other' })]\n        break\n\n      default:\n        const _exhaustiveCheck: never = openGraphType\n        throw new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`)\n    }\n  }\n\n  return MetaFilter([\n    Meta({ property: 'og:determiner', content: openGraph.determiner }),\n    Meta({ property: 'og:title', content: openGraph.title?.absolute }),\n    Meta({ property: 'og:description', content: openGraph.description }),\n    Meta({ property: 'og:url', content: openGraph.url?.toString() }),\n    Meta({ property: 'og:site_name', content: openGraph.siteName }),\n    Meta({ property: 'og:locale', content: openGraph.locale }),\n    Meta({ property: 'og:country_name', content: openGraph.countryName }),\n    Meta({ property: 'og:ttl', content: openGraph.ttl?.toString() }),\n    MultiMeta({ propertyPrefix: 'og:image', contents: openGraph.images }),\n    MultiMeta({ propertyPrefix: 'og:video', contents: openGraph.videos }),\n    MultiMeta({ propertyPrefix: 'og:audio', contents: openGraph.audio }),\n    MultiMeta({ propertyPrefix: 'og:email', contents: openGraph.emails }),\n    MultiMeta({\n      propertyPrefix: 'og:phone_number',\n      contents: openGraph.phoneNumbers,\n    }),\n    MultiMeta({\n      propertyPrefix: 'og:fax_number',\n      contents: openGraph.faxNumbers,\n    }),\n    MultiMeta({\n      propertyPrefix: 'og:locale:alternate',\n      contents: openGraph.alternateLocale,\n    }),\n    ...(typedOpenGraph ? typedOpenGraph : []),\n  ])\n}\n\nfunction TwitterAppItem({\n  app,\n  type,\n}: {\n  app: TwitterAppDescriptor\n  type: 'iphone' | 'ipad' | 'googleplay'\n}) {\n  return [\n    Meta({ name: `twitter:app:name:${type}`, content: app.name }),\n    Meta({ name: `twitter:app:id:${type}`, content: app.id[type] }),\n    Meta({\n      name: `twitter:app:url:${type}`,\n      content: app.url?.[type]?.toString(),\n    }),\n  ]\n}\n\nexport function TwitterMetadata({\n  twitter,\n}: {\n  twitter: ResolvedMetadata['twitter']\n}) {\n  if (!twitter) return null\n  const { card } = twitter\n\n  return MetaFilter([\n    Meta({ name: 'twitter:card', content: card }),\n    Meta({ name: 'twitter:site', content: twitter.site }),\n    Meta({ name: 'twitter:site:id', content: twitter.siteId }),\n    Meta({ name: 'twitter:creator', content: twitter.creator }),\n    Meta({ name: 'twitter:creator:id', content: twitter.creatorId }),\n    Meta({ name: 'twitter:title', content: twitter.title?.absolute }),\n    Meta({ name: 'twitter:description', content: twitter.description }),\n    MultiMeta({ namePrefix: 'twitter:image', contents: twitter.images }),\n    ...(card === 'player'\n      ? twitter.players.flatMap((player) => [\n          Meta({\n            name: 'twitter:player',\n            content: player.playerUrl.toString(),\n          }),\n          Meta({\n            name: 'twitter:player:stream',\n            content: player.streamUrl.toString(),\n          }),\n          Meta({ name: 'twitter:player:width', content: player.width }),\n          Meta({ name: 'twitter:player:height', content: player.height }),\n        ])\n      : []),\n    ...(card === 'app'\n      ? [\n          TwitterAppItem({ app: twitter.app, type: 'iphone' }),\n          TwitterAppItem({ app: twitter.app, type: 'ipad' }),\n          TwitterAppItem({ app: twitter.app, type: 'googleplay' }),\n        ]\n      : []),\n  ])\n}\n\nexport function AppLinksMeta({\n  appLinks,\n}: {\n  appLinks: ResolvedMetadata['appLinks']\n}) {\n  if (!appLinks) return null\n  return MetaFilter([\n    MultiMeta({ propertyPrefix: 'al:ios', contents: appLinks.ios }),\n    MultiMeta({ propertyPrefix: 'al:iphone', contents: appLinks.iphone }),\n    MultiMeta({ propertyPrefix: 'al:ipad', contents: appLinks.ipad }),\n    MultiMeta({ propertyPrefix: 'al:android', contents: appLinks.android }),\n    MultiMeta({\n      propertyPrefix: 'al:windows_phone',\n      contents: appLinks.windows_phone,\n    }),\n    MultiMeta({ propertyPrefix: 'al:windows', contents: appLinks.windows }),\n    MultiMeta({\n      propertyPrefix: 'al:windows_universal',\n      contents: appLinks.windows_universal,\n    }),\n    MultiMeta({ propertyPrefix: 'al:web', contents: appLinks.web }),\n  ])\n}\n"],"names":["AppLinksMeta","OpenGraphMetadata","TwitterMetadata","openGraph","typedOpenGraph","openGraphType","type","Meta","property","content","publishedTime","toString","modifiedTime","expirationTime","MultiMeta","propertyPrefix","contents","authors","section","tags","isbn","releaseDate","firstName","lastName","username","gender","duration","albums","musicians","songs","creators","actors","directors","writers","series","_exhaustiveCheck","Error","MetaFilter","determiner","title","absolute","description","url","siteName","locale","countryName","ttl","images","videos","audio","emails","phoneNumbers","faxNumbers","alternateLocale","TwitterAppItem","app","name","id","twitter","card","site","siteId","creator","creatorId","namePrefix","players","flatMap","player","playerUrl","streamUrl","width","height","appLinks","ios","iphone","ipad","android","windows_phone","windows","windows_universal","web"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/icon-mark.tsx"],"sourcesContent":["'use client'\n\n// This is a client component that only renders during SSR,\n// but will be replaced during streaming with an icon insertion script tag.\n// We don't want it to be presented anywhere so it's only visible during streaming,\n// right after the icon meta tags so that browser can pick it up as soon as it's rendered.\n// Note: we don't just emit the script here because we only need the script if it's not in the head,\n// and we need it to be hoistable alongside the other metadata but sync scripts are not hoistable.\nexport const IconMark = () => {\n  if (typeof window !== 'undefined') {\n    return null\n  }\n  return <meta name=\"«nxt-icon»\" />\n}\n"],"names":["IconMark","window","meta","name"],"mappings":";;;+BAQaA,YAAAA;;;eAAAA;;;;AAAN,MAAMA,WAAW;IACtB,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IACA,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACC,QAAAA;QAAKC,MAAK;;AACpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/generate/icons.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { Icon, IconDescriptor } from '../types/metadata-types'\nimport { IconMark } from './icon-mark'\n\nimport { MetaFilter } from './meta'\n\nfunction IconDescriptorLink({ icon }: { icon: IconDescriptor }) {\n  const { url, rel = 'icon', ...props } = icon\n\n  return <link rel={rel} href={url.toString()} {...props} />\n}\n\nfunction IconLink({ rel, icon }: { rel?: string; icon: Icon }) {\n  if (typeof icon === 'object' && !(icon instanceof URL)) {\n    if (!icon.rel && rel) icon.rel = rel\n    return IconDescriptorLink({ icon })\n  } else {\n    const href = icon.toString()\n    return <link rel={rel} href={href} />\n  }\n}\n\nexport function IconsMetadata({ icons }: { icons: ResolvedMetadata['icons'] }) {\n  if (!icons) return null\n\n  const shortcutList = icons.shortcut\n  const iconList = icons.icon\n  const appleList = icons.apple\n  const otherList = icons.other\n\n  const hasIcon = Boolean(\n    shortcutList?.length ||\n      iconList?.length ||\n      appleList?.length ||\n      otherList?.length\n  )\n  if (!hasIcon) return null\n\n  return MetaFilter([\n    shortcutList\n      ? shortcutList.map((icon) => IconLink({ rel: 'shortcut icon', icon }))\n      : null,\n    iconList ? iconList.map((icon) => IconLink({ rel: 'icon', icon })) : null,\n    appleList\n      ? appleList.map((icon) => IconLink({ rel: 'apple-touch-icon', icon }))\n      : null,\n    otherList ? otherList.map((icon) => IconDescriptorLink({ icon })) : null,\n    hasIcon ? <IconMark /> : null,\n  ])\n}\n"],"names":["IconsMetadata","IconDescriptorLink","icon","url","rel","props","link","href","toString","IconLink","URL","icons","shortcutList","shortcut","iconList","appleList","apple","otherList","other","hasIcon","Boolean","length","MetaFilter","map","IconMark"],"mappings":";;;+BAsBgBA,iBAAAA;;;eAAAA;;;;0BApBS;sBAEE;AAE3B,SAASC;UAAqBC,IAAI,EAA4B,GAAlC;IAC1B,MAAM,EAAEC,GAAG,EAAEC,MAAM,MAAM,EAAE,GAAGC,OAAO,GAAGH;IAExC,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACI,QAAAA;QAAKF,KAAKA;QAAKG,MAAMJ,IAAIK,QAAQ;QAAK,GAAGH,KAAK;;AACxD;AAEA,SAASI;UAAWL,GAAG,EAAEF,IAAI,EAAgC,GAA3C;IAChB,IAAI,OAAOA,SAAS,YAAY,CAAEA,CAAAA,gBAAgBQ,GAAE,GAAI;QACtD,IAAI,CAACR,KAAKE,GAAG,IAAIA,KAAKF,KAAKE,GAAG,GAAGA;QACjC,OAAOH,mBAAmB;YAAEC;QAAK;IACnC,OAAO;QACL,MAAMK,OAAOL,KAAKM,QAAQ;QAC1B,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACF,QAAAA;YAAKF,KAAKA;YAAKG,MAAMA;;IAC/B;AACF;AAEO,SAASP;UAAgBW,KAAK,EAAwC,GAA/C;IAC5B,IAAI,CAACA,OAAO,OAAO;IAEnB,MAAMC,eAAeD,MAAME,QAAQ;IACnC,MAAMC,WAAWH,MAAMT,IAAI;IAC3B,MAAMa,YAAYJ,MAAMK,KAAK;IAC7B,MAAMC,YAAYN,MAAMO,KAAK;IAE7B,MAAMC,UAAUC,QACdR,CAAAA,gBAAAA,OAAAA,KAAAA,IAAAA,aAAcS,MAAM,KAAA,CAClBP,YAAAA,OAAAA,KAAAA,IAAAA,SAAUO,MAAM,KAAA,CAChBN,aAAAA,OAAAA,KAAAA,IAAAA,UAAWM,MAAM,KAAA,CACjBJ,aAAAA,OAAAA,KAAAA,IAAAA,UAAWI,MAAM;IAErB,IAAI,CAACF,SAAS,OAAO;IAErB,OAAOG,CAAAA,GAAAA,MAAAA,UAAU,EAAC;QAChBV,eACIA,aAAaW,GAAG,CAAC,CAACrB,OAASO,SAAS;gBAAEL,KAAK;gBAAiBF;YAAK,MACjE;QACJY,WAAWA,SAASS,GAAG,CAAC,CAACrB,OAASO,SAAS;gBAAEL,KAAK;gBAAQF;YAAK,MAAM;QACrEa,YACIA,UAAUQ,GAAG,CAAC,CAACrB,OAASO,SAAS;gBAAEL,KAAK;gBAAoBF;YAAK,MACjE;QACJe,YAAYA,UAAUM,GAAG,CAAC,CAACrB,OAASD,mBAAmB;gBAAEC;YAAK,MAAM;QACpEiB,UAAAA,WAAAA,GAAU,CAAA,GAAA,YAAA,GAAA,EAACK,UAAAA,QAAQ,EAAA,CAAA,KAAM;KAC1B;AACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1204, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/default-metadata.tsx"],"sourcesContent":["import type {\n  ResolvedMetadata,\n  ResolvedViewport,\n} from './types/metadata-interface'\n\nexport function createDefaultViewport(): ResolvedViewport {\n  return {\n    // name=viewport\n    width: 'device-width',\n    initialScale: 1,\n    // visual metadata\n    themeColor: null,\n    colorScheme: null,\n  }\n}\n\nexport function createDefaultMetadata(): ResolvedMetadata {\n  return {\n    // Deprecated ones\n    viewport: null,\n    themeColor: null,\n    colorScheme: null,\n\n    metadataBase: null,\n    // Other values are all null\n    title: null,\n    description: null,\n    applicationName: null,\n    authors: null,\n    generator: null,\n    keywords: null,\n    referrer: null,\n    creator: null,\n    publisher: null,\n    robots: null,\n    manifest: null,\n    alternates: {\n      canonical: null,\n      languages: null,\n      media: null,\n      types: null,\n    },\n    icons: null,\n    openGraph: null,\n    twitter: null,\n    verification: {},\n    appleWebApp: null,\n    formatDetection: null,\n    itunes: null,\n    facebook: null,\n    pinterest: null,\n    abstract: null,\n    appLinks: null,\n    archives: null,\n    assets: null,\n    bookmarks: null,\n    category: null,\n    classification: null,\n    pagination: {\n      previous: null,\n      next: null,\n    },\n    other: {},\n  }\n}\n"],"names":["createDefaultMetadata","createDefaultViewport","width","initialScale","themeColor","colorScheme","viewport","metadataBase","title","description","applicationName","authors","generator","keywords","referrer","creator","publisher","robots","manifest","alternates","canonical","languages","media","types","icons","openGraph","twitter","verification","appleWebApp","formatDetection","itunes","facebook","pinterest","abstract","appLinks","archives","assets","bookmarks","category","classification","pagination","previous","next","other"],"mappings":";;;;;;;;;;;;;;IAgBgBA,qBAAqB,EAAA;eAArBA;;IAXAC,qBAAqB,EAAA;eAArBA;;;AAAT,SAASA;IACd,OAAO;QACL,gBAAgB;QAChBC,OAAO;QACPC,cAAc;QACd,kBAAkB;QAClBC,YAAY;QACZC,aAAa;IACf;AACF;AAEO,SAASL;IACd,OAAO;QACL,kBAAkB;QAClBM,UAAU;QACVF,YAAY;QACZC,aAAa;QAEbE,cAAc;QACd,4BAA4B;QAC5BC,OAAO;QACPC,aAAa;QACbC,iBAAiB;QACjBC,SAAS;QACTC,WAAW;QACXC,UAAU;QACVC,UAAU;QACVC,SAAS;QACTC,WAAW;QACXC,QAAQ;QACRC,UAAU;QACVC,YAAY;YACVC,WAAW;YACXC,WAAW;YACXC,OAAO;YACPC,OAAO;QACT;QACAC,OAAO;QACPC,WAAW;QACXC,SAAS;QACTC,cAAc,CAAC;QACfC,aAAa;QACbC,iBAAiB;QACjBC,QAAQ;QACRC,UAAU;QACVC,WAAW;QACXC,UAAU;QACVC,UAAU;QACVC,UAAU;QACVC,QAAQ;QACRC,WAAW;QACXC,UAAU;QACVC,gBAAgB;QAChBC,YAAY;YACVC,UAAU;YACVC,MAAM;QACR;QACAC,OAAO,CAAC;IACV;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolvers/resolve-url.ts"],"sourcesContent":["import path from '../../../shared/lib/isomorphic/path'\nimport type { MetadataContext } from '../types/resolvers'\n\nfunction isStringOrURL(icon: any): icon is string | URL {\n  return typeof icon === 'string' || icon instanceof URL\n}\n\nfunction createLocalMetadataBase() {\n  // Check if experimental HTTPS is enabled\n  const isExperimentalHttps = Boolean(process.env.__NEXT_EXPERIMENTAL_HTTPS)\n  const protocol = isExperimentalHttps ? 'https' : 'http'\n  return new URL(`${protocol}://localhost:${process.env.PORT || 3000}`)\n}\n\nfunction getPreviewDeploymentUrl(): URL | undefined {\n  const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL\n  return origin ? new URL(`https://${origin}`) : undefined\n}\n\nfunction getProductionDeploymentUrl(): URL | undefined {\n  const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL\n  return origin ? new URL(`https://${origin}`) : undefined\n}\n\n/**\n * Given an optional user-provided metadataBase, this determines what the metadataBase should\n * fallback to. Specifically:\n * - In dev, it should always be localhost\n * - In Vercel preview builds, it should be the preview build ID\n * - In start, it should be the user-provided metadataBase value. Otherwise,\n * it'll fall back to the Vercel production deployment, and localhost as a last resort.\n */\nexport function getSocialImageMetadataBaseFallback(\n  metadataBase: URL | null\n): URL {\n  const defaultMetadataBase = createLocalMetadataBase()\n  const previewDeploymentUrl = getPreviewDeploymentUrl()\n  const productionDeploymentUrl = getProductionDeploymentUrl()\n\n  let fallbackMetadataBase\n  if (process.env.NODE_ENV === 'development') {\n    fallbackMetadataBase = defaultMetadataBase\n  } else {\n    fallbackMetadataBase =\n      process.env.NODE_ENV === 'production' &&\n      previewDeploymentUrl &&\n      process.env.VERCEL_ENV === 'preview'\n        ? previewDeploymentUrl\n        : metadataBase || productionDeploymentUrl || defaultMetadataBase\n  }\n\n  return fallbackMetadataBase\n}\n\nfunction resolveUrl(url: null | undefined, metadataBase: URL | null): null\nfunction resolveUrl(url: string | URL, metadataBase: URL | null): URL\nfunction resolveUrl(\n  url: string | URL | null | undefined,\n  metadataBase: URL | null\n): URL | null\nfunction resolveUrl(\n  url: string | URL | null | undefined,\n  metadataBase: URL | null\n): URL | null {\n  if (url instanceof URL) return url\n  if (!url) return null\n\n  try {\n    // If we can construct a URL instance from url, ignore metadataBase\n    const parsedUrl = new URL(url)\n    return parsedUrl\n  } catch {}\n\n  if (!metadataBase) {\n    metadataBase = createLocalMetadataBase()\n  }\n\n  // Handle relative or absolute paths\n  const pathname = metadataBase.pathname || ''\n  const joinedPath = path.posix.join(pathname, url)\n\n  return new URL(joinedPath, metadataBase)\n}\n\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url: string | URL, pathname: string): string | URL {\n  if (typeof url === 'string' && url.startsWith('./')) {\n    return path.posix.resolve(pathname, url)\n  }\n  return url\n}\n\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX =\n  /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i\nfunction isFilePattern(pathname: string): boolean {\n  return FILE_REGEX.test(pathname)\n}\n\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(\n  url: string | URL,\n  metadataBase: URL | null,\n  pathname: string,\n  { trailingSlash }: MetadataContext\n): string {\n  // Resolve url with pathname that always starts with `/`\n  url = resolveRelativeUrl(url, pathname)\n\n  // Convert string url or URL instance to absolute url string,\n  // if there's case needs to be resolved with metadataBase\n  let resolvedUrl = ''\n  const result = metadataBase ? resolveUrl(url, metadataBase) : url\n  if (typeof result === 'string') {\n    resolvedUrl = result\n  } else {\n    resolvedUrl = result.pathname === '/' ? result.origin : result.href\n  }\n\n  // Add trailing slash if it's enabled for urls matches the condition\n  // - Not external, same origin with metadataBase\n  // - Doesn't have query\n  if (trailingSlash && !resolvedUrl.endsWith('/')) {\n    let isRelative = resolvedUrl.startsWith('/')\n    let hasQuery = resolvedUrl.includes('?')\n    let isExternal = false\n    let isFileUrl = false\n\n    if (!isRelative) {\n      try {\n        const parsedUrl = new URL(resolvedUrl)\n        isExternal =\n          metadataBase != null && parsedUrl.origin !== metadataBase.origin\n        isFileUrl = isFilePattern(parsedUrl.pathname)\n      } catch {\n        // If it's not a valid URL, treat it as external\n        isExternal = true\n      }\n      if (\n        // Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n        !isFileUrl &&\n        !isExternal &&\n        !hasQuery\n      )\n        return `${resolvedUrl}/`\n    }\n  }\n\n  return resolvedUrl\n}\n\nexport {\n  isStringOrURL,\n  resolveUrl,\n  resolveRelativeUrl,\n  resolveAbsoluteUrlWithPathname,\n}\n"],"names":["getSocialImageMetadataBaseFallback","isStringOrURL","resolveAbsoluteUrlWithPathname","resolveRelativeUrl","resolveUrl","icon","URL","createLocalMetadataBase","isExperimentalHttps","Boolean","process","env","__NEXT_EXPERIMENTAL_HTTPS","protocol","PORT","getPreviewDeploymentUrl","origin","VERCEL_BRANCH_URL","VERCEL_URL","undefined","getProductionDeploymentUrl","VERCEL_PROJECT_PRODUCTION_URL","metadataBase","defaultMetadataBase","previewDeploymentUrl","productionDeploymentUrl","fallbackMetadataBase","NODE_ENV","VERCEL_ENV","url","parsedUrl","pathname","joinedPath","path","posix","join","startsWith","resolve","FILE_REGEX","isFilePattern","test","trailingSlash","resolvedUrl","result","href","endsWith","isRelative","hasQuery","includes","isExternal","isFileUrl"],"mappings":"AASsCU;;;;;;;;;;;;;;;;;;;IAuBtBV,kCAAkC,EAAA;eAAlCA;;IAwHdC,aAAa,EAAA;eAAbA;;IAGAC,8BAA8B,EAAA;eAA9BA;;IADAC,kBAAkB,EAAA;eAAlBA;;IADAC,UAAU,EAAA;eAAVA;;;6DAzJe;;;;;;AAGjB,SAASH,cAAcI,IAAS;IAC9B,OAAO,OAAOA,SAAS,YAAYA,gBAAgBC;AACrD;AAEA,SAASC;IACP,yCAAyC;IACzC,MAAMC,sBAAsBC,mLAAQC,CAAQC,GAAG,CAACC,yBAAyB;IACzE,MAAMC,WAAWL,sBAAsB,UAAU;IACjD,OAAO,IAAIF,IAAI,UAAGO,UAAS,aAAa,IAAsB,CAAM,MAA1BH,2KAAAA,CAAQC,GAAG,CAACG,IAAI,IAAI;AAChE;AAEA,SAASC;IACP,MAAMC,SAASN,2KAAAA,CAAQC,GAAG,CAACM,iBAAiB,IAAIP,2KAAAA,CAAQC,GAAG,CAACO,UAAU;IACtE,OAAOF,SAAS,IAAIV,IAAI,AAAC,QAAQ,GAAEU,CAAQ,MAARA,WAAYG;AACjD;AAEA,SAASC;IACP,MAAMJ,SAASN,2KAAAA,CAAQC,GAAG,CAACU,6BAA6B;IACxD,OAAOL,SAAS,IAAIV,IAAI,AAAC,QAAQ,GAAEU,CAAQ,MAARA,WAAYG;AACjD;AAUO,SAASnB,mCACdsB,YAAwB;IAExB,MAAMC,sBAAsBhB;IAC5B,MAAMiB,uBAAuBT;IAC7B,MAAMU,0BAA0BL;IAEhC,IAAIM;IACJ,IAAIhB,QAAQC,GAAG,CAACgB,QAAQ,KAAK,WAAe;QAC1CD,uBAAuBH;IACzB,OAAO;;IASP,OAAOG;AACT;AAQA,SAAStB,WACPyB,GAAoC,EACpCP,YAAwB;IAExB,IAAIO,eAAevB,KAAK,OAAOuB;IAC/B,IAAI,CAACA,KAAK,OAAO;IAEjB,IAAI;QACF,mEAAmE;QACnE,MAAMC,YAAY,IAAIxB,IAAIuB;QAC1B,OAAOC;IACT,EAAE,UAAM,CAAC;IAET,IAAI,CAACR,cAAc;QACjBA,eAAef;IACjB;IAEA,oCAAoC;IACpC,MAAMwB,WAAWT,aAAaS,QAAQ,IAAI;IAC1C,MAAMC,aAAaC,MAAAA,OAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,UAAUF;IAE7C,OAAO,IAAIvB,IAAI0B,YAAYV;AAC7B;AAEA,uDAAuD;AACvD,SAASnB,mBAAmB0B,GAAiB,EAAEE,QAAgB;IAC7D,IAAI,OAAOF,QAAQ,YAAYA,IAAIO,UAAU,CAAC,OAAO;QACnD,OAAOH,MAAAA,OAAI,CAACC,KAAK,CAACG,OAAO,CAACN,UAAUF;IACtC;IACA,OAAOA;AACT;AAEA,+EAA+E;AAC/E,MAAMS,aACJ;AACF,SAASC,cAAcR,QAAgB;IACrC,OAAOO,WAAWE,IAAI,CAACT;AACzB;AAEA,kFAAkF;AAClF,SAAS7B,+BACP2B,GAAiB,EACjBP,YAAwB,EACxBS,QAAgB;UACdU,aAAa,EAAmB,GAAlC;IAEA,wDAAwD;IACxDZ,MAAM1B,mBAAmB0B,KAAKE;IAE9B,6DAA6D;IAC7D,yDAAyD;IACzD,IAAIW,cAAc;IAClB,MAAMC,SAASrB,eAAelB,WAAWyB,KAAKP,gBAAgBO;IAC9D,IAAI,OAAOc,WAAW,UAAU;QAC9BD,cAAcC;IAChB,OAAO;QACLD,cAAcC,OAAOZ,QAAQ,KAAK,MAAMY,OAAO3B,MAAM,GAAG2B,OAAOC,IAAI;IACrE;IAEA,oEAAoE;IACpE,gDAAgD;IAChD,uBAAuB;IACvB,IAAIH,iBAAiB,CAACC,YAAYG,QAAQ,CAAC,MAAM;QAC/C,IAAIC,aAAaJ,YAAYN,UAAU,CAAC;QACxC,IAAIW,WAAWL,YAAYM,QAAQ,CAAC;QACpC,IAAIC,aAAa;QACjB,IAAIC,YAAY;QAEhB,IAAI,CAACJ,YAAY;YACf,IAAI;gBACF,MAAMhB,YAAY,IAAIxB,IAAIoC;gBAC1BO,aACE3B,gBAAgB,QAAQQ,UAAUd,MAAM,KAAKM,aAAaN,MAAM;gBAClEkC,YAAYX,cAAcT,UAAUC,QAAQ;YAC9C,EAAE,UAAM;gBACN,gDAAgD;gBAChDkB,aAAa;YACf;YACA,IACE,AACA,CAACC,aACD,CAACD,cACD,CAACF,UAED,OAAO,UAAGL,aAAY,CAAC,CAAC,0BAL0E;QAMtG;IACF;IAEA,OAAOA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1424, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolvers/resolve-title.ts"],"sourcesContent":["import type { Metadata } from '../types/metadata-interface'\nimport type { AbsoluteTemplateString } from '../types/metadata-types'\n\nfunction resolveTitleTemplate(\n  template: string | null | undefined,\n  title: string\n) {\n  return template ? template.replace(/%s/g, title) : title\n}\n\nexport function resolveTitle(\n  title: Metadata['title'],\n  stashedTemplate: string | null | undefined\n): AbsoluteTemplateString {\n  let resolved\n  const template =\n    typeof title !== 'string' && title && 'template' in title\n      ? title.template\n      : null\n\n  if (typeof title === 'string') {\n    resolved = resolveTitleTemplate(stashedTemplate, title)\n  } else if (title) {\n    if ('default' in title) {\n      resolved = resolveTitleTemplate(stashedTemplate, title.default)\n    }\n    if ('absolute' in title && title.absolute) {\n      resolved = title.absolute\n    }\n  }\n\n  if (title && typeof title !== 'string') {\n    return {\n      template,\n      absolute: resolved || '',\n    }\n  } else {\n    return { absolute: resolved || title || '', template }\n  }\n}\n"],"names":["resolveTitle","resolveTitleTemplate","template","title","replace","stashedTemplate","resolved","default","absolute"],"mappings":";;;+BAUgBA,gBAAAA;;;eAAAA;;;AAPhB,SAASC,qBACPC,QAAmC,EACnCC,KAAa;IAEb,OAAOD,WAAWA,SAASE,OAAO,CAAC,OAAOD,SAASA;AACrD;AAEO,SAASH,aACdG,KAAwB,EACxBE,eAA0C;IAE1C,IAAIC;IACJ,MAAMJ,WACJ,OAAOC,UAAU,YAAYA,SAAS,cAAcA,QAChDA,MAAMD,QAAQ,GACd;IAEN,IAAI,OAAOC,UAAU,UAAU;QAC7BG,WAAWL,qBAAqBI,iBAAiBF;IACnD,OAAO,IAAIA,OAAO;QAChB,IAAI,aAAaA,OAAO;YACtBG,WAAWL,qBAAqBI,iBAAiBF,MAAMI,OAAO;QAChE;QACA,IAAI,cAAcJ,SAASA,MAAMK,QAAQ,EAAE;YACzCF,WAAWH,MAAMK,QAAQ;QAC3B;IACF;IAEA,IAAIL,SAAS,OAAOA,UAAU,UAAU;QACtC,OAAO;YACLD;YACAM,UAAUF,YAAY;QACxB;IACF,OAAO;QACL,OAAO;YAAEE,UAAUF,YAAYH,SAAS;YAAID;QAAS;IACvD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/url.ts"],"sourcesContent":["import type { UrlWithParsedQuery } from 'url'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed: URL | undefined = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function parseReqUrl(url: string): UrlWithParsedQuery | undefined {\n  const parsedUrl: URL | undefined = parseUrl(url)\n\n  if (!parsedUrl) {\n    return\n  }\n\n  const query: Record<string, string | string[]> = {}\n\n  for (const key of parsedUrl.searchParams.keys()) {\n    const values = parsedUrl.searchParams.getAll(key)\n    query[key] = values.length > 1 ? values : values[0]\n  }\n\n  const legacyUrl: UrlWithParsedQuery = {\n    query,\n    hash: parsedUrl.hash,\n    search: parsedUrl.search,\n    path: parsedUrl.pathname,\n    pathname: parsedUrl.pathname,\n    href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n    host: '',\n    hostname: '',\n    auth: '',\n    protocol: '',\n    slashes: null,\n    port: '',\n  }\n  return legacyUrl\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n"],"names":["isFullStringUrl","parseReqUrl","parseUrl","stripNextRscUnionQuery","DUMMY_ORIGIN","url","test","parsed","undefined","URL","parsedUrl","query","key","searchParams","keys","values","getAll","length","legacyUrl","hash","search","path","pathname","href","host","hostname","auth","protocol","slashes","port","relativeUrl","urlInstance","delete","NEXT_RSC_UNION_QUERY"],"mappings":";;;;;;;;;;;;;;;;IAKgBA,eAAe,EAAA;eAAfA;;IAYAC,WAAW,EAAA;eAAXA;;IARAC,QAAQ,EAAA;eAARA;;IAuCAC,sBAAsB,EAAA;eAAtBA;;;kCA/CqB;AAErC,MAAMC,eAAe;AAEd,SAASJ,gBAAgBK,GAAW;IACzC,OAAO,cAAcC,IAAI,CAACD;AAC5B;AAEO,SAASH,SAASG,GAAW;IAClC,IAAIE,SAA0BC;IAC9B,IAAI;QACFD,SAAS,IAAIE,IAAIJ,KAAKD;IACxB,EAAE,UAAM,CAAC;IACT,OAAOG;AACT;AAEO,SAASN,YAAYI,GAAW;IACrC,MAAMK,YAA6BR,SAASG;IAE5C,IAAI,CAACK,WAAW;QACd;IACF;IAEA,MAAMC,QAA2C,CAAC;IAElD,KAAK,MAAMC,OAAOF,UAAUG,YAAY,CAACC,IAAI,GAAI;QAC/C,MAAMC,SAASL,UAAUG,YAAY,CAACG,MAAM,CAACJ;QAC7CD,KAAK,CAACC,IAAI,GAAGG,OAAOE,MAAM,GAAG,IAAIF,SAASA,MAAM,CAAC,EAAE;IACrD;IAEA,MAAMG,YAAgC;QACpCP;QACAQ,MAAMT,UAAUS,IAAI;QACpBC,QAAQV,UAAUU,MAAM;QACxBC,MAAMX,UAAUY,QAAQ;QACxBA,UAAUZ,UAAUY,QAAQ;QAC5BC,MAAM,GAAwBb,OAArBA,UAAUY,QAAQ,mBAAaF,MAAM,EAAiB,CAAE,MAAhBV,UAAUS,IAAI;QAC/DK,MAAM;QACNC,UAAU;QACVC,MAAM;QACNC,UAAU;QACVC,SAAS;QACTC,MAAM;IACR;IACA,OAAOX;AACT;AAEO,SAASf,uBAAuB2B,WAAmB;IACxD,MAAMC,cAAc,IAAItB,IAAIqB,aAAa1B;IACzC2B,YAAYlB,YAAY,CAACmB,MAAM,CAACC,kBAAAA,oBAAoB;IAEpD,OAAOF,YAAYT,QAAQ,GAAGS,YAAYX,MAAM;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1541, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/picocolors.ts"],"sourcesContent":["// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n"],"names":["bgBlack","bgBlue","bgCyan","bgGreen","bgMagenta","bgRed","bgWhite","bgYellow","black","blue","bold","cyan","dim","gray","green","hidden","inverse","italic","magenta","purple","red","reset","strikethrough","underline","white","yellow","globalThis","env","stdout","process","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","length","nextIndex","indexOf","formatter","open","String","input","string","s"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1721, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolvers/resolve-opengraph.ts"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type {\n  OpenGraphType,\n  OpenGraph,\n  ResolvedOpenGraph,\n} from '../types/opengraph-types'\nimport type {\n  FieldResolverExtraArgs,\n  AsyncFieldResolverExtraArgs,\n  MetadataContext,\n} from '../types/resolvers'\nimport type { ResolvedTwitterMetadata, Twitter } from '../types/twitter-types'\nimport { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils'\nimport {\n  getSocialImageMetadataBaseFallback,\n  isStringOrURL,\n  resolveUrl,\n  resolveAbsoluteUrlWithPathname,\n} from './resolve-url'\nimport { resolveTitle } from './resolve-title'\nimport { isFullStringUrl } from '../../url'\nimport { warnOnce } from '../../../build/output/log'\n\ntype FlattenArray<T> = T extends (infer U)[] ? U : T\ntype ResolvedMetadataBase = ResolvedMetadata['metadataBase']\n\nconst OgTypeFields = {\n  article: ['authors', 'tags'],\n  song: ['albums', 'musicians'],\n  playlist: ['albums', 'musicians'],\n  radio: ['creators'],\n  video: ['actors', 'directors', 'writers', 'tags'],\n  basic: [\n    'emails',\n    'phoneNumbers',\n    'faxNumbers',\n    'alternateLocale',\n    'audio',\n    'videos',\n  ],\n} as const\n\nfunction resolveAndValidateImage(\n  item: FlattenArray<OpenGraph['images'] | Twitter['images']>,\n  metadataBase: ResolvedMetadataBase,\n  isStaticMetadataRouteFile: boolean | undefined\n) {\n  if (!item) return undefined\n  const isItemUrl = isStringOrURL(item)\n  const inputUrl = isItemUrl ? item : item.url\n  if (!inputUrl) return undefined\n\n  // process.env.VERCEL is set to \"1\" when System Environment Variables are\n  // exposed. When exposed, validation is not necessary since we are falling back to\n  // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n  // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n  // when System Environment Variables are not exposed. When not exposed, we cannot\n  // detect in the build environment if the deployment is a Vercel deployment or not.\n  //\n  // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n  const isUsingVercelSystemEnvironmentVariables = Boolean(process.env.VERCEL)\n\n  const isRelativeUrl =\n    typeof inputUrl === 'string' && !isFullStringUrl(inputUrl)\n\n  // When no explicit metadataBase is specified by the user, we'll override it with the fallback metadata\n  // under the following conditions:\n  // - The provided URL is relative (ie ./og-image).\n  // - The image is statically generated by Next.js (such as the special `opengraph-image` route)\n  // In both cases, we want to ensure that across all environments, the ogImage is a fully qualified URL.\n  // In the `opengraph-image` case, since the user isn't explicitly passing a relative path, this ensures\n  // the ogImage will be properly discovered across different environments without the user needing to\n  // have a bunch of `process.env` checks when defining their `metadataBase`.\n  if (isRelativeUrl && (!metadataBase || isStaticMetadataRouteFile)) {\n    const fallbackMetadataBase =\n      getSocialImageMetadataBaseFallback(metadataBase)\n\n    // When not using Vercel environment variables for URL injection, we aren't able to determine\n    // a fallback value for `metadataBase`. For self-hosted setups, we want to warn\n    // about this since the only fallback we'll be able to generate is `localhost`.\n    // In development, we'll only warn for relative metadata that isn't part of the static\n    // metadata conventions (eg `opengraph-image`), as otherwise it's currently very noisy\n    // for common cases. Eventually we should remove this warning all together in favor of\n    // devtools.\n    const shouldWarn =\n      !isUsingVercelSystemEnvironmentVariables &&\n      !metadataBase &&\n      (process.env.NODE_ENV === 'production' || !isStaticMetadataRouteFile)\n\n    if (shouldWarn) {\n      warnOnce(\n        `metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`\n      )\n    }\n\n    metadataBase = fallbackMetadataBase\n  }\n\n  return isItemUrl\n    ? {\n        url: resolveUrl(inputUrl, metadataBase),\n      }\n    : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase),\n      }\n}\n\nexport function resolveImages(\n  images: Twitter['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStaticMetadataRouteFile: boolean\n): NonNullable<ResolvedMetadata['twitter']>['images']\nexport function resolveImages(\n  images: OpenGraph['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStaticMetadataRouteFile: boolean\n): NonNullable<ResolvedMetadata['openGraph']>['images']\nexport function resolveImages(\n  images: OpenGraph['images'] | Twitter['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStaticMetadataRouteFile: boolean\n):\n  | NonNullable<ResolvedMetadata['twitter']>['images']\n  | NonNullable<ResolvedMetadata['openGraph']>['images'] {\n  const resolvedImages = resolveAsArrayOrUndefined(images)\n  if (!resolvedImages) return resolvedImages\n\n  const nonNullableImages = []\n  for (const item of resolvedImages) {\n    const resolvedItem = resolveAndValidateImage(\n      item,\n      metadataBase,\n      isStaticMetadataRouteFile\n    )\n    if (!resolvedItem) continue\n\n    nonNullableImages.push(resolvedItem)\n  }\n\n  return nonNullableImages\n}\n\nconst ogTypeToFields: Record<string, readonly string[]> = {\n  article: OgTypeFields.article,\n  book: OgTypeFields.article,\n  'music.song': OgTypeFields.song,\n  'music.album': OgTypeFields.song,\n  'music.playlist': OgTypeFields.playlist,\n  'music.radio_station': OgTypeFields.radio,\n  'video.movie': OgTypeFields.video,\n  'video.episode': OgTypeFields.video,\n}\n\nfunction getFieldsByOgType(ogType: OpenGraphType | undefined) {\n  if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic\n  return ogTypeToFields[ogType].concat(OgTypeFields.basic)\n}\n\nexport const resolveOpenGraph: AsyncFieldResolverExtraArgs<\n  'openGraph',\n  [ResolvedMetadataBase, Promise<string>, MetadataContext, string | null]\n> = async (\n  openGraph,\n  metadataBase,\n  pathname,\n  metadataContext,\n  titleTemplate\n) => {\n  if (!openGraph) return null\n\n  function resolveProps(target: ResolvedOpenGraph, og: OpenGraph) {\n    const ogType = og && 'type' in og ? og.type : undefined\n    const keys = getFieldsByOgType(ogType)\n    for (const k of keys) {\n      const key = k as keyof ResolvedOpenGraph\n      if (key in og && key !== 'url') {\n        const value = og[key]\n        // TODO: improve typing inferring\n        ;(target as any)[key] = value ? resolveArray(value) : null\n      }\n    }\n    target.images = resolveImages(\n      og.images,\n      metadataBase,\n      metadataContext.isStaticMetadataRouteFile\n    )\n  }\n\n  const resolved = {\n    ...openGraph,\n    title: resolveTitle(openGraph.title, titleTemplate),\n  } as ResolvedOpenGraph\n  resolveProps(resolved, openGraph)\n\n  resolved.url = openGraph.url\n    ? resolveAbsoluteUrlWithPathname(\n        openGraph.url,\n        metadataBase,\n        await pathname,\n        metadataContext\n      )\n    : null\n\n  return resolved\n}\n\nconst TwitterBasicInfoKeys = [\n  'site',\n  'siteId',\n  'creator',\n  'creatorId',\n  'description',\n] as const\n\nexport const resolveTwitter: FieldResolverExtraArgs<\n  'twitter',\n  [ResolvedMetadataBase, MetadataContext, string | null]\n> = (twitter, metadataBase, metadataContext, titleTemplate) => {\n  if (!twitter) return null\n  let card = 'card' in twitter ? twitter.card : undefined\n  const resolved = {\n    ...twitter,\n    title: resolveTitle(twitter.title, titleTemplate),\n  } as ResolvedTwitterMetadata\n  for (const infoKey of TwitterBasicInfoKeys) {\n    resolved[infoKey] = twitter[infoKey] || null\n  }\n\n  resolved.images = resolveImages(\n    twitter.images,\n    metadataBase,\n    metadataContext.isStaticMetadataRouteFile\n  )\n\n  card = card || (resolved.images?.length ? 'summary_large_image' : 'summary')\n  resolved.card = card\n\n  if ('card' in resolved) {\n    switch (resolved.card) {\n      case 'player': {\n        resolved.players = resolveAsArrayOrUndefined(resolved.players) || []\n        break\n      }\n      case 'app': {\n        resolved.app = resolved.app || {}\n        break\n      }\n      case 'summary':\n      case 'summary_large_image':\n        break\n      default:\n        resolved satisfies never\n    }\n  }\n\n  return resolved\n}\n"],"names":["resolveImages","resolveOpenGraph","resolveTwitter","OgTypeFields","article","song","playlist","radio","video","basic","resolveAndValidateImage","item","metadataBase","isStaticMetadataRouteFile","undefined","isItemUrl","isStringOrURL","inputUrl","url","isUsingVercelSystemEnvironmentVariables","Boolean","process","env","VERCEL","isRelativeUrl","isFullStringUrl","fallbackMetadataBase","getSocialImageMetadataBaseFallback","shouldWarn","NODE_ENV","warnOnce","origin","resolveUrl","images","resolvedImages","resolveAsArrayOrUndefined","nonNullableImages","resolvedItem","push","ogTypeToFields","book","getFieldsByOgType","ogType","concat","openGraph","pathname","metadataContext","titleTemplate","resolveProps","target","og","type","keys","k","key","value","resolveArray","resolved","title","resolveTitle","resolveAbsoluteUrlWithPathname","TwitterBasicInfoKeys","twitter","card","infoKey","length","players","app"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1923, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/interop-default.ts"],"sourcesContent":["export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n"],"names":["interopDefault","mod","default"],"mappings":";;;+BAAgBA,kBAAAA;;;eAAAA;;;AAAT,SAASA,eAAeC,GAAQ;IACrC,OAAOA,IAAIC,OAAO,IAAID;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1939, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolvers/resolve-basics.ts"],"sourcesContent":["import type {\n  AlternateLinkDescriptor,\n  ResolvedAlternateURLs,\n} from '../types/alternative-urls-types'\nimport type {\n  Metadata,\n  ResolvedMetadata,\n  Viewport,\n} from '../types/metadata-interface'\nimport type { ResolvedVerification } from '../types/metadata-types'\nimport type {\n  FieldResolver,\n  AsyncFieldResolverExtraArgs,\n  MetadataContext,\n} from '../types/resolvers'\nimport { resolveAsArrayOrUndefined } from '../generate/utils'\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url'\n\nfunction resolveAlternateUrl(\n  url: string | URL,\n  metadataBase: URL | null,\n  pathname: string,\n  metadataContext: MetadataContext\n) {\n  // If alter native url is an URL instance,\n  // we treat it as a URL base and resolve with current pathname\n  if (url instanceof URL) {\n    const newUrl = new URL(pathname, url)\n    url.searchParams.forEach((value, key) =>\n      newUrl.searchParams.set(key, value)\n    )\n    url = newUrl\n  }\n  return resolveAbsoluteUrlWithPathname(\n    url,\n    metadataBase,\n    pathname,\n    metadataContext\n  )\n}\n\nexport const resolveThemeColor: FieldResolver<'themeColor', Viewport> = (\n  themeColor\n) => {\n  if (!themeColor) return null\n  const themeColorDescriptors: Viewport['themeColor'] = []\n\n  resolveAsArrayOrUndefined(themeColor)?.forEach((descriptor) => {\n    if (typeof descriptor === 'string')\n      themeColorDescriptors.push({ color: descriptor })\n    else if (typeof descriptor === 'object')\n      themeColorDescriptors.push({\n        color: descriptor.color,\n        media: descriptor.media,\n      })\n  })\n\n  return themeColorDescriptors\n}\n\nasync function resolveUrlValuesOfObject(\n  obj:\n    | Record<\n        string,\n        string | URL | AlternateLinkDescriptor[] | null | undefined\n      >\n    | null\n    | undefined,\n  metadataBase: ResolvedMetadata['metadataBase'],\n  pathname: Promise<string>,\n  metadataContext: MetadataContext\n): Promise<null | Record<string, AlternateLinkDescriptor[]>> {\n  if (!obj) return null\n\n  const result: Record<string, AlternateLinkDescriptor[]> = {}\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === 'string' || value instanceof URL) {\n      const pathnameForUrl = await pathname\n      result[key] = [\n        {\n          url: resolveAlternateUrl(\n            value,\n            metadataBase,\n            pathnameForUrl,\n            metadataContext\n          ),\n        },\n      ]\n    } else if (value && value.length) {\n      result[key] = []\n      const pathnameForUrl = await pathname\n      value.forEach((item, index) => {\n        const url = resolveAlternateUrl(\n          item.url,\n          metadataBase,\n          pathnameForUrl,\n          metadataContext\n        )\n        result[key][index] = {\n          url,\n          title: item.title,\n        }\n      })\n    }\n  }\n  return result\n}\n\nasync function resolveCanonicalUrl(\n  urlOrDescriptor: string | URL | null | AlternateLinkDescriptor | undefined,\n  metadataBase: URL | null,\n  pathname: Promise<string>,\n  metadataContext: MetadataContext\n): Promise<null | AlternateLinkDescriptor> {\n  if (!urlOrDescriptor) return null\n\n  const url =\n    typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL\n      ? urlOrDescriptor\n      : urlOrDescriptor.url\n\n  const pathnameForUrl = await pathname\n\n  // Return string url because structureClone can't handle URL instance\n  return {\n    url: resolveAlternateUrl(\n      url,\n      metadataBase,\n      pathnameForUrl,\n      metadataContext\n    ),\n  }\n}\n\nexport const resolveAlternates: AsyncFieldResolverExtraArgs<\n  'alternates',\n  [ResolvedMetadata['metadataBase'], Promise<string>, MetadataContext]\n> = async (alternates, metadataBase, pathname, context) => {\n  if (!alternates) return null\n\n  const canonical = await resolveCanonicalUrl(\n    alternates.canonical,\n    metadataBase,\n    pathname,\n    context\n  )\n  const languages = await resolveUrlValuesOfObject(\n    alternates.languages,\n    metadataBase,\n    pathname,\n    context\n  )\n  const media = await resolveUrlValuesOfObject(\n    alternates.media,\n    metadataBase,\n    pathname,\n    context\n  )\n  const types = await resolveUrlValuesOfObject(\n    alternates.types,\n    metadataBase,\n    pathname,\n    context\n  )\n\n  const result: ResolvedAlternateURLs = {\n    canonical,\n    languages,\n    media,\n    types,\n  }\n\n  return result\n}\n\nconst robotsKeys = [\n  'noarchive',\n  'nosnippet',\n  'noimageindex',\n  'nocache',\n  'notranslate',\n  'indexifembedded',\n  'nositelinkssearchbox',\n  'unavailable_after',\n  'max-video-preview',\n  'max-image-preview',\n  'max-snippet',\n] as const\nconst resolveRobotsValue: (robots: Metadata['robots']) => string | null = (\n  robots\n) => {\n  if (!robots) return null\n  if (typeof robots === 'string') return robots\n\n  const values: string[] = []\n\n  if (robots.index) values.push('index')\n  else if (typeof robots.index === 'boolean') values.push('noindex')\n\n  if (robots.follow) values.push('follow')\n  else if (typeof robots.follow === 'boolean') values.push('nofollow')\n\n  for (const key of robotsKeys) {\n    const value = robots[key]\n    if (typeof value !== 'undefined' && value !== false) {\n      values.push(typeof value === 'boolean' ? key : `${key}:${value}`)\n    }\n  }\n\n  return values.join(', ')\n}\n\nexport const resolveRobots: FieldResolver<'robots'> = (robots) => {\n  if (!robots) return null\n  return {\n    basic: resolveRobotsValue(robots),\n    googleBot:\n      typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null,\n  }\n}\n\nconst VerificationKeys = ['google', 'yahoo', 'yandex', 'me', 'other'] as const\nexport const resolveVerification: FieldResolver<'verification'> = (\n  verification\n) => {\n  if (!verification) return null\n  const res: ResolvedVerification = {}\n\n  for (const key of VerificationKeys) {\n    const value = verification[key]\n    if (value) {\n      if (key === 'other') {\n        res.other = {}\n        for (const otherKey in verification.other) {\n          const otherValue = resolveAsArrayOrUndefined(\n            verification.other[otherKey]\n          )\n          if (otherValue) res.other[otherKey] = otherValue\n        }\n      } else res[key] = resolveAsArrayOrUndefined(value) as (string | number)[]\n    }\n  }\n  return res\n}\n\nexport const resolveAppleWebApp: FieldResolver<'appleWebApp'> = (appWebApp) => {\n  if (!appWebApp) return null\n  if (appWebApp === true) {\n    return {\n      capable: true,\n    }\n  }\n\n  const startupImages = appWebApp.startupImage\n    ? resolveAsArrayOrUndefined(appWebApp.startupImage)?.map((item) =>\n        typeof item === 'string' ? { url: item } : item\n      )\n    : null\n\n  return {\n    capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n    title: appWebApp.title || null,\n    startupImage: startupImages,\n    statusBarStyle: appWebApp.statusBarStyle || 'default',\n  }\n}\n\nexport const resolveAppLinks: FieldResolver<'appLinks'> = (appLinks) => {\n  if (!appLinks) return null\n  for (const key in appLinks) {\n    // @ts-ignore // TODO: type infer\n    appLinks[key] = resolveAsArrayOrUndefined(appLinks[key])\n  }\n  return appLinks as ResolvedMetadata['appLinks']\n}\n\nexport const resolveItunes: AsyncFieldResolverExtraArgs<\n  'itunes',\n  [ResolvedMetadata['metadataBase'], Promise<string>, MetadataContext]\n> = async (itunes, metadataBase, pathname, context) => {\n  if (!itunes) return null\n  return {\n    appId: itunes.appId,\n    appArgument: itunes.appArgument\n      ? resolveAlternateUrl(\n          itunes.appArgument,\n          metadataBase,\n          await pathname,\n          context\n        )\n      : undefined,\n  }\n}\n\nexport const resolveFacebook: FieldResolver<'facebook'> = (facebook) => {\n  if (!facebook) return null\n  return {\n    appId: facebook.appId,\n    admins: resolveAsArrayOrUndefined(facebook.admins),\n  }\n}\n\nexport const resolvePagination: AsyncFieldResolverExtraArgs<\n  'pagination',\n  [ResolvedMetadata['metadataBase'], Promise<string>, MetadataContext]\n> = async (pagination, metadataBase, pathname, context) => {\n  return {\n    previous: pagination?.previous\n      ? resolveAlternateUrl(\n          pagination.previous,\n          metadataBase,\n          await pathname,\n          context\n        )\n      : null,\n    next: pagination?.next\n      ? resolveAlternateUrl(\n          pagination.next,\n          metadataBase,\n          await pathname,\n          context\n        )\n      : null,\n  }\n}\n"],"names":["resolveAlternates","resolveAppLinks","resolveAppleWebApp","resolveFacebook","resolveItunes","resolvePagination","resolveRobots","resolveThemeColor","resolveVerification","resolveAlternateUrl","url","metadataBase","pathname","metadataContext","URL","newUrl","searchParams","forEach","value","key","set","resolveAbsoluteUrlWithPathname","themeColor","resolveAsArrayOrUndefined","themeColorDescriptors","descriptor","push","color","media","resolveUrlValuesOfObject","obj","result","Object","entries","pathnameForUrl","length","item","index","title","resolveCanonicalUrl","urlOrDescriptor","alternates","context","canonical","languages","types","robotsKeys","resolveRobotsValue","robots","values","follow","join","basic","googleBot","VerificationKeys","verification","res","other","otherKey","otherValue","appWebApp","capable","startupImages","startupImage","map","statusBarStyle","appLinks","itunes","appId","appArgument","undefined","facebook","admins","pagination","previous","next"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolvers/resolve-icons.ts"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { Icon, IconDescriptor } from '../types/metadata-types'\nimport type { FieldResolver } from '../types/resolvers'\nimport { resolveAsArrayOrUndefined } from '../generate/utils'\nimport { isStringOrURL } from './resolve-url'\nimport { IconKeys } from '../constants'\n\nexport function resolveIcon(icon: Icon): IconDescriptor {\n  if (isStringOrURL(icon)) return { url: icon }\n  else if (Array.isArray(icon)) return icon\n  return icon\n}\n\nexport const resolveIcons: FieldResolver<'icons'> = (icons) => {\n  if (!icons) {\n    return null\n  }\n\n  const resolved: ResolvedMetadata['icons'] = {\n    icon: [],\n    apple: [],\n  }\n  if (Array.isArray(icons)) {\n    resolved.icon = icons.map(resolveIcon).filter(Boolean)\n  } else if (isStringOrURL(icons)) {\n    resolved.icon = [resolveIcon(icons)]\n  } else {\n    for (const key of IconKeys) {\n      const values = resolveAsArrayOrUndefined(icons[key])\n      if (values) resolved[key] = values.map(resolveIcon)\n    }\n  }\n  return resolved\n}\n"],"names":["resolveIcon","resolveIcons","icon","isStringOrURL","url","Array","isArray","icons","resolved","apple","map","filter","Boolean","key","IconKeys","values","resolveAsArrayOrUndefined"],"mappings":";;;;;;;;;;;;;;IAOgBA,WAAW,EAAA;eAAXA;;IAMHC,YAAY,EAAA;eAAZA;;;uBAV6B;4BACZ;2BACL;AAElB,SAASD,YAAYE,IAAU;IACpC,IAAIC,CAAAA,GAAAA,YAAAA,aAAa,EAACD,OAAO,OAAO;QAAEE,KAAKF;IAAK;SACvC,IAAIG,MAAMC,OAAO,CAACJ,OAAO,OAAOA;IACrC,OAAOA;AACT;AAEO,MAAMD,eAAuC,CAACM;IACnD,IAAI,CAACA,OAAO;QACV,OAAO;IACT;IAEA,MAAMC,WAAsC;QAC1CN,MAAM,EAAE;QACRO,OAAO,EAAE;IACX;IACA,IAAIJ,MAAMC,OAAO,CAACC,QAAQ;QACxBC,SAASN,IAAI,GAAGK,MAAMG,GAAG,CAACV,aAAaW,MAAM,CAACC;IAChD,OAAO,IAAIT,CAAAA,GAAAA,YAAAA,aAAa,EAACI,QAAQ;QAC/BC,SAASN,IAAI,GAAG;YAACF,YAAYO;SAAO;IACtC,OAAO;QACL,KAAK,MAAMM,OAAOC,WAAAA,QAAQ,CAAE;YAC1B,MAAMC,SAASC,CAAAA,GAAAA,OAAAA,yBAAyB,EAACT,KAAK,CAACM,IAAI;YACnD,IAAIE,QAAQP,QAAQ,CAACK,IAAI,GAAGE,OAAOL,GAAG,CAACV;QACzC;IACF;IACA,OAAOQ;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/clone-metadata.ts"],"sourcesContent":["import type {\n  ResolvedMetadata,\n  ResolvedViewport,\n} from './types/metadata-interface'\n\nconst TYPE_URL = '__METADATA_URL'\n\nfunction replacer(_key: string, val: any) {\n  // clone URL as string but recover it as URL\n  if (val instanceof URL) {\n    return { _type: TYPE_URL, value: val.href }\n  }\n  return val\n}\n\nfunction reviver(_key: string, val: any) {\n  if (typeof val === 'object' && val !== null && val._type === TYPE_URL) {\n    return new URL(val.value)\n  }\n  return val\n}\n\nexport function cloneMetadata<T extends ResolvedMetadata | ResolvedViewport>(\n  metadata: T\n): T {\n  const jsonString = JSON.stringify(metadata, replacer)\n  return JSON.parse(jsonString, reviver)\n}\n"],"names":["cloneMetadata","TYPE_URL","replacer","_key","val","URL","_type","value","href","reviver","metadata","jsonString","JSON","stringify","parse"],"mappings":";;;+BAsBgBA,iBAAAA;;;eAAAA;;;AAjBhB,MAAMC,WAAW;AAEjB,SAASC,SAASC,IAAY,EAAEC,GAAQ;IACtC,4CAA4C;IAC5C,IAAIA,eAAeC,KAAK;QACtB,OAAO;YAAEC,OAAOL;YAAUM,OAAOH,IAAII,IAAI;QAAC;IAC5C;IACA,OAAOJ;AACT;AAEA,SAASK,QAAQN,IAAY,EAAEC,GAAQ;IACrC,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQA,IAAIE,KAAK,KAAKL,UAAU;QACrE,OAAO,IAAII,IAAID,IAAIG,KAAK;IAC1B;IACA,OAAOH;AACT;AAEO,SAASJ,cACdU,QAAW;IAEX,MAAMC,aAAaC,KAAKC,SAAS,CAACH,UAAUR;IAC5C,OAAOU,KAAKE,KAAK,CAACH,YAAYF;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/resolve-metadata.ts"],"sourcesContent":["import type {\n  Metadata,\n  ResolvedMetadata,\n  ResolvedViewport,\n  ResolvingMetadata,\n  ResolvingViewport,\n  Viewport,\n} from './types/metadata-interface'\nimport type { MetadataImageModule } from '../../build/webpack/loaders/metadata/types'\nimport type { GetDynamicParamFromSegment } from '../../server/app-render/app-render'\nimport type { Twitter } from './types/twitter-types'\nimport type { OpenGraph } from './types/opengraph-types'\nimport type { AppDirModules } from '../../build/webpack/loaders/next-app-loader'\nimport type { MetadataContext } from './types/resolvers'\nimport type { LoaderTree } from '../../server/lib/app-dir-module'\nimport type {\n  AbsoluteTemplateString,\n  IconDescriptor,\n  ResolvedIcons,\n} from './types/metadata-types'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { StaticMetadata } from './types/icons'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport type { Params } from '../../server/request/params'\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only'\n\nimport { cache } from 'react'\nimport {\n  createDefaultMetadata,\n  createDefaultViewport,\n} from './default-metadata'\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph'\nimport { resolveTitle } from './resolvers/resolve-title'\nimport { resolveAsArrayOrUndefined } from './generate/utils'\nimport {\n  getComponentTypeModule,\n  getLayoutOrPageModule,\n} from '../../server/lib/app-dir-module'\nimport { interopDefault } from '../interop-default'\nimport {\n  resolveAlternates,\n  resolveAppleWebApp,\n  resolveAppLinks,\n  resolveRobots,\n  resolveThemeColor,\n  resolveVerification,\n  resolveItunes,\n  resolveFacebook,\n  resolvePagination,\n} from './resolvers/resolve-basics'\nimport { resolveIcons } from './resolvers/resolve-icons'\nimport { getTracer } from '../../server/lib/trace/tracer'\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants'\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment'\nimport * as Log from '../../build/output/log'\nimport { createServerParamsForMetadata } from '../../server/request/params'\n\ntype StaticIcons = Pick<ResolvedIcons, 'icon' | 'apple'>\n\ntype MetadataResolver = (\n  parent: ResolvingMetadata\n) => Metadata | Promise<Metadata>\ntype ViewportResolver = (\n  parent: ResolvingViewport\n) => Viewport | Promise<Viewport>\n\nexport type MetadataErrorType = 'not-found' | 'forbidden' | 'unauthorized'\n\nexport type MetadataItems = Array<\n  [Metadata | MetadataResolver | null, StaticMetadata]\n>\n\nexport type ViewportItems = Array<Viewport | ViewportResolver | null>\n\ntype TitleTemplates = {\n  title: string | null\n  twitter: string | null\n  openGraph: string | null\n}\n\ntype BuildState = {\n  warnings: Set<string>\n}\n\ntype LayoutProps = {\n  params: { [key: string]: any }\n}\ntype PageProps = {\n  params: { [key: string]: any }\n  searchParams: { [key: string]: any }\n}\n\nfunction isFavicon(icon: IconDescriptor | undefined): boolean {\n  if (!icon) {\n    return false\n  }\n\n  // turbopack appends a hash to all images\n  return (\n    (icon.url === '/favicon.ico' ||\n      icon.url.toString().startsWith('/favicon.ico?')) &&\n    icon.type === 'image/x-icon'\n  )\n}\n\nasync function mergeStaticMetadata(\n  source: Metadata | null,\n  target: ResolvedMetadata,\n  staticFilesMetadata: StaticMetadata,\n  metadataContext: MetadataContext,\n  titleTemplates: TitleTemplates,\n  leafSegmentStaticIcons: StaticIcons,\n  pathname: Promise<string>\n): Promise<ResolvedMetadata> {\n  if (!staticFilesMetadata) return target\n  const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata\n\n  // Keep updating the static icons in the most leaf node\n\n  if (icon) {\n    leafSegmentStaticIcons.icon = icon\n  }\n  if (apple) {\n    leafSegmentStaticIcons.apple = apple\n  }\n\n  // file based metadata is specified and current level metadata twitter.images is not specified\n  if (twitter && !source?.twitter?.hasOwnProperty('images')) {\n    const resolvedTwitter = resolveTwitter(\n      { ...target.twitter, images: twitter } as Twitter,\n      target.metadataBase,\n      { ...metadataContext, isStaticMetadataRouteFile: true },\n      titleTemplates.twitter\n    )\n    target.twitter = resolvedTwitter\n  }\n\n  // file based metadata is specified and current level metadata openGraph.images is not specified\n  if (openGraph && !source?.openGraph?.hasOwnProperty('images')) {\n    const resolvedOpenGraph = await resolveOpenGraph(\n      { ...target.openGraph, images: openGraph } as OpenGraph,\n      target.metadataBase,\n      pathname,\n      { ...metadataContext, isStaticMetadataRouteFile: true },\n      titleTemplates.openGraph\n    )\n    target.openGraph = resolvedOpenGraph\n  }\n  if (manifest) {\n    target.manifest = manifest\n  }\n\n  return target\n}\n\n// Merge the source metadata into the resolved target metadata.\nasync function mergeMetadata(\n  route: string,\n  pathname: Promise<string>,\n  {\n    source,\n    target,\n    staticFilesMetadata,\n    titleTemplates,\n    metadataContext,\n    buildState,\n    leafSegmentStaticIcons,\n  }: {\n    source: Metadata | null\n    target: ResolvedMetadata\n    staticFilesMetadata: StaticMetadata\n    titleTemplates: TitleTemplates\n    metadataContext: MetadataContext\n    buildState: BuildState\n    leafSegmentStaticIcons: StaticIcons\n  }\n): Promise<ResolvedMetadata> {\n  // If there's override metadata, prefer it otherwise fallback to the default metadata.\n  const metadataBase =\n    typeof source?.metadataBase !== 'undefined'\n      ? source.metadataBase\n      : target.metadataBase\n  for (const key_ in source) {\n    const key = key_ as keyof Metadata\n\n    switch (key) {\n      case 'title': {\n        target.title = resolveTitle(source.title, titleTemplates.title)\n        break\n      }\n      case 'alternates': {\n        target.alternates = await resolveAlternates(\n          source.alternates,\n          metadataBase,\n          pathname,\n          metadataContext\n        )\n        break\n      }\n      case 'openGraph': {\n        target.openGraph = await resolveOpenGraph(\n          source.openGraph,\n          metadataBase,\n          pathname,\n          metadataContext,\n          titleTemplates.openGraph\n        )\n        break\n      }\n      case 'twitter': {\n        target.twitter = resolveTwitter(\n          source.twitter,\n          metadataBase,\n          metadataContext,\n          titleTemplates.twitter\n        )\n        break\n      }\n      case 'facebook':\n        target.facebook = resolveFacebook(source.facebook)\n        break\n      case 'verification':\n        target.verification = resolveVerification(source.verification)\n        break\n\n      case 'icons': {\n        target.icons = resolveIcons(source.icons)\n        break\n      }\n      case 'appleWebApp':\n        target.appleWebApp = resolveAppleWebApp(source.appleWebApp)\n        break\n      case 'appLinks':\n        target.appLinks = resolveAppLinks(source.appLinks)\n        break\n      case 'robots': {\n        target.robots = resolveRobots(source.robots)\n        break\n      }\n      case 'archives':\n      case 'assets':\n      case 'bookmarks':\n      case 'keywords': {\n        target[key] = resolveAsArrayOrUndefined(source[key])\n        break\n      }\n      case 'authors': {\n        target[key] = resolveAsArrayOrUndefined(source.authors)\n        break\n      }\n      case 'itunes': {\n        target[key] = await resolveItunes(\n          source.itunes,\n          metadataBase,\n          pathname,\n          metadataContext\n        )\n        break\n      }\n      case 'pagination': {\n        target.pagination = await resolvePagination(\n          source.pagination,\n          metadataBase,\n          pathname,\n          metadataContext\n        )\n        break\n      }\n      // directly assign fields that fallback to null\n      case 'abstract':\n      case 'applicationName':\n      case 'description':\n      case 'generator':\n      case 'creator':\n      case 'publisher':\n      case 'category':\n      case 'classification':\n      case 'referrer':\n      case 'formatDetection':\n      case 'manifest':\n      case 'pinterest':\n        // @ts-ignore TODO: support inferring\n        target[key] = source[key] || null\n        break\n      case 'other':\n        target.other = Object.assign({}, target.other, source.other)\n        break\n      case 'metadataBase':\n        target.metadataBase = metadataBase\n        break\n\n      case 'apple-touch-fullscreen': {\n        buildState.warnings.add(\n          `Use appleWebApp instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`\n        )\n        break\n      }\n      case 'apple-touch-icon-precomposed': {\n        buildState.warnings.add(\n          `Use icons.apple instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`\n        )\n        break\n      }\n      case 'themeColor':\n      case 'colorScheme':\n      case 'viewport':\n        if (source[key] != null) {\n          buildState.warnings.add(\n            `Unsupported metadata ${key} is configured in metadata export in ${route}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`\n          )\n        }\n        break\n      default: {\n        key satisfies never\n      }\n    }\n  }\n  return mergeStaticMetadata(\n    source,\n    target,\n    staticFilesMetadata,\n    metadataContext,\n    titleTemplates,\n    leafSegmentStaticIcons,\n    pathname\n  )\n}\n\nfunction mergeViewport({\n  target,\n  source,\n}: {\n  target: ResolvedViewport\n  source: Viewport | null\n}): void {\n  if (!source) return\n  for (const key_ in source) {\n    const key = key_ as keyof Viewport\n\n    switch (key) {\n      case 'themeColor': {\n        target.themeColor = resolveThemeColor(source.themeColor)\n        break\n      }\n      case 'colorScheme':\n        target.colorScheme = source.colorScheme || null\n        break\n      case 'width':\n      case 'height':\n      case 'initialScale':\n      case 'minimumScale':\n      case 'maximumScale':\n      case 'userScalable':\n      case 'viewportFit':\n      case 'interactiveWidget':\n        // always override the target with the source\n        // @ts-ignore viewport properties\n        target[key] = source[key]\n        break\n      default:\n        key satisfies never\n    }\n  }\n}\n\nfunction getDefinedViewport(\n  mod: any,\n  props: any,\n  tracingProps: { route: string }\n): Viewport | ViewportResolver | null {\n  if (typeof mod.generateViewport === 'function') {\n    const { route } = tracingProps\n    return (parent: ResolvingViewport) =>\n      getTracer().trace(\n        ResolveMetadataSpan.generateViewport,\n        {\n          spanName: `generateViewport ${route}`,\n          attributes: {\n            'next.page': route,\n          },\n        },\n        () => mod.generateViewport(props, parent)\n      )\n  }\n  return mod.viewport || null\n}\n\nfunction getDefinedMetadata(\n  mod: any,\n  props: any,\n  tracingProps: { route: string }\n): Metadata | MetadataResolver | null {\n  if (typeof mod.generateMetadata === 'function') {\n    const { route } = tracingProps\n    return (parent: ResolvingMetadata) =>\n      getTracer().trace(\n        ResolveMetadataSpan.generateMetadata,\n        {\n          spanName: `generateMetadata ${route}`,\n          attributes: {\n            'next.page': route,\n          },\n        },\n        () => mod.generateMetadata(props, parent)\n      )\n  }\n  return mod.metadata || null\n}\n\nasync function collectStaticImagesFiles(\n  metadata: AppDirModules['metadata'],\n  props: any,\n  type: keyof NonNullable<AppDirModules['metadata']>\n) {\n  if (!metadata?.[type]) return undefined\n\n  const iconPromises = metadata[type as 'icon' | 'apple'].map(\n    async (imageModule: (p: any) => Promise<MetadataImageModule[]>) =>\n      interopDefault(await imageModule(props))\n  )\n\n  return iconPromises?.length > 0\n    ? (await Promise.all(iconPromises))?.flat()\n    : undefined\n}\n\nasync function resolveStaticMetadata(\n  modules: AppDirModules,\n  props: any\n): Promise<StaticMetadata> {\n  const { metadata } = modules\n  if (!metadata) return null\n\n  const [icon, apple, openGraph, twitter] = await Promise.all([\n    collectStaticImagesFiles(metadata, props, 'icon'),\n    collectStaticImagesFiles(metadata, props, 'apple'),\n    collectStaticImagesFiles(metadata, props, 'openGraph'),\n    collectStaticImagesFiles(metadata, props, 'twitter'),\n  ])\n\n  const staticMetadata = {\n    icon,\n    apple,\n    openGraph,\n    twitter,\n    manifest: metadata.manifest,\n  }\n\n  return staticMetadata\n}\n\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({\n  tree,\n  metadataItems,\n  errorMetadataItem,\n  props,\n  route,\n  errorConvention,\n}: {\n  tree: LoaderTree\n  metadataItems: MetadataItems\n  errorMetadataItem: MetadataItems[number]\n  props: any\n  route: string\n  errorConvention?: MetadataErrorType\n}) {\n  let mod\n  let modType\n  const hasErrorConventionComponent = Boolean(\n    errorConvention && tree[2][errorConvention]\n  )\n  if (errorConvention) {\n    mod = await getComponentTypeModule(tree, 'layout')\n    modType = errorConvention\n  } else {\n    const { mod: layoutOrPageMod, modType: layoutOrPageModType } =\n      await getLayoutOrPageModule(tree)\n    mod = layoutOrPageMod\n    modType = layoutOrPageModType\n  }\n\n  if (modType) {\n    route += `/${modType}`\n  }\n\n  const staticFilesMetadata = await resolveStaticMetadata(tree[2], props)\n  const metadataExport = mod ? getDefinedMetadata(mod, props, { route }) : null\n\n  metadataItems.push([metadataExport, staticFilesMetadata])\n\n  if (hasErrorConventionComponent && errorConvention) {\n    const errorMod = await getComponentTypeModule(tree, errorConvention)\n    const errorMetadataExport = errorMod\n      ? getDefinedMetadata(errorMod, props, { route })\n      : null\n\n    errorMetadataItem[0] = errorMetadataExport\n    errorMetadataItem[1] = staticFilesMetadata\n  }\n}\n\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectViewport({\n  tree,\n  viewportItems,\n  errorViewportItemRef,\n  props,\n  route,\n  errorConvention,\n}: {\n  tree: LoaderTree\n  viewportItems: ViewportItems\n  errorViewportItemRef: ErrorViewportItemRef\n  props: any\n  route: string\n  errorConvention?: MetadataErrorType\n}) {\n  let mod\n  let modType\n  const hasErrorConventionComponent = Boolean(\n    errorConvention && tree[2][errorConvention]\n  )\n  if (errorConvention) {\n    mod = await getComponentTypeModule(tree, 'layout')\n    modType = errorConvention\n  } else {\n    const { mod: layoutOrPageMod, modType: layoutOrPageModType } =\n      await getLayoutOrPageModule(tree)\n    mod = layoutOrPageMod\n    modType = layoutOrPageModType\n  }\n\n  if (modType) {\n    route += `/${modType}`\n  }\n\n  const viewportExport = mod ? getDefinedViewport(mod, props, { route }) : null\n\n  viewportItems.push(viewportExport)\n\n  if (hasErrorConventionComponent && errorConvention) {\n    const errorMod = await getComponentTypeModule(tree, errorConvention)\n    const errorViewportExport = errorMod\n      ? getDefinedViewport(errorMod, props, { route })\n      : null\n\n    errorViewportItemRef.current = errorViewportExport\n  }\n}\n\nconst resolveMetadataItems = cache(async function (\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n) {\n  const parentParams = {}\n  const metadataItems: MetadataItems = []\n  const errorMetadataItem: MetadataItems[number] = [null, null]\n  const treePrefix = undefined\n  return resolveMetadataItemsImpl(\n    metadataItems,\n    tree,\n    treePrefix,\n    parentParams,\n    searchParams,\n    errorConvention,\n    errorMetadataItem,\n    getDynamicParamFromSegment,\n    workStore\n  )\n})\n\nasync function resolveMetadataItemsImpl(\n  metadataItems: MetadataItems,\n  tree: LoaderTree,\n  /** Provided tree can be nested subtree, this argument says what is the path of such subtree */\n  treePrefix: undefined | string[],\n  parentParams: Params,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  errorMetadataItem: MetadataItems[number],\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n): Promise<MetadataItems> {\n  const [segment, parallelRoutes, { page }] = tree\n  const currentTreePrefix =\n    treePrefix && treePrefix.length ? [...treePrefix, segment] : [segment]\n  const isPage = typeof page !== 'undefined'\n\n  // Handle dynamic segment params.\n  const segmentParam = getDynamicParamFromSegment(segment)\n  /**\n   * Create object holding the parent params and current params\n   */\n  let currentParams = parentParams\n  if (segmentParam && segmentParam.value !== null) {\n    currentParams = {\n      ...parentParams,\n      [segmentParam.param]: segmentParam.value,\n    }\n  }\n\n  const params = createServerParamsForMetadata(currentParams, workStore)\n\n  let layerProps: LayoutProps | PageProps\n  if (isPage) {\n    layerProps = {\n      params,\n      searchParams,\n    }\n  } else {\n    layerProps = {\n      params,\n    }\n  }\n\n  await collectMetadata({\n    tree,\n    metadataItems,\n    errorMetadataItem,\n    errorConvention,\n    props: layerProps,\n    route: currentTreePrefix\n      // __PAGE__ shouldn't be shown in a route\n      .filter((s) => s !== PAGE_SEGMENT_KEY)\n      .join('/'),\n  })\n\n  for (const key in parallelRoutes) {\n    const childTree = parallelRoutes[key]\n    await resolveMetadataItemsImpl(\n      metadataItems,\n      childTree,\n      currentTreePrefix,\n      currentParams,\n      searchParams,\n      errorConvention,\n      errorMetadataItem,\n      getDynamicParamFromSegment,\n      workStore\n    )\n  }\n\n  if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n    // If there are no parallel routes, place error metadata as the last item.\n    // e.g. layout -> layout -> not-found\n    metadataItems.push(errorMetadataItem)\n  }\n\n  return metadataItems\n}\n\ntype ErrorViewportItemRef = { current: ViewportItems[number] }\nconst resolveViewportItems = cache(async function (\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n) {\n  const parentParams = {}\n  const viewportItems: ViewportItems = []\n  const errorViewportItemRef: ErrorViewportItemRef = {\n    current: null,\n  }\n  const treePrefix = undefined\n  return resolveViewportItemsImpl(\n    viewportItems,\n    tree,\n    treePrefix,\n    parentParams,\n    searchParams,\n    errorConvention,\n    errorViewportItemRef,\n    getDynamicParamFromSegment,\n    workStore\n  )\n})\n\nasync function resolveViewportItemsImpl(\n  viewportItems: ViewportItems,\n  tree: LoaderTree,\n  /** Provided tree can be nested subtree, this argument says what is the path of such subtree */\n  treePrefix: undefined | string[],\n  parentParams: Params,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  errorViewportItemRef: ErrorViewportItemRef,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n): Promise<ViewportItems> {\n  const [segment, parallelRoutes, { page }] = tree\n  const currentTreePrefix =\n    treePrefix && treePrefix.length ? [...treePrefix, segment] : [segment]\n  const isPage = typeof page !== 'undefined'\n\n  // Handle dynamic segment params.\n  const segmentParam = getDynamicParamFromSegment(segment)\n  /**\n   * Create object holding the parent params and current params\n   */\n  let currentParams = parentParams\n  if (segmentParam && segmentParam.value !== null) {\n    currentParams = {\n      ...parentParams,\n      [segmentParam.param]: segmentParam.value,\n    }\n  }\n\n  const params = createServerParamsForMetadata(currentParams, workStore)\n\n  let layerProps: LayoutProps | PageProps\n  if (isPage) {\n    layerProps = {\n      params,\n      searchParams,\n    }\n  } else {\n    layerProps = {\n      params,\n    }\n  }\n\n  await collectViewport({\n    tree,\n    viewportItems,\n    errorViewportItemRef,\n    errorConvention,\n    props: layerProps,\n    route: currentTreePrefix\n      // __PAGE__ shouldn't be shown in a route\n      .filter((s) => s !== PAGE_SEGMENT_KEY)\n      .join('/'),\n  })\n\n  for (const key in parallelRoutes) {\n    const childTree = parallelRoutes[key]\n    await resolveViewportItemsImpl(\n      viewportItems,\n      childTree,\n      currentTreePrefix,\n      currentParams,\n      searchParams,\n      errorConvention,\n      errorViewportItemRef,\n      getDynamicParamFromSegment,\n      workStore\n    )\n  }\n\n  if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n    // If there are no parallel routes, place error metadata as the last item.\n    // e.g. layout -> layout -> not-found\n    viewportItems.push(errorViewportItemRef.current)\n  }\n\n  return viewportItems\n}\n\ntype WithTitle = { title?: AbsoluteTemplateString | null }\ntype WithDescription = { description?: string | null }\n\nconst isTitleTruthy = (title: AbsoluteTemplateString | null | undefined) =>\n  !!title?.absolute\nconst hasTitle = (metadata: WithTitle | null) => isTitleTruthy(metadata?.title)\n\nfunction inheritFromMetadata(\n  target: (WithTitle & WithDescription) | null,\n  metadata: ResolvedMetadata\n) {\n  if (target) {\n    if (!hasTitle(target) && hasTitle(metadata)) {\n      target.title = metadata.title\n    }\n    if (!target.description && metadata.description) {\n      target.description = metadata.description\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = ['title', 'description', 'images'] as const\nfunction postProcessMetadata(\n  metadata: ResolvedMetadata,\n  favicon: any,\n  titleTemplates: TitleTemplates,\n  metadataContext: MetadataContext\n): ResolvedMetadata {\n  const { openGraph, twitter } = metadata\n\n  if (openGraph) {\n    // If there's openGraph information but not configured in twitter,\n    // inherit them from openGraph metadata.\n    let autoFillProps: Partial<{\n      [Key in (typeof commonOgKeys)[number]]: NonNullable<\n        ResolvedMetadata['openGraph']\n      >[Key]\n    }> = {}\n    const hasTwTitle = hasTitle(twitter)\n    const hasTwDescription = twitter?.description\n    const hasTwImages = Boolean(\n      twitter?.hasOwnProperty('images') && twitter.images\n    )\n    if (!hasTwTitle) {\n      if (isTitleTruthy(openGraph.title)) {\n        autoFillProps.title = openGraph.title\n      } else if (metadata.title && isTitleTruthy(metadata.title)) {\n        autoFillProps.title = metadata.title\n      }\n    }\n    if (!hasTwDescription)\n      autoFillProps.description =\n        openGraph.description || metadata.description || undefined\n    if (!hasTwImages) autoFillProps.images = openGraph.images\n\n    if (Object.keys(autoFillProps).length > 0) {\n      const partialTwitter = resolveTwitter(\n        autoFillProps,\n        metadata.metadataBase,\n        metadataContext,\n        titleTemplates.twitter\n      )\n      if (metadata.twitter) {\n        metadata.twitter = Object.assign({}, metadata.twitter, {\n          ...(!hasTwTitle && { title: partialTwitter?.title }),\n          ...(!hasTwDescription && {\n            description: partialTwitter?.description,\n          }),\n          ...(!hasTwImages && { images: partialTwitter?.images }),\n        })\n      } else {\n        metadata.twitter = partialTwitter\n      }\n    }\n  }\n\n  // If there's no title and description configured in openGraph or twitter,\n  // use the title and description from metadata.\n  inheritFromMetadata(openGraph, metadata)\n  inheritFromMetadata(twitter, metadata)\n\n  if (favicon) {\n    if (!metadata.icons) {\n      metadata.icons = {\n        icon: [],\n        apple: [],\n      }\n    }\n\n    metadata.icons.icon.unshift(favicon)\n  }\n\n  return metadata\n}\n\ntype Result<T> = null | T | Promise<null | T> | PromiseLike<null | T>\n\nfunction prerenderMetadata(metadataItems: MetadataItems) {\n  // If the index is a function then it is a resolver and the next slot\n  // is the corresponding result. If the index is not a function it is the result\n  // itself.\n  const resolversAndResults: Array<\n    ((value: ResolvedMetadata) => void) | Result<Metadata>\n  > = []\n  for (let i = 0; i < metadataItems.length; i++) {\n    const metadataExport = metadataItems[i][0]\n    getResult(resolversAndResults, metadataExport)\n  }\n  return resolversAndResults\n}\n\nfunction prerenderViewport(viewportItems: ViewportItems) {\n  // If the index is a function then it is a resolver and the next slot\n  // is the corresponding result. If the index is not a function it is the result\n  // itself.\n  const resolversAndResults: Array<\n    ((value: ResolvedViewport) => void) | Result<Viewport>\n  > = []\n  for (let i = 0; i < viewportItems.length; i++) {\n    const viewportExport = viewportItems[i]\n    getResult(resolversAndResults, viewportExport)\n  }\n  return resolversAndResults\n}\n\ntype Resolved<T> = T extends Metadata ? ResolvedMetadata : ResolvedViewport\n\nfunction getResult<T extends Metadata | Viewport>(\n  resolversAndResults: Array<((value: Resolved<T>) => void) | Result<T>>,\n  exportForResult: null | T | ((parent: Promise<Resolved<T>>) => Result<T>)\n) {\n  if (typeof exportForResult === 'function') {\n    const result = exportForResult(\n      new Promise<Resolved<T>>((resolve) => resolversAndResults.push(resolve))\n    )\n    resolversAndResults.push(result)\n    if (result instanceof Promise) {\n      // since we eager execute generateMetadata and\n      // they can reject at anytime we need to ensure\n      // we attach the catch handler right away to\n      // prevent unhandled rejections crashing the process\n      result.catch((err) => {\n        return {\n          __nextError: err,\n        }\n      })\n    }\n  } else if (typeof exportForResult === 'object') {\n    resolversAndResults.push(exportForResult)\n  } else {\n    resolversAndResults.push(null)\n  }\n}\n\nfunction resolvePendingResult<\n  ResolvedType extends ResolvedMetadata | ResolvedViewport,\n>(\n  parentResult: ResolvedType,\n  resolveParentResult: (value: ResolvedType) => void\n): void {\n  // In dev we clone and freeze to prevent relying on mutating resolvedMetadata directly.\n  // In prod we just pass resolvedMetadata through without any copying.\n  if (process.env.NODE_ENV === 'development') {\n    // @ts-expect-error -- DeepReadonly<T> is by definition not assignable to T\n    // Instead, we should only accept DeepReadonly<ResolvedType>\n    parentResult = (\n      require('../../shared/lib/deep-freeze') as typeof import('../../shared/lib/deep-freeze')\n    ).deepFreeze(\n      (\n        require('./clone-metadata') as typeof import('./clone-metadata')\n      ).cloneMetadata(parentResult)\n    )\n  }\n\n  resolveParentResult(parentResult)\n}\n\nexport async function accumulateMetadata(\n  route: string,\n  metadataItems: MetadataItems,\n  pathname: Promise<string>,\n  metadataContext: MetadataContext\n): Promise<ResolvedMetadata> {\n  let resolvedMetadata = createDefaultMetadata()\n\n  let titleTemplates: TitleTemplates = {\n    title: null,\n    twitter: null,\n    openGraph: null,\n  }\n\n  const buildState = {\n    warnings: new Set<string>(),\n  }\n\n  let favicon\n\n  // Collect the static icons in the most leaf node,\n  // since we don't collect all the static metadata icons in the parent segments.\n  const leafSegmentStaticIcons = {\n    icon: [],\n    apple: [],\n  }\n\n  const resolversAndResults = prerenderMetadata(metadataItems)\n  let resultIndex = 0\n\n  for (let i = 0; i < metadataItems.length; i++) {\n    const staticFilesMetadata = metadataItems[i][1]\n    // Treat favicon as special case, it should be the first icon in the list\n    // i <= 1 represents root layout, and if current page is also at root\n    if (i <= 1 && isFavicon(staticFilesMetadata?.icon?.[0])) {\n      const iconMod = staticFilesMetadata?.icon?.shift()\n      if (i === 0) favicon = iconMod\n    }\n\n    let pendingMetadata = resolversAndResults[resultIndex++]\n    if (typeof pendingMetadata === 'function') {\n      // This metadata item had a `generateMetadata` and\n      // we need to provide the currently resolved metadata\n      // to it before we continue;\n      const resolveParentMetadata = pendingMetadata\n      // we know that the next item is a result if this item\n      // was a resolver\n      pendingMetadata = resolversAndResults[resultIndex++] as Result<Metadata>\n\n      resolvePendingResult(resolvedMetadata, resolveParentMetadata)\n    }\n    // Otherwise the item was either null or a static export\n\n    let metadata: Metadata | null\n    if (isPromiseLike(pendingMetadata)) {\n      metadata = await pendingMetadata\n    } else {\n      metadata = pendingMetadata\n    }\n\n    resolvedMetadata = await mergeMetadata(route, pathname, {\n      target: resolvedMetadata,\n      source: metadata,\n      metadataContext,\n      staticFilesMetadata,\n      titleTemplates,\n      buildState,\n      leafSegmentStaticIcons,\n    })\n\n    // If the layout is the same layer with page, skip the leaf layout and leaf page\n    // The leaf layout and page are the last two items\n    if (i < metadataItems.length - 2) {\n      titleTemplates = {\n        title: resolvedMetadata.title?.template || null,\n        openGraph: resolvedMetadata.openGraph?.title.template || null,\n        twitter: resolvedMetadata.twitter?.title.template || null,\n      }\n    }\n  }\n\n  if (\n    leafSegmentStaticIcons.icon.length > 0 ||\n    leafSegmentStaticIcons.apple.length > 0\n  ) {\n    if (!resolvedMetadata.icons) {\n      resolvedMetadata.icons = {\n        icon: [],\n        apple: [],\n      }\n      if (leafSegmentStaticIcons.icon.length > 0) {\n        resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon)\n      }\n      if (leafSegmentStaticIcons.apple.length > 0) {\n        resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple)\n      }\n    }\n  }\n\n  // Only log warnings if there are any, and only once after the metadata resolving process is finished\n  if (buildState.warnings.size > 0) {\n    for (const warning of buildState.warnings) {\n      Log.warn(warning)\n    }\n  }\n\n  return postProcessMetadata(\n    resolvedMetadata,\n    favicon,\n    titleTemplates,\n    metadataContext\n  )\n}\n\nexport async function accumulateViewport(\n  viewportItems: ViewportItems\n): Promise<ResolvedViewport> {\n  const resolvedViewport: ResolvedViewport = createDefaultViewport()\n\n  const resolversAndResults = prerenderViewport(viewportItems)\n  let i = 0\n\n  while (i < resolversAndResults.length) {\n    let pendingViewport = resolversAndResults[i++]\n    if (typeof pendingViewport === 'function') {\n      // this viewport item had a `generateViewport` and\n      // we need to provide the currently resolved viewport\n      // to it before we continue;\n      const resolveParentViewport = pendingViewport\n      // we know that the next item is a result if this item\n      // was a resolver\n      pendingViewport = resolversAndResults[i++] as Result<Viewport>\n\n      resolvePendingResult(resolvedViewport, resolveParentViewport)\n    }\n    // Otherwise the item was either null or a static export\n\n    let viewport: Viewport | null\n    if (isPromiseLike(pendingViewport)) {\n      viewport = await pendingViewport\n    } else {\n      viewport = pendingViewport\n    }\n\n    mergeViewport({\n      target: resolvedViewport,\n      source: viewport,\n    })\n  }\n  return resolvedViewport\n}\n\n// Exposed API for metadata component, that directly resolve the loader tree and related context as resolved metadata.\nexport async function resolveMetadata(\n  tree: LoaderTree,\n  pathname: Promise<string>,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore,\n  metadataContext: MetadataContext\n): Promise<ResolvedMetadata> {\n  const metadataItems = await resolveMetadataItems(\n    tree,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    workStore\n  )\n  return accumulateMetadata(\n    workStore.route,\n    metadataItems,\n    pathname,\n    metadataContext\n  )\n}\n\n// Exposed API for viewport component, that directly resolve the loader tree and related context as resolved viewport.\nexport async function resolveViewport(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: MetadataErrorType | undefined,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n): Promise<ResolvedViewport> {\n  const viewportItems = await resolveViewportItems(\n    tree,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    workStore\n  )\n  return accumulateViewport(viewportItems)\n}\n\nfunction isPromiseLike<T>(\n  value: unknown | PromiseLike<T>\n): value is PromiseLike<T> {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof (value as PromiseLike<unknown>).then === 'function'\n  )\n}\n"],"names":["accumulateMetadata","accumulateViewport","resolveMetadata","resolveViewport","isFavicon","icon","url","toString","startsWith","type","mergeStaticMetadata","source","target","staticFilesMetadata","metadataContext","titleTemplates","leafSegmentStaticIcons","pathname","apple","openGraph","twitter","manifest","hasOwnProperty","resolvedTwitter","resolveTwitter","images","metadataBase","isStaticMetadataRouteFile","resolvedOpenGraph","resolveOpenGraph","mergeMetadata","route","buildState","key_","key","title","resolveTitle","alternates","resolveAlternates","facebook","resolveFacebook","verification","resolveVerification","icons","resolveIcons","appleWebApp","resolveAppleWebApp","appLinks","resolveAppLinks","robots","resolveRobots","resolveAsArrayOrUndefined","authors","resolveItunes","itunes","pagination","resolvePagination","other","Object","assign","warnings","add","mergeViewport","themeColor","resolveThemeColor","colorScheme","getDefinedViewport","mod","props","tracingProps","generateViewport","parent","getTracer","trace","ResolveMetadataSpan","spanName","attributes","viewport","getDefinedMetadata","generateMetadata","metadata","collectStaticImagesFiles","undefined","iconPromises","map","imageModule","interopDefault","length","Promise","all","flat","resolveStaticMetadata","modules","staticMetadata","collectMetadata","tree","metadataItems","errorMetadataItem","errorConvention","modType","hasErrorConventionComponent","Boolean","getComponentTypeModule","layoutOrPageMod","layoutOrPageModType","getLayoutOrPageModule","metadataExport","push","errorMod","errorMetadataExport","collectViewport","viewportItems","errorViewportItemRef","viewportExport","errorViewportExport","current","resolveMetadataItems","cache","searchParams","getDynamicParamFromSegment","workStore","parentParams","treePrefix","resolveMetadataItemsImpl","segment","parallelRoutes","page","currentTreePrefix","isPage","segmentParam","currentParams","value","param","params","createServerParamsForMetadata","layerProps","filter","s","PAGE_SEGMENT_KEY","join","childTree","keys","resolveViewportItems","resolveViewportItemsImpl","isTitleTruthy","absolute","hasTitle","inheritFromMetadata","description","commonOgKeys","postProcessMetadata","favicon","autoFillProps","hasTwTitle","hasTwDescription","hasTwImages","partialTwitter","unshift","prerenderMetadata","resolversAndResults","i","getResult","prerenderViewport","exportForResult","result","resolve","catch","err","__nextError","resolvePendingResult","parentResult","resolveParentResult","process","env","NODE_ENV","require","deepFreeze","cloneMetadata","resolvedMetadata","createDefaultMetadata","Set","resultIndex","iconMod","shift","pendingMetadata","resolveParentMetadata","isPromiseLike","template","size","warning","Log","warn","resolvedViewport","createDefaultViewport","pendingViewport","resolveParentViewport","then"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3042, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/metadata/metadata.tsx"],"sourcesContent":["import React, { Suspense, cache, cloneElement } from 'react'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { GetDynamicParamFromSegment } from '../../server/app-render/app-render'\nimport type { LoaderTree } from '../../server/lib/app-dir-module'\nimport type { StreamingMetadataResolvedState } from '../../client/components/metadata/types'\nimport type { SearchParams } from '../../server/request/search-params'\nimport {\n  AppleWebAppMeta,\n  FormatDetectionMeta,\n  ItunesMeta,\n  BasicMeta,\n  ViewportMeta,\n  VerificationMeta,\n  FacebookMeta,\n  PinterestMeta,\n} from './generate/basic'\nimport { AlternatesMetadata } from './generate/alternate'\nimport {\n  OpenGraphMetadata,\n  TwitterMetadata,\n  AppLinksMeta,\n} from './generate/opengraph'\nimport { IconsMetadata } from './generate/icons'\nimport {\n  type MetadataErrorType,\n  resolveMetadata,\n  resolveViewport,\n} from './resolve-metadata'\nimport { MetaFilter } from './generate/meta'\nimport type {\n  ResolvedMetadata,\n  ResolvedViewport,\n} from './types/metadata-interface'\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback'\nimport type { MetadataContext } from './types/resolvers'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n} from '../framework/boundary-constants'\nimport { AsyncMetadataOutlet } from '../../client/components/metadata/async-metadata'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { createServerSearchParamsForMetadata } from '../../server/request/search-params'\nimport { createServerPathnameForMetadata } from '../../server/request/pathname'\n\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({\n  tree,\n  pathname,\n  parsedQuery,\n  metadataContext,\n  getDynamicParamFromSegment,\n  appUsingSizeAdjustment,\n  errorType,\n  workStore,\n  MetadataBoundary,\n  ViewportBoundary,\n  serveStreamingMetadata,\n}: {\n  tree: LoaderTree\n  pathname: string\n  parsedQuery: SearchParams\n  metadataContext: MetadataContext\n  getDynamicParamFromSegment: GetDynamicParamFromSegment\n  appUsingSizeAdjustment: boolean\n  errorType?: MetadataErrorType | 'redirect'\n  workStore: WorkStore\n  MetadataBoundary: (props: { children: React.ReactNode }) => React.ReactNode\n  ViewportBoundary: (props: { children: React.ReactNode }) => React.ReactNode\n  serveStreamingMetadata: boolean\n}): {\n  MetadataTree: React.ComponentType\n  ViewportTree: React.ComponentType\n  getMetadataReady: () => Promise<void>\n  getViewportReady: () => Promise<void>\n  StreamingMetadataOutlet: React.ComponentType | null\n} {\n  const searchParams = createServerSearchParamsForMetadata(\n    parsedQuery,\n    workStore\n  )\n  const pathnameForMetadata = createServerPathnameForMetadata(\n    pathname,\n    workStore\n  )\n\n  function ViewportTree() {\n    return (\n      <>\n        <ViewportBoundary>\n          <Viewport />\n        </ViewportBoundary>\n        {/* This meta tag is for next/font which is still required to be blocking. */}\n        {appUsingSizeAdjustment ? (\n          <meta name=\"next-size-adjust\" content=\"\" />\n        ) : null}\n      </>\n    )\n  }\n\n  function MetadataTree() {\n    return (\n      <MetadataBoundary>\n        <Metadata />\n      </MetadataBoundary>\n    )\n  }\n\n  function viewport() {\n    return getResolvedViewport(\n      tree,\n      searchParams,\n      getDynamicParamFromSegment,\n      workStore,\n      errorType\n    )\n  }\n\n  async function Viewport() {\n    try {\n      return await viewport()\n    } catch (error) {\n      if (!errorType && isHTTPAccessFallbackError(error)) {\n        try {\n          return await getNotFoundViewport(\n            tree,\n            searchParams,\n            getDynamicParamFromSegment,\n            workStore\n          )\n        } catch {}\n      }\n      // We don't actually want to error in this component. We will\n      // also error in the MetadataOutlet which causes the error to\n      // bubble from the right position in the page to be caught by the\n      // appropriate boundaries\n      return null\n    }\n  }\n  Viewport.displayName = VIEWPORT_BOUNDARY_NAME\n\n  function metadata() {\n    return getResolvedMetadata(\n      tree,\n      pathnameForMetadata,\n      searchParams,\n      getDynamicParamFromSegment,\n      metadataContext,\n      workStore,\n      errorType\n    )\n  }\n\n  async function resolveFinalMetadata(): Promise<StreamingMetadataResolvedState> {\n    let result: React.ReactNode\n    let error = null\n    try {\n      result = await metadata()\n      return {\n        metadata: result,\n        error: null,\n        digest: undefined,\n      }\n    } catch (metadataErr) {\n      error = metadataErr\n      if (!errorType && isHTTPAccessFallbackError(metadataErr)) {\n        try {\n          result = await getNotFoundMetadata(\n            tree,\n            pathnameForMetadata,\n            searchParams,\n            getDynamicParamFromSegment,\n            metadataContext,\n            workStore\n          )\n          return {\n            metadata: result,\n            error,\n            digest: (error as any)?.digest,\n          }\n        } catch (notFoundMetadataErr) {\n          error = notFoundMetadataErr\n          // In PPR rendering we still need to throw the postpone error.\n          // If metadata is postponed, React needs to be aware of the location of error.\n          if (serveStreamingMetadata && isPostpone(notFoundMetadataErr)) {\n            throw notFoundMetadataErr\n          }\n        }\n      }\n      // In PPR rendering we still need to throw the postpone error.\n      // If metadata is postponed, React needs to be aware of the location of error.\n      if (serveStreamingMetadata && isPostpone(metadataErr)) {\n        throw metadataErr\n      }\n      // We don't actually want to error in this component. We will\n      // also error in the MetadataOutlet which causes the error to\n      // bubble from the right position in the page to be caught by the\n      // appropriate boundaries\n      return {\n        metadata: result,\n        error,\n        digest: (error as any)?.digest,\n      }\n    }\n  }\n\n  function Metadata() {\n    if (!serveStreamingMetadata) {\n      return <MetadataResolver />\n    }\n    return (\n      <div hidden>\n        <Suspense fallback={null}>\n          <MetadataResolver />\n        </Suspense>\n      </div>\n    )\n  }\n\n  async function MetadataResolver() {\n    const metadataState = await resolveFinalMetadata()\n    return metadataState.metadata\n  }\n\n  Metadata.displayName = METADATA_BOUNDARY_NAME\n\n  async function getMetadataReady(): Promise<void> {\n    // Only warm up metadata() call when it's blocking metadata,\n    // otherwise it will be fully managed by AsyncMetadata component.\n    if (!serveStreamingMetadata) {\n      await metadata()\n    }\n    return undefined\n  }\n\n  async function getViewportReady(): Promise<void> {\n    await viewport()\n    return undefined\n  }\n\n  function StreamingMetadataOutletImpl() {\n    return <AsyncMetadataOutlet promise={resolveFinalMetadata()} />\n  }\n\n  const StreamingMetadataOutlet = serveStreamingMetadata\n    ? StreamingMetadataOutletImpl\n    : null\n\n  return {\n    ViewportTree,\n    MetadataTree,\n    getViewportReady,\n    getMetadataReady,\n    StreamingMetadataOutlet,\n  }\n}\n\nconst getResolvedMetadata = cache(getResolvedMetadataImpl)\nasync function getResolvedMetadataImpl(\n  tree: LoaderTree,\n  pathname: Promise<string>,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  metadataContext: MetadataContext,\n  workStore: WorkStore,\n  errorType?: MetadataErrorType | 'redirect'\n): Promise<React.ReactNode> {\n  const errorConvention = errorType === 'redirect' ? undefined : errorType\n  return renderMetadata(\n    tree,\n    pathname,\n    searchParams,\n    getDynamicParamFromSegment,\n    metadataContext,\n    workStore,\n    errorConvention\n  )\n}\n\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl)\nasync function getNotFoundMetadataImpl(\n  tree: LoaderTree,\n  pathname: Promise<string>,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  metadataContext: MetadataContext,\n  workStore: WorkStore\n): Promise<React.ReactNode> {\n  const notFoundErrorConvention = 'not-found'\n  return renderMetadata(\n    tree,\n    pathname,\n    searchParams,\n    getDynamicParamFromSegment,\n    metadataContext,\n    workStore,\n    notFoundErrorConvention\n  )\n}\n\nconst getResolvedViewport = cache(getResolvedViewportImpl)\nasync function getResolvedViewportImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore,\n  errorType?: MetadataErrorType | 'redirect'\n): Promise<React.ReactNode> {\n  const errorConvention = errorType === 'redirect' ? undefined : errorType\n  return renderViewport(\n    tree,\n    searchParams,\n    getDynamicParamFromSegment,\n    workStore,\n    errorConvention\n  )\n}\n\nconst getNotFoundViewport = cache(getNotFoundViewportImpl)\nasync function getNotFoundViewportImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore\n): Promise<React.ReactNode> {\n  const notFoundErrorConvention = 'not-found'\n  return renderViewport(\n    tree,\n    searchParams,\n    getDynamicParamFromSegment,\n    workStore,\n    notFoundErrorConvention\n  )\n}\n\nasync function renderMetadata(\n  tree: LoaderTree,\n  pathname: Promise<string>,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  metadataContext: MetadataContext,\n  workStore: WorkStore,\n  errorConvention?: MetadataErrorType\n) {\n  const resolvedMetadata = await resolveMetadata(\n    tree,\n    pathname,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    workStore,\n    metadataContext\n  )\n  const elements: Array<React.ReactNode> =\n    createMetadataElements(resolvedMetadata)\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nasync function renderViewport(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  workStore: WorkStore,\n  errorConvention?: MetadataErrorType\n) {\n  const resolvedViewport = await resolveViewport(\n    tree,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    workStore\n  )\n\n  const elements: Array<React.ReactNode> =\n    createViewportElements(resolvedViewport)\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nfunction createMetadataElements(metadata: ResolvedMetadata) {\n  return MetaFilter([\n    BasicMeta({ metadata }),\n    AlternatesMetadata({ alternates: metadata.alternates }),\n    ItunesMeta({ itunes: metadata.itunes }),\n    FacebookMeta({ facebook: metadata.facebook }),\n    PinterestMeta({ pinterest: metadata.pinterest }),\n    FormatDetectionMeta({ formatDetection: metadata.formatDetection }),\n    VerificationMeta({ verification: metadata.verification }),\n    AppleWebAppMeta({ appleWebApp: metadata.appleWebApp }),\n    OpenGraphMetadata({ openGraph: metadata.openGraph }),\n    TwitterMetadata({ twitter: metadata.twitter }),\n    AppLinksMeta({ appLinks: metadata.appLinks }),\n    IconsMetadata({ icons: metadata.icons }),\n  ])\n}\n\nfunction createViewportElements(viewport: ResolvedViewport) {\n  return MetaFilter([ViewportMeta({ viewport: viewport })])\n}\n"],"names":["createMetadataComponents","tree","pathname","parsedQuery","metadataContext","getDynamicParamFromSegment","appUsingSizeAdjustment","errorType","workStore","MetadataBoundary","ViewportBoundary","serveStreamingMetadata","searchParams","createServerSearchParamsForMetadata","pathnameForMetadata","createServerPathnameForMetadata","ViewportTree","Viewport","meta","name","content","MetadataTree","Metadata","viewport","getResolvedViewport","error","isHTTPAccessFallbackError","getNotFoundViewport","displayName","VIEWPORT_BOUNDARY_NAME","metadata","getResolvedMetadata","resolveFinalMetadata","result","digest","undefined","metadataErr","getNotFoundMetadata","notFoundMetadataErr","isPostpone","MetadataResolver","div","hidden","Suspense","fallback","metadataState","METADATA_BOUNDARY_NAME","getMetadataReady","getViewportReady","StreamingMetadataOutletImpl","AsyncMetadataOutlet","promise","StreamingMetadataOutlet","cache","getResolvedMetadataImpl","errorConvention","renderMetadata","getNotFoundMetadataImpl","notFoundErrorConvention","getResolvedViewportImpl","renderViewport","getNotFoundViewportImpl","resolvedMetadata","resolveMetadata","elements","createMetadataElements","map","el","index","cloneElement","key","resolvedViewport","resolveViewport","createViewportElements","MetaFilter","BasicMeta","AlternatesMetadata","alternates","ItunesMeta","itunes","FacebookMeta","facebook","PinterestMeta","pinterest","FormatDetectionMeta","formatDetection","VerificationMeta","verification","AppleWebAppMeta","appleWebApp","OpenGraphMetadata","openGraph","TwitterMetadata","twitter","AppLinksMeta","appLinks","IconsMetadata","icons","ViewportMeta"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3332, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/detached-promise.ts"],"sourcesContent":["/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n"],"names":["DetachedPromise","constructor","resolve","reject","promise","Promise","res","rej"],"mappings":"AAAA;;;;;CAKC;;;+BACYA,mBAAAA;;;eAAAA;;;AAAN,MAAMA;IAKXC,aAAc;QACZ,IAAIC;QACJ,IAAIC;QAEJ,6DAA6D;QAC7D,IAAI,CAACC,OAAO,GAAG,IAAIC,QAAW,CAACC,KAAKC;YAClCL,UAAUI;YACVH,SAASI;QACX;QAEA,yEAAyE;QACzE,iBAAiB;QACjB,IAAI,CAACL,OAAO,GAAGA;QACf,IAAI,CAACC,MAAM,GAAGA;IAChB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3365, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/format-server-error.ts"],"sourcesContent":["const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n"],"names":["formatServerError","getStackWithoutErrorMessage","invalidServerComponentReactHooks","setMessage","error","message","stack","lines","split","join","replace","includes","addedMessage","clientHook","regex","RegExp","test"],"mappings":";;;;;;;;;;;;;;IAwCgBA,iBAAiB,EAAA;eAAjBA;;IANAC,2BAA2B,EAAA;eAA3BA;;;AAlChB,MAAMC,mCAAmC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAASC,WAAWC,KAAY,EAAEC,OAAe;IAC/CD,MAAMC,OAAO,GAAGA;IAChB,IAAID,MAAME,KAAK,EAAE;QACf,MAAMC,QAAQH,MAAME,KAAK,CAACE,KAAK,CAAC;QAChCD,KAAK,CAAC,EAAE,GAAGF;QACXD,MAAME,KAAK,GAAGC,MAAME,IAAI,CAAC;IAC3B;AACF;AAYO,SAASR,4BAA4BG,KAAY;IACtD,MAAME,QAAQF,MAAME,KAAK;IACzB,IAAI,CAACA,OAAO,OAAO;IACnB,OAAOA,MAAMI,OAAO,CAAC,aAAa;AACpC;AAEO,SAASV,kBAAkBI,KAAY;IAC5C,IAAI,OAAA,CAAOA,SAAAA,OAAAA,KAAAA,IAAAA,MAAOC,OAAO,MAAK,UAAU;IAExC,IACED,MAAMC,OAAO,CAACM,QAAQ,CACpB,+DAEF;QACA,MAAMC,eACJ;QAEF,qEAAqE;QACrE,IAAIR,MAAMC,OAAO,CAACM,QAAQ,CAACC,eAAe;QAE1CT,WACEC,OACA,GAEJQ,OAFOR,MAAMC,OAAO,EAAC,QAErBO,CAAc;QAEZ;IACF;IAEA,IAAIR,MAAMC,OAAO,CAACM,QAAQ,CAAC,oCAAoC;QAC7DR,WACEC,OACA;QAEF;IACF;IAEA,KAAK,MAAMS,cAAcX,iCAAkC;QACzD,MAAMY,QAAQ,IAAIC,OAAO,AAAC,GAAG,UAAEF,YAAW,sBAAsB,CAAC;QACjE,IAAIC,MAAME,IAAI,CAACZ,MAAMC,OAAO,GAAG;YAC7BF,WACEC,OACA,UAAGS,YAAW,oLAAoL,CAAC;YAErM;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3438, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/constants.ts"],"sourcesContent":["import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n"],"names":["ACTION_SUFFIX","APP_DIR_ALIAS","CACHE_ONE_YEAR","DOT_NEXT_ALIAS","ESLINT_DEFAULT_DIRS","GSP_NO_RETURNED_VALUE","GSSP_COMPONENT_MEMBER_ERROR","GSSP_NO_RETURNED_VALUE","HTML_CONTENT_TYPE_HEADER","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","JSON_CONTENT_TYPE_HEADER","MATCHED_PATH_HEADER","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","NEXT_BODY_SUFFIX","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_DATA_SUFFIX","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_META_SUFFIX","NEXT_QUERY_PARAM_PREFIX","NEXT_RESUME_HEADER","NON_STANDARD_NODE_ENV","PAGES_DIR_ALIAS","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","PUBLIC_DIR_MIDDLEWARE_CONFLICT","ROOT_DIR_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","SERVER_PROPS_EXPORT_ERROR","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SERVER_RUNTIME","SSG_FALLBACK_EXPORT_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","TEXT_PLAIN_CONTENT_TYPE_HEADER","UNSTABLE_REVALIDATE_RENAME_ERROR","WEBPACK_LAYERS","WEBPACK_RESOURCE_QUERIES","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","edgeSSREntry","metadata","metadataRoute","metadataImageMeta"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3834, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/error-telemetry-utils.ts"],"sourcesContent":["const ERROR_CODE_DELIMITER = '@'\n\n/**\n * Augments the digest field of errors thrown in React Server Components (RSC) with an error code.\n * Since RSC errors can only be serialized through the digest field, this provides a way to include\n * an additional error code that can be extracted client-side via `extractNextErrorCode`.\n *\n * The error code is appended to the digest string with a semicolon separator, allowing it to be\n * parsed out later while preserving the original digest value.\n */\nexport const createDigestWithErrorCode = (\n  thrownValue: unknown,\n  originalDigest: string\n): string => {\n  if (\n    typeof thrownValue === 'object' &&\n    thrownValue !== null &&\n    '__NEXT_ERROR_CODE' in thrownValue\n  ) {\n    return `${originalDigest}${ERROR_CODE_DELIMITER}${thrownValue.__NEXT_ERROR_CODE}`\n  }\n  return originalDigest\n}\n\nexport const extractNextErrorCode = (error: unknown): string | undefined => {\n  if (\n    typeof error === 'object' &&\n    error !== null &&\n    '__NEXT_ERROR_CODE' in error &&\n    typeof error.__NEXT_ERROR_CODE === 'string'\n  ) {\n    return error.__NEXT_ERROR_CODE\n  }\n\n  if (\n    typeof error === 'object' &&\n    error !== null &&\n    'digest' in error &&\n    typeof error.digest === 'string'\n  ) {\n    const segments = error.digest.split(ERROR_CODE_DELIMITER)\n    const errorCode = segments.find((segment) => segment.startsWith('E'))\n    return errorCode\n  }\n\n  return undefined\n}\n"],"names":["createDigestWithErrorCode","extractNextErrorCode","ERROR_CODE_DELIMITER","thrownValue","originalDigest","__NEXT_ERROR_CODE","error","digest","segments","split","errorCode","find","segment","startsWith","undefined"],"mappings":";;;;;;;;;;;;;;IAUaA,yBAAyB,EAAA;eAAzBA;;IAcAC,oBAAoB,EAAA;eAApBA;;;AAxBb,MAAMC,uBAAuB;AAUtB,MAAMF,4BAA4B,CACvCG,aACAC;IAEA,IACE,OAAOD,gBAAgB,YACvBA,gBAAgB,QAChB,uBAAuBA,aACvB;QACA,OAAO,UAAGC,uBAAiBF,sBAAoD,CAAE,MAA/BC,YAAYE,iBAAiB;IACjF;IACA,OAAOD;AACT;AAEO,MAAMH,uBAAuB,CAACK;IACnC,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,uBAAuBA,SACvB,OAAOA,MAAMD,iBAAiB,KAAK,UACnC;QACA,OAAOC,MAAMD,iBAAiB;IAChC;IAEA,IACE,OAAOC,UAAU,YACjBA,UAAU,QACV,YAAYA,SACZ,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,MAAMC,WAAWF,MAAMC,MAAM,CAACE,KAAK,CAACP;QACpC,MAAMQ,YAAYF,SAASG,IAAI,CAAC,CAACC,UAAYA,QAAQC,UAAU,CAAC;QAChE,OAAOH;IACT;IAEA,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3877, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/batcher.ts"],"sourcesContent":["import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n"],"names":["Batcher","cacheKeyFn","schedulerFn","fn","pending","Map","create","options","batch","key","cacheKey","Promise","resolve","get","promise","reject","DetachedPromise","set","result","err","delete"],"mappings":";;;+BAsBaA,WAAAA;;;eAAAA;;;iCApBmB;AAoBzB,MAAMA;IAyBX,OAAcM,OACZC,OAA8B,EACZ;QAClB,OAAO,IAAIP,QAAiBO,WAAAA,OAAAA,KAAAA,IAAAA,QAASN,UAAU,EAAEM,WAAAA,OAAAA,KAAAA,IAAAA,QAASL,WAAW;IACvE;IAEA;;;;;;;;;GASC,GACD,MAAaM,MAAMC,GAAM,EAAEN,EAAgB,EAAc;QACvD,MAAMO,WAAY,IAAI,CAACT,UAAU,GAAG,MAAM,IAAI,CAACA,UAAU,CAACQ,OAAOA;QACjE,IAAIC,aAAa,MAAM;YACrB,OAAOP,GAAGO,UAAUC,QAAQC,OAAO;QACrC;QAEA,MAAMR,UAAU,IAAI,CAACA,OAAO,CAACS,GAAG,CAACH;QACjC,IAAIN,SAAS,OAAOA;QAEpB,MAAM,EAAEU,OAAO,EAAEF,OAAO,EAAEG,MAAM,EAAE,GAAG,IAAIC,iBAAAA,eAAe;QACxD,IAAI,CAACZ,OAAO,CAACa,GAAG,CAACP,UAAUI;QAE3B,IAAI,CAACZ,WAAW,CAAC;YACf,IAAI;gBACF,MAAMgB,SAAS,MAAMf,GAAGO,UAAUE;gBAElC,kEAAkE;gBAClE,qDAAqD;gBACrDA,QAAQM;YACV,EAAE,OAAOC,KAAK;gBACZJ,OAAOI;YACT,SAAU;gBACR,IAAI,CAACf,OAAO,CAACgB,MAAM,CAACV;YACtB;QACF;QAEA,OAAOI;IACT;IAjEA,YACmBb,UAA6B,EAC9C;;;;KAIC,GACgBC,cAAiC,CAACC,KAAOA,IAAI,CAC9D;aAPiBF,UAAAA,GAAAA;aAMAC,WAAAA,GAAAA;aATFE,OAAAA,GAAU,IAAIC;IAU5B;AA0DL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3937, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/client-and-server-references.ts"],"sourcesContent":["import { extractInfoFromServerReferenceId } from '../shared/lib/server-reference-info'\n\n// Only contains the properties we're interested in.\nexport interface ServerReference {\n  $$typeof: Symbol\n  $$id: string\n}\n\nexport type ServerFunction = ServerReference &\n  ((...args: unknown[]) => Promise<unknown>)\n\nexport function isServerReference<T>(\n  value: T & Partial<ServerReference>\n): value is T & ServerFunction {\n  return value.$$typeof === Symbol.for('react.server.reference')\n}\n\nexport function isUseCacheFunction<T>(\n  value: T & Partial<ServerReference>\n): value is T & ServerFunction {\n  if (!isServerReference(value)) {\n    return false\n  }\n\n  const { type } = extractInfoFromServerReferenceId(value.$$id)\n\n  return type === 'use-cache'\n}\n\nexport function isClientReference(mod: any): boolean {\n  const defaultExport = mod?.default || mod\n  return defaultExport?.$$typeof === Symbol.for('react.client.reference')\n}\n"],"names":["isClientReference","isServerReference","isUseCacheFunction","value","$$typeof","Symbol","for","type","extractInfoFromServerReferenceId","$$id","mod","defaultExport","default"],"mappings":";;;;;;;;;;;;;;;IA6BgBA,iBAAiB,EAAA;eAAjBA;;IAlBAC,iBAAiB,EAAA;eAAjBA;;IAMAC,kBAAkB,EAAA;eAAlBA;;;qCAjBiC;AAW1C,SAASD,kBACdE,KAAmC;IAEnC,OAAOA,MAAMC,QAAQ,KAAKC,OAAOC,GAAG,CAAC;AACvC;AAEO,SAASJ,mBACdC,KAAmC;IAEnC,IAAI,CAACF,kBAAkBE,QAAQ;QAC7B,OAAO;IACT;IAEA,MAAM,EAAEI,IAAI,EAAE,GAAGC,CAAAA,GAAAA,qBAAAA,gCAAgC,EAACL,MAAMM,IAAI;IAE5D,OAAOF,SAAS;AAClB;AAEO,SAASP,kBAAkBU,GAAQ;IACxC,MAAMC,gBAAgBD,CAAAA,OAAAA,OAAAA,KAAAA,IAAAA,IAAKE,OAAO,KAAIF;IACtC,OAAOC,CAAAA,iBAAAA,OAAAA,KAAAA,IAAAA,cAAeP,QAAQ,MAAKC,OAAOC,GAAG,CAAC;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3981, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/semver-noop.ts"],"sourcesContent":["// DO NOT MODIFY THIS FILE DIRECTLY\n// It's for aliasing the `semver` package to be a noop for the `jsonwebtoken` package.\n// We're trying to minimize the size of the worker bundle.\n\nexport function satisfies() {\n  return true\n}\n"],"names":["satisfies"],"mappings":"AAAA,mCAAmC;AACnC,sFAAsF;AACtF,0DAA0D;;;;+BAE1CA,aAAAA;;;eAAAA;;;AAAT,SAASA;IACd,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4000, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/pick.ts"],"sourcesContent":["export function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const newObj = {} as Pick<T, K>\n  for (const key of keys) {\n    newObj[key] = obj[key]\n  }\n  return newObj\n}\n"],"names":["pick","obj","keys","newObj","key"],"mappings":";;;+BAAgBA,QAAAA;;;eAAAA;;;AAAT,SAASA,KAA2BC,GAAM,EAAEC,IAAS;IAC1D,MAAMC,SAAS,CAAC;IAChB,KAAK,MAAMC,OAAOF,KAAM;QACtBC,MAAM,CAACC,IAAI,GAAGH,GAAG,CAACG,IAAI;IACxB;IACA,OAAOD;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4020, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/route-pattern-normalizer.ts"],"sourcesContent":["import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nconst PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n"],"names":["hasAdjacentParameterIssues","normalizeAdjacentParameters","normalizeTokensForRegexp","stripParameterSeparators","PARAM_SEPARATOR","route","test","normalized","replace","tokens","map","token","modifier","prefix","suffix","params","cleaned","key","value","Object","entries","RegExp","Array","isArray","item"],"mappings":";;;;;;;;;;;;;;;;IAqBgBA,0BAA0B,EAAA;eAA1BA;;IAuBAC,2BAA2B,EAAA;eAA3BA;;IAuBAC,wBAAwB,EAAA;eAAxBA;;IAoCAC,wBAAwB,EAAA;eAAxBA;;;AArGhB;;;;;;;CAOC,GAED;;;;CAIC,GACD,MAAMC,kBAAkB;AAKjB,SAASJ,2BAA2BK,KAAa;IACtD,IAAI,OAAOA,UAAU,UAAU,OAAO;IAEtC,0EAA0E;IAC1E,qEAAqE;IACrE,sEAAsE;IACtE,IAAI,wBAAwBC,IAAI,CAACD,QAAQ;QACvC,OAAO;IACT;IAEA,yDAAyD;IACzD,kEAAkE;IAClE,IAAI,iDAAiDC,IAAI,CAACD,QAAQ;QAChE,OAAO;IACT;IAEA,OAAO;AACT;AAMO,SAASJ,4BAA4BI,KAAa;IACvD,IAAIE,aAAaF;IAEjB,sEAAsE;IACtEE,aAAaA,WAAWC,OAAO,CAC7B,0BACA,AAAC,EAAE,UAAEJ,iBAAgB,GAAG,CAAC;IAG3B,sFAAsF;IACtFG,aAAaA,WAAWC,OAAO,CAAC,sBAAsB,AAAC,GAAG,GAAEJ,CAAiB,MAAjBA;IAE5D,OAAOG;AACT;AAUO,SAASL,yBAAyBO,MAAe;IACtD,OAAOA,OAAOC,GAAG,CAAC,CAACC;QACjB,iDAAiD;QACjD,sEAAsE;QACtE,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,4EAA4E;QAC5E,cAAcA,SACd,+DAA+D;QAC/D,+CAA+C;QAC9CA,CAAAA,MAAMC,QAAQ,KAAK,OAAOD,MAAMC,QAAQ,KAAK,GAAE,KAChD,qEAAqE;QACrE,YAAYD,SACZ,YAAYA,SACZ,+CAA+C;QAC/C,6DAA6D;QAC7DA,MAAME,MAAM,KAAK,MACjBF,MAAMG,MAAM,KAAK,IACjB;YACA,0DAA0D;YAC1D,mFAAmF;YACnF,mFAAmF;YACnF,OAAO;gBACL,GAAGH,KAAK;gBACRE,QAAQ;YACV;QACF;QACA,OAAOF;IACT;AACF;AAMO,SAASR,yBACdY,MAA2B;IAE3B,MAAMC,UAA+B,CAAC;IAEtC,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACL,QAAS;QACjD,IAAI,OAAOG,UAAU,UAAU;YAC7B,sEAAsE;YACtEF,OAAO,CAACC,IAAI,GAAGC,MAAMV,OAAO,CAAC,IAAIa,OAAO,AAAC,CAAC,GAAEjB,CAAiB,MAAjBA,mBAAoB;QAClE,OAAO,IAAIkB,MAAMC,OAAO,CAACL,QAAQ;YAC/B,yDAAyD;YACzDF,OAAO,CAACC,IAAI,GAAGC,MAAMR,GAAG,CAAC,CAACc,OACxB,OAAOA,SAAS,WACZA,KAAKhB,OAAO,CAAC,IAAIa,OAAO,AAAC,CAAC,GAAEjB,CAAiB,MAAjBA,mBAAoB,MAChDoB;QAER,OAAO;YACLR,OAAO,CAACC,IAAI,GAAGC;QACjB;IACF;IAEA,OAAOF;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4125, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sayeed/Desktop/next/furniture/node_modules/next/src/lib/fallback.ts"],"sourcesContent":["/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n"],"names":["FallbackMode","fallbackModeToFallbackField","parseFallbackField","parseStaticPathsResult","fallbackField","undefined","Error","fallback","page","result"],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;;;IACiBA,YAAY,EAAA;eAAZA;;IAmDFC,2BAA2B,EAAA;eAA3BA;;IAlBAC,kBAAkB,EAAA;eAAlBA;;IA8CAC,sBAAsB,EAAA;eAAtBA;;;AA/ET,IAAWH,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;IAChB;;;;GAIC,GAAA,YAAA,CAAA,yBAAA,GAAA;IAGD;;;;GAIC,GAAA,YAAA,CAAA,YAAA,GAAA;IAGD;;;GAGC,GAAA,YAAA,CAAA,YAAA,GAAA;WAlBeA;;AAiCX,SAASE,mBACdE,aAAkD;IAElD,IAAI,OAAOA,kBAAkB,UAAU;QACrC,OAAA;IACF,OAAO,IAAIA,kBAAkB,MAAM;QACjC,OAAA;IACF,OAAO,IAAIA,kBAAkB,OAAO;QAClC,OAAA;IACF,OAAO,IAAIA,kBAAkBC,WAAW;QACtC,OAAOA;IACT,OAAO;QACL,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,AAAC,yBAAyB,UAAEF,eAAc,8DAA8D,CAAC,KADrG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;AACF;AAEO,SAASH,4BACdM,QAAsB,EACtBC,IAAwB;IAExB,OAAQD;QACN,KAAA;YACE,OAAO;QACT,KAAA;YACE,OAAO;QACT,KAAA;YACE,IAAI,CAACC,MAAM;gBACT,MAAM,OAAA,cAEL,CAFK,IAAIF,MACR,AAAC,iEAAiE,UAAEC,UAAS,CAAC,CAAC,KAD3E,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YAEA,OAAOC;QACT;YACE,MAAM,OAAA,cAA+C,CAA/C,IAAIF,MAAM,AAAC,uBAAuB,GAAEC,CAAU,MAAVA,YAApC,qBAAA;uBAAA;4BAAA;8BAAA;YAA8C;IACxD;AACF;AAQO,SAASJ,uBACdM,MAA8B;IAE9B,IAAIA,WAAW,MAAM;QACnB,OAAA;IACF,OAAO,IAAIA,WAAW,YAAY;QAChC,OAAA;IACF,OAAO;QACL,OAAA;IACF;AACF","ignoreList":[0],"debugId":null}}]
}